node_num : 60
demand_node_num : 24
edge_num : 90
damaged_edge_num : 45
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 8, 17, 20, 25, 31, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 12), Line(0, 18), Line(0, 22), Line(0, 47), Line(1, 11), Line(1, 14), Line(1, 27), Line(1, 49), Line(1, 54), Line(2, 28), Line(2, 38), Line(3, 4), Line(3, 31), Line(4, 26), Line(4, 33), Line(5, 23), Line(5, 30), Line(6, 22), Line(6, 31), Line(6, 39), Line(6, 42), Line(6, 52), Line(7, 29), Line(7, 41), Line(7, 43), Line(8, 33), Line(8, 56), Line(9, 26), Line(9, 32), Line(9, 46), Line(9, 56), Line(10, 25), Line(10, 44), Line(11, 13), Line(11, 16), Line(12, 19), Line(12, 20), Line(13, 37), Line(13, 40), Line(14, 21), Line(14, 46), Line(15, 48), Line(15, 50), Line(15, 53), Line(16, 45), Line(16, 46), Line(16, 53), Line(17, 32), Line(17, 34), Line(17, 58), Line(18, 29), Line(18, 46), Line(18, 57), Line(19, 22), Line(19, 37), Line(20, 36), Line(20, 44), Line(21, 40), Line(21, 57), Line(23, 38), Line(24, 30), Line(24, 37), Line(24, 58), Line(25, 35), Line(26, 54), Line(26, 59), Line(27, 42), Line(27, 51), Line(28, 36), Line(29, 51), Line(31, 39), Line(31, 54), Line(33, 37), Line(33, 38), Line(34, 53), Line(35, 58), Line(36, 41), Line(39, 40), Line(41, 48), Line(43, 49), Line(45, 46), Line(45, 59), Line(47, 55), Line(50, 54), Line(50, 55), Line(52, 54), Line(52, 55), Line(54, 59), Line(55, 58), Line(58, 59),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 12), Line(0, 18), Line(1, 14), Line(1, 27), Line(2, 28), Line(3, 4), Line(3, 31), Line(4, 26), Line(5, 30), Line(6, 31), Line(7, 41), Line(8, 33), Line(9, 26), Line(9, 46), Line(9, 56), Line(10, 44), Line(11, 16), Line(12, 19), Line(12, 20), Line(13, 40), Line(14, 46), Line(15, 48), Line(15, 53), Line(16, 53), Line(17, 32), Line(17, 34), Line(17, 58), Line(18, 29), Line(19, 22), Line(19, 37), Line(20, 36), Line(21, 40), Line(21, 57), Line(23, 38), Line(24, 30), Line(26, 54), Line(27, 51), Line(29, 51), Line(33, 38), Line(36, 41), Line(41, 48), Line(43, 49), Line(45, 46), Line(47, 55), Line(50, 55),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 12, 4.12);
g.add_edge(0, 18, 4.12);
g.add_edge(0, 22, 7.21);
g.add_edge(0, 47, 5);
g.add_edge(1, 11, 4.47);
g.add_edge(1, 14, 4.12);
g.add_edge(1, 27, 4.12);
g.add_edge(1, 49, 6.4);
g.add_edge(1, 54, 3.16);
g.add_edge(2, 28, 6.32);
g.add_edge(2, 38, 3);
g.add_edge(3, 4, 2.23);
g.add_edge(3, 31, 5.09);
g.add_edge(4, 26, 2.82);
g.add_edge(4, 33, 3.16);
g.add_edge(5, 23, 2.23);
g.add_edge(5, 30, 2.23);
g.add_edge(6, 22, 4);
g.add_edge(6, 31, 5.09);
g.add_edge(6, 39, 5.38);
g.add_edge(6, 42, 10.29);
g.add_edge(6, 52, 9.05);
g.add_edge(7, 29, 3.16);
g.add_edge(7, 41, 2.82);
g.add_edge(7, 43, 4);
g.add_edge(8, 33, 2);
g.add_edge(8, 56, 2);
g.add_edge(9, 26, 6.7);
g.add_edge(9, 32, 8.48);
g.add_edge(9, 46, 4.47);
g.add_edge(9, 56, 4.12);
g.add_edge(10, 25, 5.38);
g.add_edge(10, 44, 3.6);
g.add_edge(11, 13, 6.32);
g.add_edge(11, 16, 4);
g.add_edge(12, 19, 8.6);
g.add_edge(12, 20, 8.24);
g.add_edge(13, 37, 8.06);
g.add_edge(13, 40, 7.21);
g.add_edge(14, 21, 5.38);
g.add_edge(14, 46, 3.6);
g.add_edge(15, 48, 1);
g.add_edge(15, 50, 3.16);
g.add_edge(15, 53, 4.24);
g.add_edge(16, 45, 1.41);
g.add_edge(16, 46, 2.82);
g.add_edge(16, 53, 3);
g.add_edge(17, 32, 2.82);
g.add_edge(17, 34, 3.16);
g.add_edge(17, 58, 7.61);
g.add_edge(18, 29, 4.47);
g.add_edge(18, 46, 3.6);
g.add_edge(18, 57, 3);
g.add_edge(19, 22, 7.28);
g.add_edge(19, 37, 4);
g.add_edge(20, 36, 8.06);
g.add_edge(20, 44, 5.38);
g.add_edge(21, 40, 5.83);
g.add_edge(21, 57, 2.82);
g.add_edge(23, 38, 5.38);
g.add_edge(24, 30, 2.23);
g.add_edge(24, 37, 2.23);
g.add_edge(24, 58, 5.83);
g.add_edge(25, 35, 6.08);
g.add_edge(26, 54, 7);
g.add_edge(26, 59, 8.06);
g.add_edge(27, 42, 3);
g.add_edge(27, 51, 4.12);
g.add_edge(28, 36, 8.06);
g.add_edge(29, 51, 2.23);
g.add_edge(31, 39, 1);
g.add_edge(31, 54, 3.16);
g.add_edge(33, 37, 5.09);
g.add_edge(33, 38, 5);
g.add_edge(34, 53, 2.23);
g.add_edge(35, 58, 5);
g.add_edge(36, 41, 8.06);
g.add_edge(39, 40, 4.12);
g.add_edge(41, 48, 5);
g.add_edge(43, 49, 8.24);
g.add_edge(45, 46, 1.41);
g.add_edge(45, 59, 7.61);
g.add_edge(47, 55, 6.4);
g.add_edge(50, 54, 8.54);
g.add_edge(50, 55, 6.08);
g.add_edge(52, 54, 1.41);
g.add_edge(52, 55, 4.24);
g.add_edge(54, 59, 1.41);
g.add_edge(55, 58, 7.21);
g.add_edge(58, 59, 10.29);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 3.35);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 5.1);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 7.25);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 2.99);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 0);
g.set_importance(31, 1.85);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 2.33);
g.set_importance(36, 6.97);
g.set_importance(37, 6.12);
g.set_importance(38, 0);
g.set_importance(39, 6.42);
g.set_importance(40, 0);
g.set_importance(41, 2.74);
g.set_importance(42, 9.85);
g.set_importance(43, 8.1);
g.set_importance(44, 1.48);
g.set_importance(45, 5.78);
g.set_importance(46, 0);
g.set_importance(47, 9.21);
g.set_importance(48, 4.45);
g.set_importance(49, 0);
g.set_importance(50, 5.55);
g.set_importance(51, 5.08);
g.set_importance(52, 0);
g.set_importance(53, 1.6);
g.set_importance(54, 4.16);
g.set_importance(55, 1.95);
g.set_importance(56, 4.78);
g.set_importance(57, 5.85);
g.set_importance(58, 0);
g.set_importance(59, 6.61);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 12), 4.89);
g.set_repair_time(Line(0, 18), 2.69);
g.set_repair_time(Line(1, 14), 4.64);
g.set_repair_time(Line(1, 27), 1.11);
g.set_repair_time(Line(2, 28), 4.88);
g.set_repair_time(Line(3, 4), 1.1);
g.set_repair_time(Line(3, 31), 1.1);
g.set_repair_time(Line(4, 26), 2.9);
g.set_repair_time(Line(5, 30), 1.85);
g.set_repair_time(Line(6, 31), 1.06);
g.set_repair_time(Line(7, 41), 2.22);
g.set_repair_time(Line(8, 33), 2.6);
g.set_repair_time(Line(9, 26), 1.37);
g.set_repair_time(Line(9, 46), 2.96);
g.set_repair_time(Line(9, 56), 4.22);
g.set_repair_time(Line(10, 44), 3.84);
g.set_repair_time(Line(11, 16), 4.69);
g.set_repair_time(Line(12, 19), 2.76);
g.set_repair_time(Line(12, 20), 4.78);
g.set_repair_time(Line(13, 40), 3.19);
g.set_repair_time(Line(14, 46), 4.47);
g.set_repair_time(Line(15, 48), 2.79);
g.set_repair_time(Line(15, 53), 4.67);
g.set_repair_time(Line(16, 53), 4.64);
g.set_repair_time(Line(17, 32), 3.33);
g.set_repair_time(Line(17, 34), 3.14);
g.set_repair_time(Line(17, 58), 4.68);
g.set_repair_time(Line(18, 29), 2.49);
g.set_repair_time(Line(19, 22), 2.35);
g.set_repair_time(Line(19, 37), 4.86);
g.set_repair_time(Line(20, 36), 3.12);
g.set_repair_time(Line(21, 40), 1.29);
g.set_repair_time(Line(21, 57), 1.55);
g.set_repair_time(Line(23, 38), 3.96);
g.set_repair_time(Line(24, 30), 3.37);
g.set_repair_time(Line(26, 54), 1.15);
g.set_repair_time(Line(27, 51), 3.11);
g.set_repair_time(Line(29, 51), 1.15);
g.set_repair_time(Line(33, 38), 3.08);
g.set_repair_time(Line(36, 41), 2.54);
g.set_repair_time(Line(41, 48), 1.95);
g.set_repair_time(Line(43, 49), 2.08);
g.set_repair_time(Line(45, 46), 1.8);
g.set_repair_time(Line(47, 55), 2.88);
g.set_repair_time(Line(50, 55), 1.61);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 19.3}, {2, 35.3875}, {3, 26.7375}, {4, 27.1375}, {5, 29.2625}, {6, 14.0125}, {7, 14.6875}, {8, 22.8875}, {9, 15.2375}, {10, 26.675}, {11, 18.175}, {12, 5.15}, {13, 26.075}, {14, 14.15}, {15, 22.225}, {16, 13.175}, {17, 23.6625}, {18, 5.15}, {19, 15.9}, {20, 15.45}, {21, 12.425}, {22, 9.0125}, {23, 32.05}, {24, 23.6875}, {25, 33.4}, {26, 23.6125}, {27, 18.675}, {28, 35.6}, {29, 10.7375}, {30, 26.475}, {31, 20.375}, {32, 25.8375}, {33, 25.3875}, {34, 19.7125}, {35, 29.5125}, {36, 25.525}, {37, 20.9}, {38, 31.6375}, {39, 20.7375}, {40, 19.7125}, {41, 18.2125}, {42, 22.425}, {43, 19.6875}, {44, 22.175}, {45, 11.4125}, {46, 9.65}, {47, 6.25}, {48, 23.475}, {49, 27.3}, {50, 21.85}, {51, 13.525}, {52, 19.55}, {53, 16.925}, {54, 21.3125}, {55, 14.25}, {56, 20.3875}, {57, 8.9}, {58, 23.2625}, {59, 20.925}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 19.3}, {1, 0}, {2, 30.175}, {3, 14.2625}, {4, 16.225}, {5, 31.4375}, {6, 14.2625}, {7, 17.0375}, {8, 22.675}, {9, 15.2375}, {10, 39.15}, {11, 5.5875}, {12, 24.45}, {13, 13.4875}, {14, 5.15}, {15, 18.575}, {16, 10.5875}, {17, 21.075}, {18, 14.15}, {19, 28.3625}, {20, 34.75}, {21, 11.875}, {22, 19.2625}, {23, 33.15}, {24, 25.8625}, {25, 32.425}, {26, 12.7}, {27, 5.15}, {28, 38.075}, {29, 13.0875}, {30, 28.65}, {31, 7.9}, {32, 24.6}, {33, 20.175}, {34, 17.125}, {35, 24.825}, {36, 30.6375}, {37, 23.5625}, {38, 26.425}, {39, 9.15}, {40, 14.3}, {41, 20.5625}, {42, 8.9}, {43, 18.3}, {44, 41.475}, {45, 11.4125}, {46, 9.65}, {47, 19.0125}, {48, 19.825}, {49, 8}, {50, 14.625}, {51, 10.3}, {52, 5.7125}, {53, 14.3375}, {54, 3.95}, {55, 11.0125}, {56, 20.3875}, {57, 15.4}, {58, 18.575}, {59, 5.7125}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 35.3875}, {1, 30.175}, {2, 0}, {3, 16.7375}, {4, 13.95}, {5, 13.2625}, {6, 29.4625}, {7, 31.575}, {8, 12.5}, {9, 20.15}, {10, 39.275}, {11, 34.2625}, {12, 32.1125}, {13, 26.4375}, {14, 30.2375}, {15, 35.55}, {16, 29.2625}, {17, 34.275}, {18, 30.2375}, {19, 21.3625}, {20, 28.05}, {21, 36.7875}, {22, 30.4625}, {23, 10.475}, {24, 18.8375}, {25, 39.975}, {26, 17.475}, {27, 35.325}, {28, 7.9}, {29, 35.525}, {30, 16.05}, {31, 23.1}, {32, 30.75}, {33, 10}, {34, 35.8}, {35, 32.375}, {36, 17.975}, {37, 16.3625}, {38, 3.75}, {39, 24.35}, {40, 29.5}, {41, 28.05}, {42, 39.075}, {43, 36.575}, {44, 34.775}, {45, 27.5}, {46, 25.7375}, {47, 41.2875}, {48, 34.3}, {49, 38.175}, {50, 36.9}, {51, 38.3125}, {52, 27.9875}, {53, 33.0125}, {54, 26.225}, {55, 33.2875}, {56, 15}, {57, 33.9875}, {58, 26.125}, {59, 27.55}, 