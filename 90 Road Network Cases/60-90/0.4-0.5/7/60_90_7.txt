node_num : 60
demand_node_num : 24
edge_num : 90
damaged_edge_num : 45
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 8, 9, 10, 12, 15, 16, 17, 18, 20, 21, 23, 24, 28, 38, 41, 42, 45, 48, 49, 52, 53, 55, 57,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 20), Line(0, 30), Line(0, 35), Line(0, 59), Line(1, 6), Line(1, 27), Line(1, 32), Line(2, 8), Line(2, 25), Line(2, 36), Line(3, 12), Line(3, 15), Line(3, 33), Line(3, 55), Line(4, 9), Line(5, 17), Line(5, 25), Line(6, 47), Line(6, 49), Line(6, 53), Line(7, 17), Line(7, 37), Line(7, 47), Line(7, 49), Line(8, 21), Line(8, 51), Line(9, 28), Line(9, 41), Line(9, 50), Line(10, 28), Line(10, 43), Line(10, 56), Line(11, 17), Line(11, 24), Line(11, 36), Line(12, 23), Line(12, 27), Line(13, 15), Line(13, 39), Line(13, 50), Line(14, 48), Line(14, 57), Line(14, 58), Line(15, 48), Line(15, 57), Line(16, 34), Line(16, 50), Line(17, 18), Line(17, 52), Line(17, 57), Line(18, 56), Line(18, 59), Line(19, 22), Line(19, 38), Line(19, 45), Line(19, 53), Line(20, 40), Line(21, 26), Line(21, 53), Line(21, 55), Line(22, 29), Line(22, 38), Line(23, 44), Line(24, 58), Line(25, 49), Line(26, 54), Line(27, 28), Line(27, 34), Line(28, 33), Line(28, 35), Line(28, 52), Line(29, 31), Line(30, 37), Line(30, 45), Line(31, 42), Line(32, 40), Line(33, 37), Line(35, 44), Line(38, 42), Line(38, 47), Line(39, 55), Line(41, 42), Line(42, 53), Line(43, 44), Line(43, 51), Line(44, 59), Line(45, 46), Line(46, 54), Line(46, 57), Line(48, 53),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 30), Line(1, 27), Line(2, 36), Line(3, 15), Line(3, 33), Line(3, 55), Line(5, 17), Line(6, 53), Line(7, 17), Line(7, 47), Line(7, 49), Line(8, 21), Line(8, 51), Line(9, 28), Line(9, 41), Line(9, 50), Line(10, 28), Line(11, 24), Line(12, 23), Line(13, 15), Line(13, 39), Line(15, 48), Line(15, 57), Line(16, 34), Line(18, 59), Line(19, 22), Line(19, 45), Line(20, 40), Line(21, 26), Line(21, 55), Line(23, 44), Line(26, 54), Line(27, 28), Line(28, 35), Line(29, 31), Line(33, 37), Line(38, 42), Line(38, 47), Line(39, 55), Line(41, 42), Line(42, 53), Line(43, 44), Line(43, 51), Line(44, 59), Line(46, 54),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 20, 5.38);
g.add_edge(0, 30, 2);
g.add_edge(0, 35, 3.6);
g.add_edge(0, 59, 2.82);
g.add_edge(1, 6, 2.82);
g.add_edge(1, 27, 5);
g.add_edge(1, 32, 3);
g.add_edge(2, 8, 4);
g.add_edge(2, 25, 4.47);
g.add_edge(2, 36, 8.6);
g.add_edge(3, 12, 7.07);
g.add_edge(3, 15, 6.7);
g.add_edge(3, 33, 8.06);
g.add_edge(3, 55, 3);
g.add_edge(4, 9, 6.08);
g.add_edge(5, 17, 5);
g.add_edge(5, 25, 5.09);
g.add_edge(6, 47, 3);
g.add_edge(6, 49, 7);
g.add_edge(6, 53, 5);
g.add_edge(7, 17, 2.23);
g.add_edge(7, 37, 3.6);
g.add_edge(7, 47, 7.07);
g.add_edge(7, 49, 2);
g.add_edge(8, 21, 8);
g.add_edge(8, 51, 6);
g.add_edge(9, 28, 8);
g.add_edge(9, 41, 12.04);
g.add_edge(9, 50, 9.84);
g.add_edge(10, 28, 7.61);
g.add_edge(10, 43, 1);
g.add_edge(10, 56, 8.24);
g.add_edge(11, 17, 5.83);
g.add_edge(11, 24, 5.38);
g.add_edge(11, 36, 1);
g.add_edge(12, 23, 6);
g.add_edge(12, 27, 5.38);
g.add_edge(13, 15, 1);
g.add_edge(13, 39, 7.07);
g.add_edge(13, 50, 5.38);
g.add_edge(14, 48, 3);
g.add_edge(14, 57, 4.12);
g.add_edge(14, 58, 9);
g.add_edge(15, 48, 6.08);
g.add_edge(15, 57, 3.6);
g.add_edge(16, 34, 5.65);
g.add_edge(16, 50, 6.4);
g.add_edge(17, 18, 2.82);
g.add_edge(17, 52, 6.7);
g.add_edge(17, 57, 2.82);
g.add_edge(18, 56, 6);
g.add_edge(18, 59, 4.24);
g.add_edge(19, 22, 7.21);
g.add_edge(19, 38, 7.07);
g.add_edge(19, 45, 2.23);
g.add_edge(19, 53, 4.12);
g.add_edge(20, 40, 4.12);
g.add_edge(21, 26, 8.94);
g.add_edge(21, 53, 5.83);
g.add_edge(21, 55, 7.61);
g.add_edge(22, 29, 5.65);
g.add_edge(22, 38, 3.16);
g.add_edge(23, 44, 1);
g.add_edge(24, 58, 5);
g.add_edge(25, 49, 1.41);
g.add_edge(26, 54, 7.61);
g.add_edge(27, 28, 3.6);
g.add_edge(27, 34, 5.38);
g.add_edge(28, 33, 8.06);
g.add_edge(28, 35, 3.6);
g.add_edge(28, 52, 6.08);
g.add_edge(29, 31, 6);
g.add_edge(30, 37, 6.32);
g.add_edge(30, 45, 5);
g.add_edge(31, 42, 6.32);
g.add_edge(32, 40, 2.23);
g.add_edge(33, 37, 8.06);
g.add_edge(35, 44, 5.83);
g.add_edge(38, 42, 3.16);
g.add_edge(38, 47, 3.6);
g.add_edge(39, 55, 8.06);
g.add_edge(41, 42, 8.06);
g.add_edge(42, 53, 5);
g.add_edge(43, 44, 5.09);
g.add_edge(43, 51, 1.41);
g.add_edge(44, 59, 5.38);
g.add_edge(45, 46, 8.6);
g.add_edge(46, 54, 1.41);
g.add_edge(46, 57, 6.4);
g.add_edge(48, 53, 5.38);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 7.28);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 7.8);
g.set_importance(9, 9.07);
g.set_importance(10, 8.23);
g.set_importance(11, 0);
g.set_importance(12, 2.58);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 3);
g.set_importance(16, 2.6);
g.set_importance(17, 4.31);
g.set_importance(18, 9.5);
g.set_importance(19, 0);
g.set_importance(20, 9.88);
g.set_importance(21, 1.42);
g.set_importance(22, 0);
g.set_importance(23, 4.88);
g.set_importance(24, 2.86);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 6.63);
g.set_importance(29, 0);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 2.88);
g.set_importance(39, 0);
g.set_importance(40, 0);
g.set_importance(41, 3.39);
g.set_importance(42, 3.44);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 2.64);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 5);
g.set_importance(49, 6.91);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 8.2);
g.set_importance(53, 4.91);
g.set_importance(54, 0);
g.set_importance(55, 1.28);
g.set_importance(56, 0);
g.set_importance(57, 3.55);
g.set_importance(58, 0);
g.set_importance(59, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 30), 3.55);
g.set_repair_time(Line(1, 27), 3.72);
g.set_repair_time(Line(2, 36), 3.74);
g.set_repair_time(Line(3, 15), 2.08);
g.set_repair_time(Line(3, 33), 4.16);
g.set_repair_time(Line(3, 55), 4.35);
g.set_repair_time(Line(5, 17), 2.93);
g.set_repair_time(Line(6, 53), 4.34);
g.set_repair_time(Line(7, 17), 1.52);
g.set_repair_time(Line(7, 47), 1.48);
g.set_repair_time(Line(7, 49), 2.43);
g.set_repair_time(Line(8, 21), 3.97);
g.set_repair_time(Line(8, 51), 4.97);
g.set_repair_time(Line(9, 28), 1.22);
g.set_repair_time(Line(9, 41), 4.75);
g.set_repair_time(Line(9, 50), 2.54);
g.set_repair_time(Line(10, 28), 4.38);
g.set_repair_time(Line(11, 24), 2.93);
g.set_repair_time(Line(12, 23), 1.36);
g.set_repair_time(Line(13, 15), 3.9);
g.set_repair_time(Line(13, 39), 4.34);
g.set_repair_time(Line(15, 48), 4.92);
g.set_repair_time(Line(15, 57), 2.98);
g.set_repair_time(Line(16, 34), 3.1);
g.set_repair_time(Line(18, 59), 3.12);
g.set_repair_time(Line(19, 22), 3.73);
g.set_repair_time(Line(19, 45), 4.29);
g.set_repair_time(Line(20, 40), 2.43);
g.set_repair_time(Line(21, 26), 1.16);
g.set_repair_time(Line(21, 55), 2.72);
g.set_repair_time(Line(23, 44), 1.33);
g.set_repair_time(Line(26, 54), 2.06);
g.set_repair_time(Line(27, 28), 2.95);
g.set_repair_time(Line(28, 35), 4.01);
g.set_repair_time(Line(29, 31), 1.95);
g.set_repair_time(Line(33, 37), 2.26);
g.set_repair_time(Line(38, 42), 2.28);
g.set_repair_time(Line(38, 47), 3.05);
g.set_repair_time(Line(39, 55), 2.51);
g.set_repair_time(Line(41, 42), 1.35);
g.set_repair_time(Line(42, 53), 3.52);
g.set_repair_time(Line(43, 44), 2.3);
g.set_repair_time(Line(43, 51), 2.26);
g.set_repair_time(Line(44, 59), 3.65);
g.set_repair_time(Line(46, 54), 1.05);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 18.4125}, {2, 24.75}, {3, 27.8375}, {4, 26.6}, {5, 18.6}, {6, 21.9375}, {7, 14.9}, {8, 25.875}, {9, 19}, {10, 17.8625}, {11, 19.6375}, {12, 19}, {13, 21.625}, {14, 21.025}, {15, 20.375}, {16, 27.2875}, {17, 12.35}, {18, 8.825}, {19, 11.5375}, {20, 6.725}, {21, 23.975}, {22, 20.55}, {23, 11.5}, {24, 26.3625}, {25, 19.1625}, {26, 30.775}, {27, 13.5}, {28, 9}, {29, 27.6125}, {30, 2.5}, {31, 30.8375}, {32, 14.6625}, {33, 19.075}, {34, 20.225}, {35, 4.5}, {36, 20.8875}, {37, 10.4}, {38, 20.375}, {39, 30.4625}, {40, 11.875}, {41, 33.0125}, {42, 22.9375}, {43, 16.6125}, {44, 10.25}, {45, 8.75}, {46, 19.5}, {47, 23.7375}, {48, 23.4125}, {49, 17.4}, {50, 28.35}, {51, 18.375}, {52, 16.6}, {53, 16.6875}, {54, 21.2625}, {55, 31.5875}, {56, 16.325}, {57, 15.875}, {58, 32.275}, {59, 3.525}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 18.4125}, {1, 0}, {2, 19.625}, {3, 21.8125}, {4, 28.35}, {5, 20.4}, {6, 3.525}, {7, 14.775}, {8, 24.625}, {9, 20.75}, {10, 20.2625}, {11, 24.85}, {12, 12.975}, {13, 25.35}, {14, 20.25}, {15, 24.1}, {16, 20.0375}, {17, 17.5625}, {18, 21.0875}, {19, 14.925}, {20, 11.6875}, {21, 17.0625}, {22, 15.725}, {23, 20.475}, {24, 31.575}, {25, 14.0375}, {26, 28.2375}, {27, 6.25}, {28, 10.75}, {29, 22.7875}, {30, 20.9125}, {31, 23.625}, {32, 3.75}, {33, 20.825}, {34, 12.975}, {35, 15.25}, {36, 26.1}, {37, 19.275}, {38, 11.775}, {39, 34.1875}, {40, 6.5375}, {41, 25.8}, {42, 15.725}, {43, 21.5125}, {44, 21.725}, {45, 17.7125}, {46, 28.4625}, {47, 7.275}, {48, 16.5}, {49, 12.275}, {50, 28.0375}, {51, 23.275}, {52, 18.35}, {53, 9.775}, {54, 30.225}, {55, 25.5625}, {56, 28.5875}, {57, 21.0875}, {58, 31.5}, {59, 21.9375}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 24.75}, {1, 19.625}, {2, 0}, {3, 28.2625}, {4, 42.625}, {5, 11.95}, {6, 16.1}, {7, 9.85}, {8, 5}, {9, 35.025}, {10, 15.5125}, {11, 12}, {12, 29.375}, {13, 21.9125}, {14, 21.3125}, {15, 20.6625}, {16, 36.6375}, {17, 12.6375}, {18, 16.1625}, {19, 27.4375}, {20, 31.3125}, {21, 15}, {22, 27.1375}, {23, 21.875}, {24, 18.725}, {25, 5.5875}, {26, 26.175}, {27, 25.875}, {28, 25.025}, {29, 34.2}, {30, 22.25}, {31, 35.0375}, {32, 23.375}, {33, 24.425}, {34, 32.6}, {35, 27.9125}, {36, 10.75}, {37, 14.35}, {38, 23.1875}, {39, 30.75}, {40, 26.1625}, {41, 37.2125}, {42, 27.1375}, {43, 14.2625}, {44, 20.625}, {45, 28.5}, {46, 24.1625}, {47, 18.6875}, {48, 25.0625}, {49, 7.35}, {50, 28.6375}, {51, 12.5}, {52, 21.0125}, {53, 22.2875}, {54, 25.925}, {55, 24.5125}, {56, 23.6625}, {57, 16.1625}, {58, 24.975}, {59, 21.4625}, 