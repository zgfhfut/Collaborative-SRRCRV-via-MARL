node_num : 60
demand_node_num : 24
edge_num : 90
damaged_edge_num : 45
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 28, 29, 33, 35, 37, 40, 41, 42, 48, 49, 53, 54, 58,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 19), Line(0, 20), Line(0, 32), Line(0, 36), Line(0, 57), Line(1, 32), Line(1, 44), Line(2, 15), Line(2, 17), Line(2, 45), Line(3, 12), Line(3, 45), Line(4, 10), Line(4, 26), Line(5, 6), Line(5, 14), Line(6, 24), Line(6, 29), Line(7, 11), Line(7, 29), Line(7, 46), Line(8, 26), Line(8, 39), Line(8, 57), Line(9, 10), Line(9, 33), Line(10, 28), Line(10, 30), Line(10, 35), Line(11, 17), Line(11, 55), Line(12, 25), Line(12, 52), Line(13, 27), Line(13, 55), Line(13, 59), Line(14, 35), Line(15, 58), Line(16, 18), Line(16, 37), Line(18, 44), Line(18, 53), Line(19, 42), Line(20, 28), Line(21, 40), Line(21, 48), Line(22, 26), Line(22, 44), Line(22, 56), Line(23, 37), Line(23, 52), Line(23, 54), Line(24, 33), Line(24, 42), Line(24, 45), Line(24, 48), Line(24, 53), Line(25, 26), Line(25, 50), Line(26, 52), Line(27, 38), Line(27, 45), Line(27, 49), Line(28, 34), Line(30, 36), Line(30, 37), Line(30, 59), Line(31, 34), Line(31, 46), Line(32, 48), Line(35, 41), Line(35, 42), Line(35, 45), Line(35, 57), Line(36, 51), Line(38, 41), Line(38, 51), Line(38, 52), Line(39, 56), Line(40, 47), Line(41, 55), Line(42, 50), Line(43, 59), Line(45, 50), Line(47, 58), Line(49, 53), Line(51, 54), Line(51, 58), Line(54, 56), Line(54, 59),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 19), Line(0, 32), Line(0, 57), Line(1, 32), Line(1, 44), Line(2, 45), Line(3, 12), Line(4, 10), Line(4, 26), Line(5, 6), Line(7, 11), Line(8, 39), Line(9, 33), Line(10, 28), Line(10, 30), Line(10, 35), Line(11, 17), Line(11, 55), Line(13, 55), Line(13, 59), Line(16, 37), Line(19, 42), Line(21, 48), Line(22, 26), Line(23, 52), Line(24, 45), Line(24, 48), Line(24, 53), Line(26, 52), Line(27, 45), Line(27, 49), Line(30, 37), Line(32, 48), Line(35, 42), Line(35, 45), Line(35, 57), Line(38, 41), Line(38, 51), Line(38, 52), Line(40, 47), Line(43, 59), Line(45, 50), Line(51, 58), Line(54, 56), Line(54, 59),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 19, 4);
g.add_edge(0, 20, 7);
g.add_edge(0, 32, 7.07);
g.add_edge(0, 36, 4.47);
g.add_edge(0, 57, 2.82);
g.add_edge(1, 32, 4.24);
g.add_edge(1, 44, 4.47);
g.add_edge(2, 15, 3);
g.add_edge(2, 17, 2.23);
g.add_edge(2, 45, 4.12);
g.add_edge(3, 12, 7.07);
g.add_edge(3, 45, 5.09);
g.add_edge(4, 10, 8.06);
g.add_edge(4, 26, 4.47);
g.add_edge(5, 6, 1.41);
g.add_edge(5, 14, 8.48);
g.add_edge(6, 24, 7.61);
g.add_edge(6, 29, 10);
g.add_edge(7, 11, 8.06);
g.add_edge(7, 29, 9.89);
g.add_edge(7, 46, 9.21);
g.add_edge(8, 26, 6.08);
g.add_edge(8, 39, 4.47);
g.add_edge(8, 57, 7.81);
g.add_edge(9, 10, 5.38);
g.add_edge(9, 33, 4.12);
g.add_edge(10, 28, 7.07);
g.add_edge(10, 30, 8.24);
g.add_edge(10, 35, 9.89);
g.add_edge(11, 17, 10.29);
g.add_edge(11, 55, 8.54);
g.add_edge(12, 25, 6.4);
g.add_edge(12, 52, 6.7);
g.add_edge(13, 27, 9.05);
g.add_edge(13, 55, 6.08);
g.add_edge(13, 59, 7.28);
g.add_edge(14, 35, 9.05);
g.add_edge(15, 58, 8.94);
g.add_edge(16, 18, 5.83);
g.add_edge(16, 37, 3.16);
g.add_edge(18, 44, 5.09);
g.add_edge(18, 53, 1);
g.add_edge(19, 42, 4.47);
g.add_edge(20, 28, 8.48);
g.add_edge(21, 40, 4.12);
g.add_edge(21, 48, 10.63);
g.add_edge(22, 26, 3.16);
g.add_edge(22, 44, 3.16);
g.add_edge(22, 56, 3.16);
g.add_edge(23, 37, 3.6);
g.add_edge(23, 52, 4);
g.add_edge(23, 54, 3.6);
g.add_edge(24, 33, 8);
g.add_edge(24, 42, 4.12);
g.add_edge(24, 45, 6.08);
g.add_edge(24, 48, 4);
g.add_edge(24, 53, 7.07);
g.add_edge(25, 26, 1);
g.add_edge(25, 50, 2.23);
g.add_edge(26, 52, 1);
g.add_edge(27, 38, 9.21);
g.add_edge(27, 45, 6.32);
g.add_edge(27, 49, 6.32);
g.add_edge(28, 34, 5);
g.add_edge(30, 36, 4.12);
g.add_edge(30, 37, 5.38);
g.add_edge(30, 59, 2);
g.add_edge(31, 34, 1.41);
g.add_edge(31, 46, 7.07);
g.add_edge(32, 48, 9.43);
g.add_edge(35, 41, 2);
g.add_edge(35, 42, 8.06);
g.add_edge(35, 45, 3.6);
g.add_edge(35, 57, 9.43);
g.add_edge(36, 51, 4);
g.add_edge(38, 41, 5.83);
g.add_edge(38, 51, 6.4);
g.add_edge(38, 52, 1.41);
g.add_edge(39, 56, 6.7);
g.add_edge(40, 47, 2.23);
g.add_edge(41, 55, 5.09);
g.add_edge(42, 50, 8.6);
g.add_edge(43, 59, 6.32);
g.add_edge(45, 50, 4);
g.add_edge(47, 58, 7.07);
g.add_edge(49, 53, 8.54);
g.add_edge(51, 54, 7.07);
g.add_edge(51, 58, 3.16);
g.add_edge(54, 56, 4.24);
g.add_edge(54, 59, 7.81);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 6.93);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 8.16);
g.set_importance(12, 1.12);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 8.06);
g.set_importance(16, 4.68);
g.set_importance(17, 2.74);
g.set_importance(18, 2.49);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 2.36);
g.set_importance(22, 2.26);
g.set_importance(23, 3.51);
g.set_importance(24, 6.7);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 6.13);
g.set_importance(29, 6.3);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 9.18);
g.set_importance(34, 0);
g.set_importance(35, 1.83);
g.set_importance(36, 0);
g.set_importance(37, 9.42);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 8);
g.set_importance(41, 3.74);
g.set_importance(42, 9.62);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 9.75);
g.set_importance(49, 3.95);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 0);
g.set_importance(53, 8.01);
g.set_importance(54, 2.32);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 5.66);
g.set_importance(59, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 19), 4.84);
g.set_repair_time(Line(0, 32), 4.2);
g.set_repair_time(Line(0, 57), 4.82);
g.set_repair_time(Line(1, 32), 2.58);
g.set_repair_time(Line(1, 44), 3.02);
g.set_repair_time(Line(2, 45), 1.91);
g.set_repair_time(Line(3, 12), 1.48);
g.set_repair_time(Line(4, 10), 4.95);
g.set_repair_time(Line(4, 26), 3.76);
g.set_repair_time(Line(5, 6), 3.26);
g.set_repair_time(Line(7, 11), 2.22);
g.set_repair_time(Line(8, 39), 2.46);
g.set_repair_time(Line(9, 33), 2.91);
g.set_repair_time(Line(10, 28), 2.32);
g.set_repair_time(Line(10, 30), 4.93);
g.set_repair_time(Line(10, 35), 4.25);
g.set_repair_time(Line(11, 17), 3.57);
g.set_repair_time(Line(11, 55), 4.62);
g.set_repair_time(Line(13, 55), 4.62);
g.set_repair_time(Line(13, 59), 3.57);
g.set_repair_time(Line(16, 37), 1.97);
g.set_repair_time(Line(19, 42), 2.94);
g.set_repair_time(Line(21, 48), 4.37);
g.set_repair_time(Line(22, 26), 4.39);
g.set_repair_time(Line(23, 52), 4.7);
g.set_repair_time(Line(24, 45), 4.07);
g.set_repair_time(Line(24, 48), 3.91);
g.set_repair_time(Line(24, 53), 2.06);
g.set_repair_time(Line(26, 52), 1.32);
g.set_repair_time(Line(27, 45), 3.99);
g.set_repair_time(Line(27, 49), 3.99);
g.set_repair_time(Line(30, 37), 4.87);
g.set_repair_time(Line(32, 48), 3.34);
g.set_repair_time(Line(35, 42), 3.01);
g.set_repair_time(Line(35, 45), 2.16);
g.set_repair_time(Line(35, 57), 1.62);
g.set_repair_time(Line(38, 41), 2.64);
g.set_repair_time(Line(38, 51), 2.47);
g.set_repair_time(Line(38, 52), 2.12);
g.set_repair_time(Line(40, 47), 4.45);
g.set_repair_time(Line(43, 59), 3.88);
g.set_repair_time(Line(45, 50), 1.31);
g.set_repair_time(Line(51, 58), 3.78);
g.set_repair_time(Line(54, 56), 2.55);
g.set_repair_time(Line(54, 59), 4.44);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 14.1375}, {2, 24.9625}, {3, 26.175}, {4, 26.475}, {5, 27.0125}, {6, 25.25}, {7, 44.925}, {8, 13.2875}, {9, 27.7625}, {10, 21.0375}, {11, 34.85}, {12, 28.725}, {13, 22.3375}, {14, 26.625}, {15, 25.7125}, {16, 21.4125}, {17, 27.75}, {18, 25.825}, {19, 5}, {20, 8.75}, {21, 31.3125}, {22, 23.675}, {23, 21.9625}, {24, 15.7375}, {25, 22.1375}, {26, 20.8875}, {27, 27.7125}, {28, 19.35}, {29, 37.75}, {30, 10.7375}, {31, 27.3625}, {32, 8.8375}, {33, 25.7375}, {34, 25.6}, {35, 15.3125}, {36, 5.5875}, {37, 17.4625}, {38, 18.5875}, {39, 18.875}, {40, 26.1625}, {41, 17.8125}, {42, 10.5875}, {43, 21.1375}, {44, 19.725}, {45, 19.8125}, {46, 36.2}, {47, 23.375}, {48, 20.625}, {49, 35.25}, {50, 21.3375}, {51, 10.5875}, {52, 20.35}, {53, 24.575}, {54, 19.425}, {55, 24.175}, {56, 24.725}, {57, 3.525}, {58, 14.5375}, {59, 13.2375}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 14.1375}, {1, 0}, {2, 27.675}, {3, 28.8875}, {4, 19.075}, {5, 33.3125}, {6, 31.55}, {7, 50.9}, {8, 21.0875}, {9, 35.875}, {10, 29.15}, {11, 40.825}, {12, 22.7375}, {13, 36.475}, {14, 37.6}, {15, 31.425}, {16, 19.2375}, {17, 30.4625}, {18, 11.95}, {19, 19.1375}, {20, 22.8875}, {21, 30.375}, {22, 9.5375}, {23, 19.7375}, {24, 22.0375}, {25, 14.7375}, {26, 13.4875}, {27, 28.0125}, {28, 33.4875}, {29, 44.05}, {30, 24.875}, {31, 41.5}, {32, 5.3}, {33, 32.0375}, {34, 39.7375}, {35, 26.2875}, {36, 19.725}, {37, 23.1875}, {38, 16.5}, {39, 21.8625}, {40, 35.525}, {41, 23.7875}, {42, 24.725}, {43, 35.275}, {44, 5.5875}, {45, 22.525}, {46, 50.3375}, {47, 37.2875}, {48, 17.0875}, {49, 23.875}, {50, 17.525}, {51, 24.5}, {52, 14.7375}, {53, 13.2}, {54, 18.7875}, {55, 30.15}, {56, 13.4875}, {57, 17.6625}, {58, 28.45}, {59, 27.375}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 24.9625}, {1, 27.675}, {2, 0}, {3, 11.5125}, {4, 19.775}, {5, 24.025}, {6, 22.2625}, {7, 25.725}, {8, 21.7875}, {9, 27.9}, {10, 22.0125}, {11, 15.65}, {12, 20.35}, {13, 24.3625}, {14, 20.9625}, {15, 3.75}, {16, 28.8875}, {17, 2.7875}, {18, 22.8375}, {19, 23.4875}, {20, 33.7125}, {21, 31.0375}, {22, 18.1375}, {23, 20.4375}, {24, 12.75}, {25, 12.9375}, {26, 14.1875}, {27, 13.05}, {28, 30.85}, {29, 34.7625}, {30, 29.025}, {31, 38.8625}, {32, 29.5375}, {33, 22.75}, {34, 37.1}, {35, 9.65}, {36, 23.875}, {37, 24.9375}, {38, 17.2}, {39, 27.375}, {40, 26.55}, {41, 12.15}, {42, 17.9}, {43, 39.425}, {44, 22.0875}, {45, 5.15}, {46, 37.2375}, {47, 23.7625}, {48, 17.75}, {49, 20.95}, {50, 10.15}, {51, 18.875}, {52, 15.4375}, {53, 21.5875}, {54, 24.9375}, {55, 18.5125}, {56, 22.0875}, {57, 21.4375}, {58, 14.925}, {59, 31.525}, 