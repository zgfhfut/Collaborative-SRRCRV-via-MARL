node_num : 60
demand_node_num : 24
edge_num : 90
damaged_edge_num : 45
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 11, 18, 19, 22, 23, 24, 26, 27, 29, 31, 34, 37, 39, 40, 41, 42, 45, 50, 54, 55, 58, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 26), Line(0, 30), Line(0, 41), Line(0, 46), Line(0, 52), Line(0, 54), Line(1, 21), Line(1, 33), Line(1, 43), Line(1, 59), Line(2, 16), Line(2, 49), Line(3, 6), Line(3, 28), Line(4, 8), Line(4, 41), Line(4, 52), Line(5, 12), Line(5, 32), Line(6, 14), Line(6, 18), Line(6, 29), Line(6, 48), Line(7, 45), Line(7, 49), Line(7, 54), Line(7, 57), Line(8, 58), Line(9, 16), Line(9, 33), Line(9, 51), Line(10, 19), Line(10, 22), Line(10, 51), Line(11, 34), Line(11, 35), Line(11, 47), Line(12, 54), Line(13, 20), Line(13, 40), Line(14, 21), Line(14, 37), Line(15, 24), Line(15, 27), Line(15, 34), Line(15, 47), Line(16, 19), Line(17, 46), Line(17, 55), Line(18, 48), Line(18, 51), Line(18, 55), Line(20, 51), Line(21, 29), Line(22, 42), Line(22, 58), Line(23, 25), Line(23, 36), Line(23, 39), Line(24, 28), Line(24, 43), Line(24, 53), Line(25, 28), Line(25, 40), Line(25, 43), Line(26, 36), Line(26, 41), Line(26, 51), Line(27, 41), Line(28, 45), Line(28, 49), Line(29, 38), Line(30, 36), Line(30, 38), Line(31, 44), Line(31, 48), Line(31, 56), Line(32, 35), Line(34, 37), Line(35, 49), Line(39, 50), Line(40, 42), Line(43, 47), Line(44, 52), Line(44, 59), Line(45, 56), Line(47, 49), Line(50, 58), Line(53, 55), Line(57, 59),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 41), Line(0, 46), Line(1, 59), Line(2, 16), Line(2, 49), Line(3, 6), Line(4, 8), Line(4, 52), Line(5, 12), Line(6, 14), Line(6, 29), Line(7, 45), Line(7, 49), Line(8, 58), Line(9, 33), Line(9, 51), Line(10, 19), Line(10, 22), Line(10, 51), Line(11, 34), Line(11, 35), Line(13, 20), Line(14, 21), Line(15, 24), Line(15, 27), Line(15, 34), Line(17, 46), Line(17, 55), Line(18, 51), Line(21, 29), Line(22, 42), Line(23, 39), Line(24, 28), Line(25, 43), Line(26, 36), Line(26, 51), Line(27, 41), Line(28, 45), Line(31, 48), Line(32, 35), Line(34, 37), Line(35, 49), Line(39, 50), Line(40, 42), Line(53, 55),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 26, 2.82);
g.add_edge(0, 30, 5);
g.add_edge(0, 41, 5.09);
g.add_edge(0, 46, 5.38);
g.add_edge(0, 52, 8.6);
g.add_edge(0, 54, 6.32);
g.add_edge(1, 21, 2.23);
g.add_edge(1, 33, 1.41);
g.add_edge(1, 43, 8.94);
g.add_edge(1, 59, 5);
g.add_edge(2, 16, 1);
g.add_edge(2, 49, 7);
g.add_edge(3, 6, 1);
g.add_edge(3, 28, 4.12);
g.add_edge(4, 8, 5);
g.add_edge(4, 41, 2.23);
g.add_edge(4, 52, 2.23);
g.add_edge(5, 12, 2.23);
g.add_edge(5, 32, 6.4);
g.add_edge(6, 14, 3.6);
g.add_edge(6, 18, 7.28);
g.add_edge(6, 29, 5.09);
g.add_edge(6, 48, 6.08);
g.add_edge(7, 45, 6);
g.add_edge(7, 49, 2.23);
g.add_edge(7, 54, 8.48);
g.add_edge(7, 57, 10);
g.add_edge(8, 58, 2.82);
g.add_edge(9, 16, 10.29);
g.add_edge(9, 33, 5);
g.add_edge(9, 51, 8.48);
g.add_edge(10, 19, 7.07);
g.add_edge(10, 22, 5);
g.add_edge(10, 51, 5.09);
g.add_edge(11, 34, 7.28);
g.add_edge(11, 35, 6.08);
g.add_edge(11, 47, 2.23);
g.add_edge(12, 54, 5.09);
g.add_edge(13, 20, 5);
g.add_edge(13, 40, 3.6);
g.add_edge(14, 21, 2.82);
g.add_edge(14, 37, 9.48);
g.add_edge(15, 24, 9.43);
g.add_edge(15, 27, 1);
g.add_edge(15, 34, 2);
g.add_edge(15, 47, 8);
g.add_edge(16, 19, 3.16);
g.add_edge(17, 46, 3.16);
g.add_edge(17, 55, 9.21);
g.add_edge(18, 48, 7.21);
g.add_edge(18, 51, 6.32);
g.add_edge(18, 55, 1);
g.add_edge(20, 51, 5.83);
g.add_edge(21, 29, 1);
g.add_edge(22, 42, 1.41);
g.add_edge(22, 58, 4);
g.add_edge(23, 25, 6.08);
g.add_edge(23, 36, 5.09);
g.add_edge(23, 39, 8);
g.add_edge(24, 28, 4.47);
g.add_edge(24, 43, 5.09);
g.add_edge(24, 53, 8.06);
g.add_edge(25, 28, 6.4);
g.add_edge(25, 40, 7.21);
g.add_edge(25, 43, 9.21);
g.add_edge(26, 36, 6.32);
g.add_edge(26, 41, 3.16);
g.add_edge(26, 51, 5);
g.add_edge(27, 41, 5.09);
g.add_edge(28, 45, 5.09);
g.add_edge(28, 49, 5);
g.add_edge(29, 38, 7.07);
g.add_edge(30, 36, 8.06);
g.add_edge(30, 38, 8.54);
g.add_edge(31, 44, 5.83);
g.add_edge(31, 48, 4.24);
g.add_edge(31, 56, 2.82);
g.add_edge(32, 35, 3);
g.add_edge(34, 37, 2);
g.add_edge(35, 49, 5.09);
g.add_edge(39, 50, 6.4);
g.add_edge(40, 42, 4.12);
g.add_edge(43, 47, 1);
g.add_edge(44, 52, 3.6);
g.add_edge(44, 59, 6.32);
g.add_edge(45, 56, 7);
g.add_edge(47, 49, 7.21);
g.add_edge(50, 58, 4.12);
g.add_edge(53, 55, 3);
g.add_edge(57, 59, 3.6);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 7.42);
g.set_importance(6, 6.79);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 1.61);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 7.12);
g.set_importance(19, 5.7);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 6.19);
g.set_importance(23, 5.66);
g.set_importance(24, 1.72);
g.set_importance(25, 0);
g.set_importance(26, 9.29);
g.set_importance(27, 6.94);
g.set_importance(28, 0);
g.set_importance(29, 7.39);
g.set_importance(30, 0);
g.set_importance(31, 8.87);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 7.6);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 4.98);
g.set_importance(38, 0);
g.set_importance(39, 8.36);
g.set_importance(40, 3.46);
g.set_importance(41, 8.6);
g.set_importance(42, 6.21);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 3.66);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 9.15);
g.set_importance(51, 0);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 1.09);
g.set_importance(55, 5.23);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 6.04);
g.set_importance(59, 4.17);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 41), 4.64);
g.set_repair_time(Line(0, 46), 1.21);
g.set_repair_time(Line(1, 59), 1.15);
g.set_repair_time(Line(2, 16), 4.45);
g.set_repair_time(Line(2, 49), 2.7);
g.set_repair_time(Line(3, 6), 1.45);
g.set_repair_time(Line(4, 8), 4.32);
g.set_repair_time(Line(4, 52), 1.82);
g.set_repair_time(Line(5, 12), 3.14);
g.set_repair_time(Line(6, 14), 4.96);
g.set_repair_time(Line(6, 29), 4.02);
g.set_repair_time(Line(7, 45), 2.4);
g.set_repair_time(Line(7, 49), 4.43);
g.set_repair_time(Line(8, 58), 1.56);
g.set_repair_time(Line(9, 33), 4.72);
g.set_repair_time(Line(9, 51), 2.32);
g.set_repair_time(Line(10, 19), 4.41);
g.set_repair_time(Line(10, 22), 3.43);
g.set_repair_time(Line(10, 51), 4.81);
g.set_repair_time(Line(11, 34), 3.61);
g.set_repair_time(Line(11, 35), 3.63);
g.set_repair_time(Line(13, 20), 3.65);
g.set_repair_time(Line(14, 21), 3.88);
g.set_repair_time(Line(15, 24), 4.96);
g.set_repair_time(Line(15, 27), 2.63);
g.set_repair_time(Line(15, 34), 1.71);
g.set_repair_time(Line(17, 46), 4.91);
g.set_repair_time(Line(17, 55), 4.58);
g.set_repair_time(Line(18, 51), 3.49);
g.set_repair_time(Line(21, 29), 4.42);
g.set_repair_time(Line(22, 42), 1);
g.set_repair_time(Line(23, 39), 3.64);
g.set_repair_time(Line(24, 28), 1.34);
g.set_repair_time(Line(25, 43), 3.71);
g.set_repair_time(Line(26, 36), 4.96);
g.set_repair_time(Line(26, 51), 4.08);
g.set_repair_time(Line(27, 41), 4.08);
g.set_repair_time(Line(28, 45), 1.93);
g.set_repair_time(Line(31, 48), 1.01);
g.set_repair_time(Line(32, 35), 1.44);
g.set_repair_time(Line(34, 37), 2.37);
g.set_repair_time(Line(35, 49), 3.5);
g.set_repair_time(Line(39, 50), 1.06);
g.set_repair_time(Line(40, 42), 4.38);
g.set_repair_time(Line(53, 55), 2.46);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 28.3875}, {2, 30.0375}, {3, 28.025}, {4, 9.15}, {5, 17.05}, {6, 26.775}, {7, 18.5}, {8, 15.4}, {9, 20.375}, {10, 16.1375}, {11, 25.575}, {12, 14.2625}, {13, 23.3125}, {14, 30.5375}, {15, 13.975}, {16, 28.925}, {17, 10.675}, {18, 17.675}, {19, 24.975}, {20, 17.0625}, {21, 27.0125}, {22, 22.3875}, {23, 17.7875}, {24, 25.7625}, {25, 25.3875}, {26, 3.525}, {27, 12.725}, {28, 27.5375}, {29, 25.7625}, {30, 6.25}, {31, 22.5375}, {32, 25.05}, {33, 26.625}, {34, 16.475}, {35, 27.65}, {36, 11.425}, {37, 18.975}, {38, 16.925}, {39, 27.7875}, {40, 27.8125}, {41, 6.3625}, {42, 24.15}, {43, 25.225}, {44, 15.25}, {45, 26}, {46, 6.725}, {47, 23.975}, {48, 26.6875}, {49, 21.2875}, {50, 24.075}, {51, 9.775}, {52, 10.75}, {53, 22.675}, {54, 7.9}, {55, 18.925}, {56, 26.0625}, {57, 27.65}, {58, 18.925}, {59, 23.15}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 28.3875}, {1, 0}, {2, 22.125}, {3, 11.65}, {4, 21.4375}, {5, 34.5625}, {6, 10.4}, {7, 23.25}, {8, 27.6875}, {9, 8.0125}, {10, 24.975}, {11, 15.2125}, {12, 37.35}, {13, 32.15}, {14, 6.3125}, {15, 22.425}, {16, 20.875}, {17, 32.2625}, {18, 19.5}, {19, 24.825}, {20, 25.9}, {21, 2.7875}, {22, 31.225}, {23, 30.2875}, {24, 17.5375}, {25, 22.6875}, {26, 24.8625}, {27, 23.675}, {28, 16.8}, {29, 4.0375}, {30, 23.55}, {31, 21.4375}, {32, 26.5625}, {33, 1.7625}, {34, 20.6625}, {35, 22.8125}, {36, 32.7625}, {37, 18.1625}, {38, 12.875}, {39, 40.2875}, {40, 31.7}, {41, 24.225}, {42, 32.9875}, {43, 11.175}, {44, 14.15}, {45, 23.1625}, {46, 35.1125}, {47, 12.425}, {48, 18}, {49, 21.4375}, {50, 36.3625}, {51, 18.6125}, {52, 18.65}, {53, 24.5}, {54, 33.85}, {55, 20.75}, {56, 24.9625}, {57, 10.75}, {58, 31.2125}, {59, 6.25}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 30.0375}, {1, 22.125}, {2, 0}, {3, 20.15}, {4, 33.3875}, {5, 26.8625}, {6, 21.4}, {7, 11.5375}, {8, 28.8125}, {9, 14.1125}, {10, 14.0375}, {11, 20.55}, {12, 28.5}, {13, 31.7}, {14, 25.9}, {15, 27.7625}, {16, 1.25}, {17, 40.7125}, {18, 28.3}, {19, 5.2}, {20, 27.6875}, {21, 24.9125}, {22, 20.2875}, {23, 30.6}, {24, 20.5875}, {25, 23}, {26, 26.65}, {27, 29.0125}, {28, 15}, {29, 26.1625}, {30, 36.2875}, {31, 31.3125}, {32, 18.8625}, {33, 20.3625}, {34, 29.65}, {35, 15.1125}, {36, 34.55}, {37, 32.15}, {38, 35}, {39, 38.4375}, {40, 27.2}, {41, 30.6}, {42, 22.05}, {43, 19.0125}, {44, 36.275}, {45, 19.0375}, {46, 36.7625}, {47, 17.7625}, {48, 29}, {49, 8.75}, {50, 30.4375}, {51, 20.4}, {52, 36.175}, {53, 30.6625}, {54, 22.1375}, {55, 29.55}, {56, 27.7875}, {57, 24.0375}, {58, 25.2875}, {59, 28.375}, 