node_num : 60
demand_node_num : 24
edge_num : 90
damaged_edge_num : 45
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 9, 12, 16, 19, 20, 23, 24, 26, 28, 33, 34, 35, 36, 37, 39, 40, 42, 44, 48, 49, 51, 52, 53,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 9), Line(0, 11), Line(0, 35), Line(1, 15), Line(1, 17), Line(1, 33), Line(1, 38), Line(2, 3), Line(2, 13), Line(2, 39), Line(3, 22), Line(3, 28), Line(4, 5), Line(4, 33), Line(4, 44), Line(4, 45), Line(5, 8), Line(5, 20), Line(5, 38), Line(6, 28), Line(6, 56), Line(7, 31), Line(7, 40), Line(7, 41), Line(7, 53), Line(8, 55), Line(8, 57), Line(9, 22), Line(10, 16), Line(10, 53), Line(11, 37), Line(11, 45), Line(12, 14), Line(12, 41), Line(13, 15), Line(13, 18), Line(14, 32), Line(14, 42), Line(15, 24), Line(15, 53), Line(16, 41), Line(16, 48), Line(17, 49), Line(18, 37), Line(19, 42), Line(19, 52), Line(19, 57), Line(20, 24), Line(21, 33), Line(21, 40), Line(21, 56), Line(22, 25), Line(22, 52), Line(23, 36), Line(23, 48), Line(24, 40), Line(24, 50), Line(25, 34), Line(25, 59), Line(26, 29), Line(26, 43), Line(27, 42), Line(27, 51), Line(28, 34), Line(28, 40), Line(29, 35), Line(29, 51), Line(30, 47), Line(30, 57), Line(31, 35), Line(31, 38), Line(31, 39), Line(31, 43), Line(31, 58), Line(32, 46), Line(32, 55), Line(34, 52), Line(36, 51), Line(36, 59), Line(38, 44), Line(39, 41), Line(43, 58), Line(44, 54), Line(45, 46), Line(45, 50), Line(45, 57), Line(47, 49), Line(50, 54), Line(52, 53), Line(54, 56),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(1, 33), Line(1, 38), Line(2, 3), Line(2, 13), Line(3, 22), Line(4, 44), Line(4, 45), Line(5, 8), Line(5, 20), Line(5, 38), Line(6, 28), Line(6, 56), Line(7, 31), Line(7, 40), Line(9, 22), Line(10, 53), Line(11, 45), Line(13, 15), Line(13, 18), Line(14, 32), Line(14, 42), Line(15, 24), Line(15, 53), Line(18, 37), Line(19, 57), Line(21, 33), Line(21, 40), Line(21, 56), Line(22, 25), Line(22, 52), Line(23, 36), Line(24, 50), Line(25, 34), Line(29, 35), Line(30, 57), Line(31, 35), Line(31, 43), Line(31, 58), Line(36, 59), Line(39, 41), Line(43, 58), Line(44, 54), Line(45, 57), Line(50, 54), Line(52, 53),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 9, 4.47);
g.add_edge(0, 11, 6.7);
g.add_edge(0, 35, 2);
g.add_edge(1, 15, 2);
g.add_edge(1, 17, 4);
g.add_edge(1, 33, 2.82);
g.add_edge(1, 38, 5.38);
g.add_edge(2, 3, 5.38);
g.add_edge(2, 13, 1);
g.add_edge(2, 39, 2.23);
g.add_edge(3, 22, 3.6);
g.add_edge(3, 28, 6);
g.add_edge(4, 5, 6.4);
g.add_edge(4, 33, 4);
g.add_edge(4, 44, 6.7);
g.add_edge(4, 45, 5.38);
g.add_edge(5, 8, 6.08);
g.add_edge(5, 20, 3);
g.add_edge(5, 38, 11.31);
g.add_edge(6, 28, 6.32);
g.add_edge(6, 56, 6.7);
g.add_edge(7, 31, 3.16);
g.add_edge(7, 40, 2);
g.add_edge(7, 41, 4.47);
g.add_edge(7, 53, 4.47);
g.add_edge(8, 55, 2.23);
g.add_edge(8, 57, 6.08);
g.add_edge(9, 22, 8.24);
g.add_edge(10, 16, 8.94);
g.add_edge(10, 53, 4.47);
g.add_edge(11, 37, 1.41);
g.add_edge(11, 45, 1.41);
g.add_edge(12, 14, 7.28);
g.add_edge(12, 41, 1.41);
g.add_edge(13, 15, 3.6);
g.add_edge(13, 18, 3.16);
g.add_edge(14, 32, 8.6);
g.add_edge(14, 42, 6.4);
g.add_edge(15, 24, 9);
g.add_edge(15, 53, 7.07);
g.add_edge(16, 41, 8.24);
g.add_edge(16, 48, 8.06);
g.add_edge(17, 49, 4.24);
g.add_edge(18, 37, 4.47);
g.add_edge(19, 42, 7.07);
g.add_edge(19, 52, 4.47);
g.add_edge(19, 57, 8.54);
g.add_edge(20, 24, 1);
g.add_edge(21, 33, 5.83);
g.add_edge(21, 40, 4.47);
g.add_edge(21, 56, 2.82);
g.add_edge(22, 25, 2.23);
g.add_edge(22, 52, 7.21);
g.add_edge(23, 36, 3.6);
g.add_edge(23, 48, 3);
g.add_edge(24, 40, 4.12);
g.add_edge(24, 50, 3.6);
g.add_edge(25, 34, 7.07);
g.add_edge(25, 59, 4.47);
g.add_edge(26, 29, 5);
g.add_edge(26, 43, 3.16);
g.add_edge(27, 42, 4.12);
g.add_edge(27, 51, 7.07);
g.add_edge(28, 34, 3.16);
g.add_edge(28, 40, 4.12);
g.add_edge(29, 35, 4.12);
g.add_edge(29, 51, 4);
g.add_edge(30, 47, 1);
g.add_edge(30, 57, 5.09);
g.add_edge(31, 35, 4.24);
g.add_edge(31, 38, 4.12);
g.add_edge(31, 39, 3);
g.add_edge(31, 43, 5.83);
g.add_edge(31, 58, 1);
g.add_edge(32, 46, 2);
g.add_edge(32, 55, 5.65);
g.add_edge(34, 52, 3);
g.add_edge(36, 51, 5.09);
g.add_edge(36, 59, 3.16);
g.add_edge(38, 44, 11.4);
g.add_edge(39, 41, 7);
g.add_edge(43, 58, 5);
g.add_edge(44, 54, 10.63);
g.add_edge(45, 46, 4.47);
g.add_edge(45, 50, 5);
g.add_edge(45, 57, 4);
g.add_edge(47, 49, 7.61);
g.add_edge(50, 54, 9.89);
g.add_edge(52, 53, 2);
g.add_edge(54, 56, 5.09);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 3.49);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 8.29);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 3.47);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 4.22);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 8.33);
g.set_importance(20, 4.59);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 7.34);
g.set_importance(24, 8.93);
g.set_importance(25, 0);
g.set_importance(26, 3.38);
g.set_importance(27, 0);
g.set_importance(28, 7.22);
g.set_importance(29, 0);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 4.96);
g.set_importance(34, 9.02);
g.set_importance(35, 8.1);
g.set_importance(36, 2.27);
g.set_importance(37, 6.86);
g.set_importance(38, 0);
g.set_importance(39, 5.04);
g.set_importance(40, 1.01);
g.set_importance(41, 0);
g.set_importance(42, 8.65);
g.set_importance(43, 0);
g.set_importance(44, 6.24);
g.set_importance(45, 0);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 3.55);
g.set_importance(49, 7.07);
g.set_importance(50, 0);
g.set_importance(51, 6.07);
g.set_importance(52, 7.17);
g.set_importance(53, 7.93);
g.set_importance(54, 0);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(1, 33), 2.69);
g.set_repair_time(Line(1, 38), 1.45);
g.set_repair_time(Line(2, 3), 1.83);
g.set_repair_time(Line(2, 13), 3.8);
g.set_repair_time(Line(3, 22), 1.2);
g.set_repair_time(Line(4, 44), 2.23);
g.set_repair_time(Line(4, 45), 3.77);
g.set_repair_time(Line(5, 8), 4.7);
g.set_repair_time(Line(5, 20), 3.94);
g.set_repair_time(Line(5, 38), 1.62);
g.set_repair_time(Line(6, 28), 3.39);
g.set_repair_time(Line(6, 56), 3.52);
g.set_repair_time(Line(7, 31), 4.42);
g.set_repair_time(Line(7, 40), 4.62);
g.set_repair_time(Line(9, 22), 1.47);
g.set_repair_time(Line(10, 53), 4.66);
g.set_repair_time(Line(11, 45), 2.14);
g.set_repair_time(Line(13, 15), 1.23);
g.set_repair_time(Line(13, 18), 3.25);
g.set_repair_time(Line(14, 32), 3.72);
g.set_repair_time(Line(14, 42), 2.2);
g.set_repair_time(Line(15, 24), 1.19);
g.set_repair_time(Line(15, 53), 3.22);
g.set_repair_time(Line(18, 37), 1.71);
g.set_repair_time(Line(19, 57), 2.02);
g.set_repair_time(Line(21, 33), 2.71);
g.set_repair_time(Line(21, 40), 3.83);
g.set_repair_time(Line(21, 56), 2.5);
g.set_repair_time(Line(22, 25), 2.93);
g.set_repair_time(Line(22, 52), 2.24);
g.set_repair_time(Line(23, 36), 4.31);
g.set_repair_time(Line(24, 50), 2.07);
g.set_repair_time(Line(25, 34), 3.38);
g.set_repair_time(Line(29, 35), 3.21);
g.set_repair_time(Line(30, 57), 4.32);
g.set_repair_time(Line(31, 35), 2.85);
g.set_repair_time(Line(31, 43), 2.7);
g.set_repair_time(Line(31, 58), 2.16);
g.set_repair_time(Line(36, 59), 3.12);
g.set_repair_time(Line(39, 41), 3.42);
g.set_repair_time(Line(43, 58), 1.41);
g.set_repair_time(Line(44, 54), 1.59);
g.set_repair_time(Line(45, 57), 2.32);
g.set_repair_time(Line(50, 54), 2.75);
g.set_repair_time(Line(52, 53), 3.16);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 19.675}, {2, 14.3375}, {3, 20.3875}, {4, 16.8625}, {5, 24.4}, {6, 27.3}, {7, 11.75}, {8, 22.7375}, {9, 5.5875}, {10, 22.925}, {11, 8.375}, {12, 19.1}, {13, 15.5875}, {14, 28.2}, {15, 20.0875}, {16, 27.6375}, {17, 24.675}, {18, 15.725}, {19, 25.425}, {20, 20.65}, {21, 19.8375}, {22, 15.8875}, {23, 23.5125}, {24, 19.4}, {25, 18.675}, {26, 13.9}, {27, 21.4875}, {28, 19.4}, {29, 7.65}, {30, 21.5}, {31, 7.8}, {32, 18.225}, {33, 21.8625}, {34, 23.35}, {35, 2.5}, {36, 19.0125}, {37, 10.1375}, {38, 12.95}, {39, 11.55}, {40, 14.25}, {41, 17.3375}, {42, 26.6375}, {43, 15.0875}, {44, 25.2375}, {45, 10.1375}, {46, 15.725}, {47, 22.75}, {48, 27.2625}, {49, 29.975}, {50, 16.3875}, {51, 12.65}, {52, 19.8375}, {53, 17.3375}, {54, 28.75}, {55, 25.2875}, {56, 23.3625}, {57, 15.1375}, {58, 9.05}, {59, 22.9625}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 19.675}, {1, 0}, {2, 8.25}, {3, 14.975}, {4, 8.525}, {5, 16.525}, {6, 22.7125}, {7, 15.825}, {8, 24.125}, {9, 25.2625}, {10, 16.925}, {11, 17.0125}, {12, 21.55}, {13, 7}, {14, 30.65}, {15, 2.5}, {16, 28.1}, {17, 5}, {18, 10.95}, {19, 19.425}, {20, 15}, {21, 10.8125}, {22, 19.475}, {23, 36.3}, {24, 13.75}, {25, 22.2625}, {26, 23.1125}, {27, 33.4125}, {28, 21.5375}, {29, 22.325}, {30, 21.0625}, {31, 11.875}, {32, 23.3375}, {33, 3.525}, {34, 17.5875}, {35, 17.175}, {36, 31.8}, {37, 16.5375}, {38, 6.725}, {39, 11.0375}, {40, 16.4}, {41, 19.7875}, {42, 28.2625}, {43, 19.1625}, {44, 16.9}, {45, 15.25}, {46, 20.8375}, {47, 19.8125}, {48, 38.175}, {49, 10.3}, {50, 18.25}, {51, 27.325}, {52, 13.8375}, {53, 11.3375}, {54, 20.7}, {55, 26.9125}, {56, 14.3375}, {57, 20.25}, {58, 13.125}, {59, 27.85}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 14.3375}, {1, 8.25}, {2, 0}, {3, 6.725}, {4, 16.775}, {5, 22}, {6, 22.125}, {7, 10.4875}, {8, 26.9125}, {9, 19.925}, {10, 20.175}, {11, 12.55}, {12, 13.3}, {13, 1.25}, {14, 22.4}, {15, 5.75}, {16, 21.8375}, {17, 13.25}, {18, 5.2}, {19, 22.675}, {20, 18.25}, {21, 18.575}, {22, 11.225}, {23, 28.05}, {24, 17}, {25, 14.0125}, {26, 17.775}, {27, 30.825}, {28, 14.225}, {29, 16.9875}, {30, 25.675}, {31, 6.5375}, {32, 22.4}, {33, 11.775}, {34, 18.175}, {35, 11.8375}, {36, 23.55}, {37, 10.7875}, {38, 11.6875}, {39, 2.7875}, {40, 12.9875}, {41, 11.5375}, {42, 30.4}, {43, 13.825}, {44, 25.15}, {45, 14.3125}, {46, 19.9}, {47, 26.925}, {48, 31.8}, {49, 18.55}, {50, 20.5625}, {51, 21.9875}, {52, 17.0875}, {53, 14.5875}, {54, 28.4625}, {55, 29.4625}, {56, 22.1}, {57, 19.3125}, {58, 7.7875}, {59, 19.6}, 