node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 24, 25, 26, 28, 29, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 57, 58,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 29), Line(0, 33), Line(0, 39), Line(1, 4), Line(1, 23), Line(1, 51), Line(1, 56), Line(2, 37), Line(2, 41), Line(2, 56), Line(3, 39), Line(3, 44), Line(3, 51), Line(4, 6), Line(5, 15), Line(5, 27), Line(5, 52), Line(6, 56), Line(7, 28), Line(7, 39), Line(7, 43), Line(8, 26), Line(8, 34), Line(8, 51), Line(9, 25), Line(9, 32), Line(9, 53), Line(9, 58), Line(10, 18), Line(10, 21), Line(11, 19), Line(11, 28), Line(11, 45), Line(11, 54), Line(12, 15), Line(12, 28), Line(12, 46), Line(13, 20), Line(13, 36), Line(14, 22), Line(14, 30), Line(14, 38), Line(14, 40), Line(14, 43), Line(14, 57), Line(16, 47), Line(16, 50), Line(17, 29), Line(17, 45), Line(17, 53), Line(18, 23), Line(18, 40), Line(19, 41), Line(19, 53), Line(20, 26), Line(21, 24), Line(21, 44), Line(22, 38), Line(22, 44), Line(22, 47), Line(24, 29), Line(24, 32), Line(25, 36), Line(25, 44), Line(26, 35), Line(27, 35), Line(27, 48), Line(28, 36), Line(29, 47), Line(29, 50), Line(30, 43), Line(30, 52), Line(31, 56), Line(31, 59), Line(32, 57), Line(33, 40), Line(34, 46), Line(34, 53), Line(34, 55), Line(35, 42), Line(37, 48), Line(38, 58), Line(40, 42), Line(42, 46), Line(42, 58), Line(45, 49), Line(46, 52), Line(49, 50), Line(54, 58), Line(55, 59),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 29), Line(0, 33), Line(0, 39), Line(1, 4), Line(1, 23), Line(1, 51), Line(1, 56), Line(2, 37), Line(5, 15), Line(5, 27), Line(5, 52), Line(6, 56), Line(7, 28), Line(7, 43), Line(8, 26), Line(9, 25), Line(9, 32), Line(9, 53), Line(10, 18), Line(10, 21), Line(11, 19), Line(11, 28), Line(11, 45), Line(12, 15), Line(12, 28), Line(13, 36), Line(14, 22), Line(14, 30), Line(14, 57), Line(16, 50), Line(17, 45), Line(18, 23), Line(18, 40), Line(19, 41), Line(19, 53), Line(21, 24), Line(21, 44), Line(22, 38), Line(22, 44), Line(24, 29), Line(25, 36), Line(25, 44), Line(26, 35), Line(27, 35), Line(27, 48), Line(28, 36), Line(29, 50), Line(30, 43), Line(30, 52), Line(31, 59), Line(32, 57), Line(33, 40), Line(34, 46), Line(34, 53), Line(34, 55), Line(37, 48), Line(38, 58), Line(40, 42), Line(42, 46), Line(42, 58), Line(45, 49), Line(49, 50),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 29, 5.65685);
g.add_edge(0, 33, 4.12311);
g.add_edge(0, 39, 2.23607);
g.add_edge(1, 4, 4.47214);
g.add_edge(1, 23, 1.41421);
g.add_edge(1, 51, 7.81025);
g.add_edge(1, 56, 7.28011);
g.add_edge(2, 37, 3.60555);
g.add_edge(2, 41, 10.8167);
g.add_edge(2, 56, 3);
g.add_edge(3, 39, 6.08276);
g.add_edge(3, 44, 6.32456);
g.add_edge(3, 51, 1.41421);
g.add_edge(4, 6, 6.32456);
g.add_edge(5, 15, 1.41421);
g.add_edge(5, 27, 2.23607);
g.add_edge(5, 52, 5.38516);
g.add_edge(6, 56, 5.38516);
g.add_edge(7, 28, 3.60555);
g.add_edge(7, 39, 2.23607);
g.add_edge(7, 43, 3.16228);
g.add_edge(8, 26, 1.41421);
g.add_edge(8, 34, 5.65685);
g.add_edge(8, 51, 6.08276);
g.add_edge(9, 25, 1.41421);
g.add_edge(9, 32, 8.94427);
g.add_edge(9, 53, 5.65685);
g.add_edge(9, 58, 2.23607);
g.add_edge(10, 18, 8.06226);
g.add_edge(10, 21, 6.40312);
g.add_edge(11, 19, 5.83095);
g.add_edge(11, 28, 4.47214);
g.add_edge(11, 45, 6.32456);
g.add_edge(11, 54, 4.12311);
g.add_edge(12, 15, 5.38516);
g.add_edge(12, 28, 6.7082);
g.add_edge(12, 46, 7);
g.add_edge(13, 20, 6.40312);
g.add_edge(13, 36, 2.82843);
g.add_edge(14, 22, 8.24621);
g.add_edge(14, 30, 7.07107);
g.add_edge(14, 38, 2.23607);
g.add_edge(14, 40, 5.65685);
g.add_edge(14, 43, 5.38516);
g.add_edge(14, 57, 10);
g.add_edge(16, 47, 3.60555);
g.add_edge(16, 50, 5.38516);
g.add_edge(17, 29, 7.2111);
g.add_edge(17, 45, 2.23607);
g.add_edge(17, 53, 1);
g.add_edge(18, 23, 5.38516);
g.add_edge(18, 40, 6.08276);
g.add_edge(19, 41, 10.6301);
g.add_edge(19, 53, 3.16228);
g.add_edge(20, 26, 4.24264);
g.add_edge(21, 24, 5.65685);
g.add_edge(21, 44, 7.61577);
g.add_edge(22, 38, 9);
g.add_edge(22, 44, 3);
g.add_edge(22, 47, 4.12311);
g.add_edge(24, 29, 1.41421);
g.add_edge(24, 32, 10.8167);
g.add_edge(25, 36, 7.28011);
g.add_edge(25, 44, 8.06226);
g.add_edge(26, 35, 7.61577);
g.add_edge(27, 35, 1);
g.add_edge(27, 48, 1);
g.add_edge(28, 36, 5);
g.add_edge(29, 47, 2.82843);
g.add_edge(29, 50, 3.16228);
g.add_edge(30, 43, 6.40312);
g.add_edge(30, 52, 6.08276);
g.add_edge(31, 56, 1.41421);
g.add_edge(31, 59, 8.06226);
g.add_edge(32, 57, 12.7279);
g.add_edge(33, 40, 7.07107);
g.add_edge(34, 46, 4.47214);
g.add_edge(34, 53, 5.09902);
g.add_edge(34, 55, 3.60555);
g.add_edge(35, 42, 8.94427);
g.add_edge(37, 48, 2.23607);
g.add_edge(38, 58, 4.47214);
g.add_edge(40, 42, 4.47214);
g.add_edge(42, 46, 4);
g.add_edge(42, 58, 1);
g.add_edge(45, 49, 9);
g.add_edge(46, 52, 2.23607);
g.add_edge(49, 50, 5.83095);
g.add_edge(54, 58, 3.16228);
g.add_edge(55, 59, 3);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 8.11);
g.set_importance(9, 4.07);
g.set_importance(10, 8.67);
g.set_importance(11, 0);
g.set_importance(12, 1.67);
g.set_importance(13, 9.97);
g.set_importance(14, 8.76);
g.set_importance(15, 7.41);
g.set_importance(16, 1.51);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 2.89);
g.set_importance(20, 7.79);
g.set_importance(21, 0);
g.set_importance(22, 8.67);
g.set_importance(23, 0);
g.set_importance(24, 5.29);
g.set_importance(25, 2.38);
g.set_importance(26, 4.62);
g.set_importance(27, 0);
g.set_importance(28, 7.4);
g.set_importance(29, 3.72);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 3.4);
g.set_importance(33, 0);
g.set_importance(34, 3.17);
g.set_importance(35, 8);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 6.86);
g.set_importance(39, 7.39);
g.set_importance(40, 4.62);
g.set_importance(41, 5.94);
g.set_importance(42, 5.03);
g.set_importance(43, 5.5);
g.set_importance(44, 1.56);
g.set_importance(45, 9.21);
g.set_importance(46, 0);
g.set_importance(47, 5.68);
g.set_importance(48, 6.53);
g.set_importance(49, 0);
g.set_importance(50, 1.66);
g.set_importance(51, 3.85);
g.set_importance(52, 4.45);
g.set_importance(53, 8.05);
g.set_importance(54, 2.16);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 6.58);
g.set_importance(58, 2.85);
g.set_importance(59, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 29), 3.8);
g.set_repair_time(Line(0, 33), 3.33);
g.set_repair_time(Line(0, 39), 2.64);
g.set_repair_time(Line(1, 4), 2.82);
g.set_repair_time(Line(1, 23), 4.89);
g.set_repair_time(Line(1, 51), 2.38);
g.set_repair_time(Line(1, 56), 4.26);
g.set_repair_time(Line(2, 37), 1.63);
g.set_repair_time(Line(5, 15), 1.93);
g.set_repair_time(Line(5, 27), 1.3);
g.set_repair_time(Line(5, 52), 3.12);
g.set_repair_time(Line(6, 56), 4.71);
g.set_repair_time(Line(7, 28), 3.36);
g.set_repair_time(Line(7, 43), 2.72);
g.set_repair_time(Line(8, 26), 1.59);
g.set_repair_time(Line(9, 25), 3.14);
g.set_repair_time(Line(9, 32), 2.6);
g.set_repair_time(Line(9, 53), 4.13);
g.set_repair_time(Line(10, 18), 4.64);
g.set_repair_time(Line(10, 21), 2.69);
g.set_repair_time(Line(11, 19), 1.3);
g.set_repair_time(Line(11, 28), 1.22);
g.set_repair_time(Line(11, 45), 3.84);
g.set_repair_time(Line(12, 15), 1.95);
g.set_repair_time(Line(12, 28), 1.05);
g.set_repair_time(Line(13, 36), 1.92);
g.set_repair_time(Line(14, 22), 3.51);
g.set_repair_time(Line(14, 30), 2.45);
g.set_repair_time(Line(14, 57), 2.97);
g.set_repair_time(Line(16, 50), 2.14);
g.set_repair_time(Line(17, 45), 3.17);
g.set_repair_time(Line(18, 23), 1.82);
g.set_repair_time(Line(18, 40), 4);
g.set_repair_time(Line(19, 41), 4.59);
g.set_repair_time(Line(19, 53), 4.5);
g.set_repair_time(Line(21, 24), 1.18);
g.set_repair_time(Line(21, 44), 4.57);
g.set_repair_time(Line(22, 38), 2.64);
g.set_repair_time(Line(22, 44), 4.52);
g.set_repair_time(Line(24, 29), 3.69);
g.set_repair_time(Line(25, 36), 4.24);
g.set_repair_time(Line(25, 44), 4.72);
g.set_repair_time(Line(26, 35), 4.74);
g.set_repair_time(Line(27, 35), 1.55);
g.set_repair_time(Line(27, 48), 2.73);
g.set_repair_time(Line(28, 36), 2.24);
g.set_repair_time(Line(29, 50), 2.03);
g.set_repair_time(Line(30, 43), 1.63);
g.set_repair_time(Line(30, 52), 1.53);
g.set_repair_time(Line(31, 59), 1.19);
g.set_repair_time(Line(32, 57), 4.34);
g.set_repair_time(Line(33, 40), 2.37);
g.set_repair_time(Line(34, 46), 4.39);
g.set_repair_time(Line(34, 53), 3.64);
g.set_repair_time(Line(34, 55), 4.08);
g.set_repair_time(Line(37, 48), 2.71);
g.set_repair_time(Line(38, 58), 2.44);
g.set_repair_time(Line(40, 42), 4.99);
g.set_repair_time(Line(42, 46), 4.02);
g.set_repair_time(Line(42, 58), 1.37);
g.set_repair_time(Line(45, 49), 3.47);
g.set_repair_time(Line(49, 50), 2.68);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 21.9291}, {2, 34.7793}, {3, 10.3985}, {4, 27.5193}, {5, 26.9816}, {6, 35.425}, {7, 5.59017}, {8, 19.7698}, {9, 23.628}, {10, 23.9138}, {11, 15.6873}, {12, 18.4824}, {13, 19.8826}, {14, 16.2745}, {15, 25.2138}, {16, 15.1135}, {17, 16.0849}, {18, 21.5962}, {19, 21.2878}, {20, 26.8408}, {21, 15.9099}, {22, 15.7605}, {23, 23.6969}, {24, 8.83883}, {25, 25.3957}, {26, 21.5375}, {27, 29.7767}, {28, 10.0971}, {29, 7.07107}, {30, 17.5469}, {31, 32.797}, {32, 22.3597}, {33, 5.15388}, {34, 23.7087}, {35, 30.7632}, {36, 16.3471}, {37, 33.8218}, {38, 19.0696}, {39, 2.79508}, {40, 13.9927}, {41, 34.5755}, {42, 19.5829}, {43, 9.54302}, {44, 18.3042}, {45, 18.88}, {46, 24.5829}, {47, 10.6066}, {48, 31.0267}, {49, 18.3126}, {50, 11.0239}, {51, 12.1663}, {52, 25.1504}, {53, 17.3349}, {54, 20.8412}, {55, 28.2157}, {56, 31.0293}, {57, 28.7745}, {58, 20.8329}, {59, 31.9657}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 21.9291}, {1, 0}, {2, 12.8501}, {3, 11.5306}, {4, 5.59017}, {5, 24.1972}, {6, 13.4959}, {7, 21.9291}, {8, 17.3663}, {9, 25.7379}, {10, 18.577}, {11, 32.0262}, {12, 32.6965}, {13, 32.4412}, {14, 23.1737}, {15, 25.965}, {16, 32.8471}, {17, 32.0611}, {18, 8.49922}, {19, 34.764}, {20, 24.4373}, {21, 26.581}, {22, 23.1863}, {23, 1.76777}, {24, 30.768}, {25, 27.5057}, {26, 19.134}, {27, 21.4022}, {28, 26.4361}, {29, 29.0002}, {30, 32.0126}, {31, 10.8679}, {32, 36.9183}, {33, 24.9415}, {34, 24.4373}, {35, 22.6522}, {36, 32.6861}, {37, 17.3571}, {38, 25.9688}, {39, 19.134}, {40, 16.1027}, {41, 26.371}, {42, 21.6928}, {43, 25.882}, {44, 19.4363}, {45, 34.8562}, {46, 26.6928}, {47, 28.3402}, {48, 20.1522}, {49, 40.2417}, {50, 32.953}, {51, 9.76281}, {52, 29.4879}, {53, 30.8111}, {54, 26.8957}, {55, 24.6957}, {56, 9.10014}, {57, 35.6737}, {58, 22.9428}, {59, 20.9457}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 34.7793}, {1, 12.8501}, {2, 0}, {3, 24.3807}, {4, 18.3872}, {5, 11.3471}, {6, 10.4815}, {7, 32.7385}, {8, 21.0895}, {9, 25.0274}, {10, 31.4272}, {11, 31.3391}, {12, 19.8463}, {13, 32.6289}, {14, 30.6176}, {15, 13.1149}, {16, 45.6972}, {17, 31.4763}, {18, 21.3494}, {19, 26.8085}, {20, 24.625}, {21, 39.4311}, {22, 36.0364}, {23, 14.6179}, {24, 42.2579}, {25, 26.7952}, {26, 19.3217}, {27, 8.55202}, {28, 28.2316}, {29, 40.4902}, {30, 25.682}, {31, 5.51777}, {32, 36.2078}, {33, 35.4114}, {34, 23.8525}, {35, 9.80202}, {36, 34.4816}, {37, 4.50694}, {38, 27.8225}, {39, 31.9842}, {40, 26.5725}, {41, 13.5208}, {42, 20.9824}, {43, 33.6859}, {44, 32.2864}, {45, 34.2714}, {46, 20.8737}, {47, 41.1903}, {48, 7.30202}, {49, 45.5214}, {50, 44.443}, {51, 22.6129}, {52, 18.0786}, {53, 30.2263}, {54, 26.1852}, {55, 19.3456}, {56, 3.75}, {57, 43.1176}, {58, 22.2324}, {59, 15.5956}, 