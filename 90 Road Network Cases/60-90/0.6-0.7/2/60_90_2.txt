node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 51, 52, 53, 54, 57,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 11), Line(0, 14), Line(0, 27), Line(0, 34), Line(0, 48), Line(1, 8), Line(1, 11), Line(1, 18), Line(1, 57), Line(2, 20), Line(2, 41), Line(2, 42), Line(2, 45), Line(3, 22), Line(3, 25), Line(3, 54), Line(4, 7), Line(4, 36), Line(4, 41), Line(4, 50), Line(5, 44), Line(5, 45), Line(5, 55), Line(6, 44), Line(6, 50), Line(7, 31), Line(8, 34), Line(8, 43), Line(9, 14), Line(9, 34), Line(9, 36), Line(10, 50), Line(10, 59), Line(12, 48), Line(13, 15), Line(13, 28), Line(14, 24), Line(14, 41), Line(15, 22), Line(15, 24), Line(16, 22), Line(16, 47), Line(16, 58), Line(17, 52), Line(17, 57), Line(18, 37), Line(19, 23), Line(19, 24), Line(19, 25), Line(19, 34), Line(19, 49), Line(20, 33), Line(21, 25), Line(21, 30), Line(21, 32), Line(21, 39), Line(22, 55), Line(23, 38), Line(23, 39), Line(24, 41), Line(24, 51), Line(25, 54), Line(26, 37), Line(26, 55), Line(26, 57), Line(27, 39), Line(27, 51), Line(28, 54), Line(29, 49), Line(29, 56), Line(30, 40), Line(30, 59), Line(31, 38), Line(32, 35), Line(32, 47), Line(33, 45), Line(35, 43), Line(35, 46), Line(36, 51), Line(36, 52), Line(38, 58), Line(40, 55), Line(40, 56), Line(42, 43), Line(43, 48), Line(44, 45), Line(46, 53), Line(47, 52), Line(49, 55), Line(53, 58),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 11), Line(0, 34), Line(0, 48), Line(1, 8), Line(1, 11), Line(1, 18), Line(1, 57), Line(2, 20), Line(2, 41), Line(2, 45), Line(3, 25), Line(3, 54), Line(4, 7), Line(4, 36), Line(4, 41), Line(4, 50), Line(5, 44), Line(5, 45), Line(6, 44), Line(6, 50), Line(7, 31), Line(9, 14), Line(9, 34), Line(10, 50), Line(10, 59), Line(12, 48), Line(13, 28), Line(14, 24), Line(15, 24), Line(16, 22), Line(16, 47), Line(18, 37), Line(19, 23), Line(19, 24), Line(20, 33), Line(21, 30), Line(21, 32), Line(22, 55), Line(23, 38), Line(23, 39), Line(24, 41), Line(25, 54), Line(26, 37), Line(26, 55), Line(26, 57), Line(27, 39), Line(28, 54), Line(29, 56), Line(30, 40), Line(30, 59), Line(31, 38), Line(32, 35), Line(32, 47), Line(35, 43), Line(38, 58), Line(40, 55), Line(40, 56), Line(42, 43), Line(44, 45), Line(46, 53), Line(49, 55), Line(53, 58),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 11, 10);
g.add_edge(0, 14, 3.60555);
g.add_edge(0, 27, 7.07107);
g.add_edge(0, 34, 7.81025);
g.add_edge(0, 48, 4.12311);
g.add_edge(1, 8, 10.2956);
g.add_edge(1, 11, 11.4018);
g.add_edge(1, 18, 7.61577);
g.add_edge(1, 57, 1.41421);
g.add_edge(2, 20, 2.23607);
g.add_edge(2, 41, 6);
g.add_edge(2, 42, 5.38516);
g.add_edge(2, 45, 7);
g.add_edge(3, 22, 5);
g.add_edge(3, 25, 3.16228);
g.add_edge(3, 54, 3.16228);
g.add_edge(4, 7, 8.24621);
g.add_edge(4, 36, 8.544);
g.add_edge(4, 41, 2);
g.add_edge(4, 50, 6.40312);
g.add_edge(5, 44, 2.23607);
g.add_edge(5, 45, 8.24621);
g.add_edge(5, 55, 8.60233);
g.add_edge(6, 44, 6.32456);
g.add_edge(6, 50, 5);
g.add_edge(7, 31, 9.48683);
g.add_edge(8, 34, 3.60555);
g.add_edge(8, 43, 9.43398);
g.add_edge(9, 14, 2.23607);
g.add_edge(9, 34, 3);
g.add_edge(9, 36, 5.09902);
g.add_edge(10, 50, 1.41421);
g.add_edge(10, 59, 3);
g.add_edge(12, 48, 2.82843);
g.add_edge(13, 15, 4.47214);
g.add_edge(13, 28, 3.60555);
g.add_edge(14, 24, 2);
g.add_edge(14, 41, 4.47214);
g.add_edge(15, 22, 7.81025);
g.add_edge(15, 24, 4.12311);
g.add_edge(16, 22, 8.94427);
g.add_edge(16, 47, 4.47214);
g.add_edge(16, 58, 1.41421);
g.add_edge(17, 52, 3.16228);
g.add_edge(17, 57, 5.38516);
g.add_edge(18, 37, 4.12311);
g.add_edge(19, 23, 3.16228);
g.add_edge(19, 24, 3.16228);
g.add_edge(19, 25, 3.60555);
g.add_edge(19, 34, 5.09902);
g.add_edge(19, 49, 2.23607);
g.add_edge(20, 33, 6.32456);
g.add_edge(21, 25, 3.60555);
g.add_edge(21, 30, 5.38516);
g.add_edge(21, 32, 7.28011);
g.add_edge(21, 39, 8.60233);
g.add_edge(22, 55, 9.21954);
g.add_edge(23, 38, 4.24264);
g.add_edge(23, 39, 7.61577);
g.add_edge(24, 41, 6.32456);
g.add_edge(24, 51, 4.24264);
g.add_edge(25, 54, 2.82843);
g.add_edge(26, 37, 7.2111);
g.add_edge(26, 55, 3.60555);
g.add_edge(26, 57, 8.06226);
g.add_edge(27, 39, 6.08276);
g.add_edge(27, 51, 1);
g.add_edge(28, 54, 5);
g.add_edge(29, 49, 7.61577);
g.add_edge(29, 56, 8.60233);
g.add_edge(30, 40, 2.23607);
g.add_edge(30, 59, 1);
g.add_edge(31, 38, 7.2111);
g.add_edge(32, 35, 5.83095);
g.add_edge(32, 47, 1);
g.add_edge(33, 45, 8.60233);
g.add_edge(35, 43, 8.544);
g.add_edge(35, 46, 3.16228);
g.add_edge(36, 51, 7);
g.add_edge(36, 52, 4.12311);
g.add_edge(38, 58, 4.47214);
g.add_edge(40, 55, 5);
g.add_edge(40, 56, 2.23607);
g.add_edge(42, 43, 9.21954);
g.add_edge(43, 48, 4);
g.add_edge(44, 45, 6.08276);
g.add_edge(46, 53, 2.82843);
g.add_edge(47, 52, 5.09902);
g.add_edge(49, 55, 5.65685);
g.add_edge(53, 58, 6.08276);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 4.01);
g.set_importance(7, 2.14);
g.set_importance(8, 5.93);
g.set_importance(9, 8.43);
g.set_importance(10, 5.87);
g.set_importance(11, 0);
g.set_importance(12, 6.67);
g.set_importance(13, 1.29);
g.set_importance(14, 9.96);
g.set_importance(15, 0);
g.set_importance(16, 3.96);
g.set_importance(17, 0);
g.set_importance(18, 9.82);
g.set_importance(19, 1.37);
g.set_importance(20, 3.06);
g.set_importance(21, 0);
g.set_importance(22, 2.55);
g.set_importance(23, 5.09);
g.set_importance(24, 7.65);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 9.34);
g.set_importance(28, 4.71);
g.set_importance(29, 9.54);
g.set_importance(30, 3.97);
g.set_importance(31, 7.05);
g.set_importance(32, 0);
g.set_importance(33, 4.07);
g.set_importance(34, 3.72);
g.set_importance(35, 7.43);
g.set_importance(36, 0);
g.set_importance(37, 2.91);
g.set_importance(38, 0);
g.set_importance(39, 4.97);
g.set_importance(40, 8.67);
g.set_importance(41, 4.96);
g.set_importance(42, 6.15);
g.set_importance(43, 0);
g.set_importance(44, 9.14);
g.set_importance(45, 7.08);
g.set_importance(46, 4.58);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 0);
g.set_importance(51, 5.14);
g.set_importance(52, 4.17);
g.set_importance(53, 2.53);
g.set_importance(54, 3.66);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 1.12);
g.set_importance(58, 0);
g.set_importance(59, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 11), 3.52);
g.set_repair_time(Line(0, 34), 4.24);
g.set_repair_time(Line(0, 48), 2.65);
g.set_repair_time(Line(1, 8), 4.93);
g.set_repair_time(Line(1, 11), 1.02);
g.set_repair_time(Line(1, 18), 3.9);
g.set_repair_time(Line(1, 57), 3.05);
g.set_repair_time(Line(2, 20), 1.03);
g.set_repair_time(Line(2, 41), 3.92);
g.set_repair_time(Line(2, 45), 2.8);
g.set_repair_time(Line(3, 25), 4.71);
g.set_repair_time(Line(3, 54), 2.67);
g.set_repair_time(Line(4, 7), 2.22);
g.set_repair_time(Line(4, 36), 2.19);
g.set_repair_time(Line(4, 41), 4.41);
g.set_repair_time(Line(4, 50), 2.21);
g.set_repair_time(Line(5, 44), 2.66);
g.set_repair_time(Line(5, 45), 4.6);
g.set_repair_time(Line(6, 44), 4.31);
g.set_repair_time(Line(6, 50), 4.35);
g.set_repair_time(Line(7, 31), 1.39);
g.set_repair_time(Line(9, 14), 4.33);
g.set_repair_time(Line(9, 34), 1.38);
g.set_repair_time(Line(10, 50), 1.06);
g.set_repair_time(Line(10, 59), 4.47);
g.set_repair_time(Line(12, 48), 3.6);
g.set_repair_time(Line(13, 28), 2.14);
g.set_repair_time(Line(14, 24), 3.83);
g.set_repair_time(Line(15, 24), 2.08);
g.set_repair_time(Line(16, 22), 4.59);
g.set_repair_time(Line(16, 47), 1.61);
g.set_repair_time(Line(18, 37), 1.18);
g.set_repair_time(Line(19, 23), 1.94);
g.set_repair_time(Line(19, 24), 4.14);
g.set_repair_time(Line(20, 33), 4.21);
g.set_repair_time(Line(21, 30), 4.18);
g.set_repair_time(Line(21, 32), 4.84);
g.set_repair_time(Line(22, 55), 3.78);
g.set_repair_time(Line(23, 38), 1.3);
g.set_repair_time(Line(23, 39), 1.98);
g.set_repair_time(Line(24, 41), 1.19);
g.set_repair_time(Line(25, 54), 4.95);
g.set_repair_time(Line(26, 37), 2);
g.set_repair_time(Line(26, 55), 2.99);
g.set_repair_time(Line(26, 57), 2.82);
g.set_repair_time(Line(27, 39), 4.06);
g.set_repair_time(Line(28, 54), 2.67);
g.set_repair_time(Line(29, 56), 2.15);
g.set_repair_time(Line(30, 40), 1.69);
g.set_repair_time(Line(30, 59), 4.34);
g.set_repair_time(Line(31, 38), 2.54);
g.set_repair_time(Line(32, 35), 1.14);
g.set_repair_time(Line(32, 47), 4);
g.set_repair_time(Line(35, 43), 4.81);
g.set_repair_time(Line(38, 58), 1);
g.set_repair_time(Line(40, 55), 4.86);
g.set_repair_time(Line(40, 56), 1.91);
g.set_repair_time(Line(42, 43), 2.15);
g.set_repair_time(Line(44, 45), 1.21);
g.set_repair_time(Line(46, 53), 4.34);
g.set_repair_time(Line(49, 55), 4.28);
g.set_repair_time(Line(53, 58), 4.58);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 26.7522}, {2, 17.5971}, {3, 19.4196}, {4, 12.5971}, {5, 31.5788}, {6, 26.851}, {7, 22.9049}, {8, 14.2698}, {9, 7.30202}, {10, 22.3688}, {11, 12.5}, {12, 8.68942}, {13, 17.751}, {14, 4.50694}, {15, 12.1608}, {16, 27.5739}, {17, 22.7825}, {18, 36.2719}, {19, 10.9598}, {20, 20.3922}, {21, 19.9737}, {22, 21.9236}, {23, 14.9126}, {24, 7.00694}, {25, 15.4667}, {26, 25.3329}, {27, 8.83883}, {28, 22.2579}, {29, 23.2746}, {30, 26.7051}, {31, 29.2298}, {32, 26.4535}, {33, 28.2979}, {34, 9.76281}, {35, 20.8339}, {36, 13.6758}, {37, 34.3468}, {38, 20.2159}, {39, 16.4423}, {40, 27.0759}, {41, 10.0971}, {42, 21.6783}, {43, 10.1539}, {44, 33.9506}, {45, 26.3471}, {46, 24.7867}, {47, 25.2035}, {48, 5.15388}, {49, 13.7549}, {50, 20.601}, {51, 10.0888}, {52, 18.8297}, {53, 28.3223}, {54, 19.0023}, {55, 20.8259}, {56, 29.871}, {57, 28.52}, {58, 25.8061}, {59, 26.1188}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 26.7522}, {1, 0}, {2, 37.0117}, {3, 32.21}, {4, 28.286}, {5, 27.1054}, {6, 37.8062}, {7, 38.5937}, {8, 12.8695}, {9, 21.1265}, {10, 30.3976}, {11, 14.2522}, {12, 33.1975}, {13, 37.1656}, {14, 23.9216}, {15, 31.5754}, {16, 24.416}, {17, 8.49922}, {18, 9.51972}, {19, 23.7503}, {20, 39.8068}, {21, 29.176}, {22, 27.877}, {23, 27.7031}, {24, 26.4216}, {25, 28.2572}, {26, 11.8456}, {27, 27.606}, {28, 38.0427}, {29, 32.9433}, {30, 25.3976}, {31, 40.7878}, {32, 20.0758}, {33, 47.7125}, {34, 17.3765}, {35, 27.3645}, {36, 17.606}, {37, 14.6736}, {38, 31.774}, {39, 35.2094}, {40, 22.6025}, {41, 29.5117}, {42, 36.1864}, {43, 24.662}, {44, 29.9005}, {45, 37.4132}, {46, 31.3174}, {47, 18.8258}, {48, 29.662}, {49, 23.4236}, {50, 32.1654}, {51, 26.356}, {52, 12.4521}, {53, 33.7872}, {54, 31.7927}, {55, 16.3525}, {56, 25.3976}, {57, 1.76777}, {58, 26.1838}, {59, 26.6476}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 17.5971}, {1, 37.0117}, {2, 0}, {3, 27.8183}, {4, 10}, {5, 19.0578}, {6, 24.2539}, {7, 20.3078}, {8, 24.1422}, {9, 15.8853}, {10, 19.7717}, {11, 30.0971}, {12, 26.2865}, {13, 26.1497}, {14, 13.0902}, {15, 20.5596}, {16, 35.9726}, {17, 29.7867}, {18, 46.5314}, {19, 19.3585}, {20, 2.79508}, {21, 28.3724}, {22, 30.3224}, {23, 23.3114}, {24, 15.4057}, {25, 23.8655}, {26, 33.7316}, {27, 21.959}, {28, 30.6567}, {29, 31.6733}, {30, 24.7717}, {31, 32.1663}, {32, 33.4577}, {33, 10.7008}, {34, 19.6353}, {35, 28.9359}, {36, 20.68}, {37, 42.7455}, {38, 28.6147}, {39, 29.5624}, {40, 27.5668}, {41, 7.5}, {42, 6.73146}, {43, 18.2559}, {44, 16.3535}, {45, 8.75}, {46, 32.8887}, {47, 32.2077}, {48, 22.751}, {49, 22.1536}, {50, 18.0039}, {51, 20.709}, {52, 25.8339}, {53, 36.4243}, {54, 27.401}, {55, 29.2247}, {56, 30.3618}, {57, 36.5182}, {58, 34.2049}, {59, 23.5217}, 