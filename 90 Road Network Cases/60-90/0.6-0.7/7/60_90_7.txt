node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 8, 9, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 47, 50, 51, 53, 55, 57, 58,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 39), Line(0, 42), Line(0, 44), Line(0, 49), Line(1, 29), Line(1, 42), Line(2, 13), Line(2, 41), Line(3, 10), Line(3, 15), Line(3, 17), Line(4, 9), Line(4, 17), Line(4, 37), Line(4, 46), Line(5, 45), Line(5, 57), Line(6, 7), Line(6, 20), Line(6, 51), Line(6, 53), Line(7, 22), Line(8, 19), Line(8, 32), Line(9, 10), Line(9, 16), Line(9, 27), Line(9, 30), Line(11, 18), Line(11, 36), Line(11, 44), Line(11, 46), Line(11, 54), Line(12, 15), Line(12, 17), Line(12, 20), Line(12, 22), Line(12, 35), Line(13, 19), Line(13, 45), Line(14, 21), Line(14, 58), Line(15, 20), Line(15, 39), Line(15, 52), Line(15, 55), Line(16, 28), Line(16, 32), Line(18, 28), Line(18, 43), Line(21, 24), Line(21, 44), Line(22, 46), Line(23, 41), Line(23, 43), Line(23, 57), Line(24, 53), Line(24, 57), Line(25, 39), Line(25, 47), Line(26, 51), Line(26, 56), Line(26, 57), Line(27, 43), Line(27, 58), Line(27, 59), Line(28, 59), Line(29, 52), Line(30, 56), Line(31, 38), Line(31, 48), Line(33, 50), Line(33, 59), Line(34, 49), Line(34, 58), Line(35, 37), Line(35, 49), Line(35, 51), Line(36, 53), Line(37, 38), Line(39, 59), Line(40, 48), Line(40, 54), Line(41, 50), Line(42, 47), Line(45, 49), Line(47, 54), Line(50, 52), Line(51, 55), Line(51, 59),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 39), Line(0, 42), Line(0, 44), Line(0, 49), Line(1, 29), Line(1, 42), Line(2, 13), Line(3, 15), Line(3, 17), Line(4, 9), Line(4, 17), Line(4, 37), Line(4, 46), Line(5, 45), Line(6, 7), Line(6, 20), Line(6, 51), Line(6, 53), Line(8, 32), Line(9, 10), Line(9, 16), Line(9, 27), Line(9, 30), Line(11, 36), Line(11, 44), Line(11, 46), Line(11, 54), Line(12, 15), Line(12, 17), Line(12, 20), Line(12, 35), Line(14, 58), Line(15, 20), Line(15, 52), Line(15, 55), Line(18, 43), Line(21, 24), Line(21, 44), Line(22, 46), Line(23, 57), Line(24, 53), Line(24, 57), Line(25, 39), Line(25, 47), Line(26, 51), Line(26, 56), Line(26, 57), Line(27, 43), Line(27, 59), Line(29, 52), Line(30, 56), Line(31, 48), Line(33, 50), Line(34, 49), Line(35, 37), Line(35, 49), Line(39, 59), Line(40, 48), Line(40, 54), Line(42, 47), Line(47, 54), Line(51, 59),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 39, 9.48683);
g.add_edge(0, 42, 7.2111);
g.add_edge(0, 44, 9.05539);
g.add_edge(0, 49, 3.60555);
g.add_edge(1, 29, 3.60555);
g.add_edge(1, 42, 9.48683);
g.add_edge(2, 13, 4.24264);
g.add_edge(2, 41, 1);
g.add_edge(3, 10, 1);
g.add_edge(3, 15, 2.23607);
g.add_edge(3, 17, 7.28011);
g.add_edge(4, 9, 8.24621);
g.add_edge(4, 17, 1);
g.add_edge(4, 37, 1.41421);
g.add_edge(4, 46, 7.81025);
g.add_edge(5, 45, 1);
g.add_edge(5, 57, 5);
g.add_edge(6, 7, 2);
g.add_edge(6, 20, 7.2111);
g.add_edge(6, 51, 3.16228);
g.add_edge(6, 53, 4.47214);
g.add_edge(7, 22, 5);
g.add_edge(8, 19, 8.94427);
g.add_edge(8, 32, 8.544);
g.add_edge(9, 10, 1);
g.add_edge(9, 16, 7);
g.add_edge(9, 27, 5.83095);
g.add_edge(9, 30, 8);
g.add_edge(11, 18, 5.38516);
g.add_edge(11, 36, 5);
g.add_edge(11, 44, 1.41421);
g.add_edge(11, 46, 4.12311);
g.add_edge(11, 54, 2.23607);
g.add_edge(12, 15, 4.24264);
g.add_edge(12, 17, 4.24264);
g.add_edge(12, 20, 7.28011);
g.add_edge(12, 22, 2);
g.add_edge(12, 35, 2.82843);
g.add_edge(13, 19, 7.07107);
g.add_edge(13, 45, 3.16228);
g.add_edge(14, 21, 1.41421);
g.add_edge(14, 58, 5);
g.add_edge(15, 20, 6.40312);
g.add_edge(15, 39, 7.81025);
g.add_edge(15, 52, 4.24264);
g.add_edge(15, 55, 4.47214);
g.add_edge(16, 28, 7.07107);
g.add_edge(16, 32, 2);
g.add_edge(18, 28, 8.94427);
g.add_edge(18, 43, 5.65685);
g.add_edge(21, 24, 2.23607);
g.add_edge(21, 44, 7.61577);
g.add_edge(22, 46, 6.32456);
g.add_edge(23, 41, 3.60555);
g.add_edge(23, 43, 4.12311);
g.add_edge(23, 57, 7.07107);
g.add_edge(24, 53, 6.40312);
g.add_edge(24, 57, 9.21954);
g.add_edge(25, 39, 8.06226);
g.add_edge(25, 47, 6.7082);
g.add_edge(26, 51, 7.2111);
g.add_edge(26, 56, 8.24621);
g.add_edge(26, 57, 2);
g.add_edge(27, 43, 6.08276);
g.add_edge(27, 58, 3.60555);
g.add_edge(27, 59, 2.23607);
g.add_edge(28, 59, 4.47214);
g.add_edge(29, 52, 3.16228);
g.add_edge(30, 56, 7.07107);
g.add_edge(31, 38, 2.23607);
g.add_edge(31, 48, 3.60555);
g.add_edge(33, 50, 5.09902);
g.add_edge(33, 59, 3.16228);
g.add_edge(34, 49, 5.38516);
g.add_edge(34, 58, 4.12311);
g.add_edge(35, 37, 4.12311);
g.add_edge(35, 49, 7.07107);
g.add_edge(35, 51, 5.38516);
g.add_edge(36, 53, 3.60555);
g.add_edge(37, 38, 4.12311);
g.add_edge(39, 59, 9.21954);
g.add_edge(40, 48, 4);
g.add_edge(40, 54, 5.83095);
g.add_edge(41, 50, 1.41421);
g.add_edge(42, 47, 7.07107);
g.add_edge(45, 49, 5);
g.add_edge(47, 54, 5);
g.add_edge(50, 52, 4.47214);
g.add_edge(51, 55, 2.23607);
g.add_edge(51, 59, 4.12311);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 9.65);
g.set_importance(8, 5.13);
g.set_importance(9, 2.75);
g.set_importance(10, 0);
g.set_importance(11, 2.28);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 5.31);
g.set_importance(15, 7.63);
g.set_importance(16, 0);
g.set_importance(17, 2.23);
g.set_importance(18, 8.36);
g.set_importance(19, 6.74);
g.set_importance(20, 0);
g.set_importance(21, 4.14);
g.set_importance(22, 1.27);
g.set_importance(23, 9.93);
g.set_importance(24, 5.99);
g.set_importance(25, 4.77);
g.set_importance(26, 2.61);
g.set_importance(27, 0);
g.set_importance(28, 8.98);
g.set_importance(29, 3.92);
g.set_importance(30, 5.89);
g.set_importance(31, 7.16);
g.set_importance(32, 9.37);
g.set_importance(33, 3.22);
g.set_importance(34, 5.23);
g.set_importance(35, 8.03);
g.set_importance(36, 0);
g.set_importance(37, 5.44);
g.set_importance(38, 0);
g.set_importance(39, 1.3);
g.set_importance(40, 0);
g.set_importance(41, 8.74);
g.set_importance(42, 3.98);
g.set_importance(43, 6.8);
g.set_importance(44, 1.19);
g.set_importance(45, 0);
g.set_importance(46, 0);
g.set_importance(47, 6.74);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 4.99);
g.set_importance(51, 7.18);
g.set_importance(52, 0);
g.set_importance(53, 5.49);
g.set_importance(54, 0);
g.set_importance(55, 1.52);
g.set_importance(56, 0);
g.set_importance(57, 3.4);
g.set_importance(58, 3.3);
g.set_importance(59, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 39), 1.32);
g.set_repair_time(Line(0, 42), 3.11);
g.set_repair_time(Line(0, 44), 4.66);
g.set_repair_time(Line(0, 49), 2.22);
g.set_repair_time(Line(1, 29), 1.13);
g.set_repair_time(Line(1, 42), 1.42);
g.set_repair_time(Line(2, 13), 2.18);
g.set_repair_time(Line(3, 15), 2.89);
g.set_repair_time(Line(3, 17), 1.28);
g.set_repair_time(Line(4, 9), 1.8);
g.set_repair_time(Line(4, 17), 1.82);
g.set_repair_time(Line(4, 37), 2.88);
g.set_repair_time(Line(4, 46), 4.65);
g.set_repair_time(Line(5, 45), 2.59);
g.set_repair_time(Line(6, 7), 1.51);
g.set_repair_time(Line(6, 20), 1.3);
g.set_repair_time(Line(6, 51), 1.89);
g.set_repair_time(Line(6, 53), 3.89);
g.set_repair_time(Line(8, 32), 2.98);
g.set_repair_time(Line(9, 10), 4.12);
g.set_repair_time(Line(9, 16), 4.18);
g.set_repair_time(Line(9, 27), 1.9);
g.set_repair_time(Line(9, 30), 4.17);
g.set_repair_time(Line(11, 36), 4);
g.set_repair_time(Line(11, 44), 1.2);
g.set_repair_time(Line(11, 46), 1.7);
g.set_repair_time(Line(11, 54), 1.54);
g.set_repair_time(Line(12, 15), 3.05);
g.set_repair_time(Line(12, 17), 2.35);
g.set_repair_time(Line(12, 20), 2.43);
g.set_repair_time(Line(12, 35), 2.56);
g.set_repair_time(Line(14, 58), 1.58);
g.set_repair_time(Line(15, 20), 2.35);
g.set_repair_time(Line(15, 52), 4.88);
g.set_repair_time(Line(15, 55), 1.06);
g.set_repair_time(Line(18, 43), 3.59);
g.set_repair_time(Line(21, 24), 2.52);
g.set_repair_time(Line(21, 44), 3.53);
g.set_repair_time(Line(22, 46), 4.48);
g.set_repair_time(Line(23, 57), 1.13);
g.set_repair_time(Line(24, 53), 2.65);
g.set_repair_time(Line(24, 57), 3.83);
g.set_repair_time(Line(25, 39), 3.58);
g.set_repair_time(Line(25, 47), 2.14);
g.set_repair_time(Line(26, 51), 1.27);
g.set_repair_time(Line(26, 56), 3.46);
g.set_repair_time(Line(26, 57), 2.8);
g.set_repair_time(Line(27, 43), 1.11);
g.set_repair_time(Line(27, 59), 4.72);
g.set_repair_time(Line(29, 52), 3.74);
g.set_repair_time(Line(30, 56), 2.8);
g.set_repair_time(Line(31, 48), 4.59);
g.set_repair_time(Line(33, 50), 4.13);
g.set_repair_time(Line(34, 49), 1.57);
g.set_repair_time(Line(35, 37), 5);
g.set_repair_time(Line(35, 49), 2.47);
g.set_repair_time(Line(39, 59), 2.18);
g.set_repair_time(Line(40, 48), 1.94);
g.set_repair_time(Line(40, 54), 4.96);
g.set_repair_time(Line(42, 47), 2.55);
g.set_repair_time(Line(47, 54), 3.57);
g.set_repair_time(Line(51, 59), 2.47);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 20.8724}, {2, 20.0131}, {3, 24.4164}, {4, 20.2674}, {5, 12.0069}, {6, 24.0301}, {7, 25.6313}, {8, 34.729}, {9, 26.9164}, {10, 25.6664}, {11, 13.087}, {12, 16.8813}, {13, 14.7098}, {14, 22.6067}, {15, 21.6214}, {16, 35.6664}, {17, 21.5174}, {18, 19.8185}, {19, 23.5486}, {20, 25.9814}, {21, 20.8389}, {22, 19.3813}, {23, 25.77}, {24, 23.634}, {25, 21.9364}, {26, 20.7569}, {27, 20.8992}, {28, 28.9731}, {29, 25.3794}, {30, 36.9164}, {31, 26.4486}, {32, 38.1664}, {33, 27.3358}, {34, 11.2384}, {35, 13.3458}, {36, 19.337}, {37, 18.4997}, {38, 23.6535}, {39, 11.8585}, {40, 23.1708}, {41, 21.2631}, {42, 9.01388}, {43, 26.8895}, {44, 11.3192}, {45, 10.7569}, {46, 18.2409}, {47, 17.8527}, {48, 28.1708}, {49, 4.50694}, {50, 23.0309}, {51, 20.0772}, {52, 26.9247}, {53, 23.8439}, {54, 15.8821}, {55, 22.8723}, {56, 31.0647}, {57, 18.2569}, {58, 16.3923}, {59, 23.383}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 20.8724}, {1, 0}, {2, 17.0677}, {3, 16.5582}, {4, 25.6197}, {5, 27.5739}, {6, 26.1012}, {7, 27.8164}, {8, 40.9882}, {9, 19.0582}, {10, 17.8082}, {11, 29.7425}, {12, 19.0664}, {13, 22.371}, {14, 37.1038}, {15, 13.7631}, {16, 27.8082}, {17, 24.3697}, {18, 32.5496}, {19, 31.2099}, {20, 21.767}, {21, 38.8716}, {22, 21.5664}, {23, 20.3247}, {24, 39.6953}, {25, 29.0826}, {26, 31.1622}, {27, 26.3469}, {28, 29.9667}, {29, 4.50694}, {30, 29.0582}, {31, 35.3364}, {32, 30.3082}, {33, 20.4237}, {34, 32.1108}, {35, 22.6019}, {36, 35.9925}, {37, 27.3875}, {38, 32.5413}, {39, 23.5259}, {40, 34.2361}, {41, 15.8177}, {42, 11.8585}, {43, 25.4785}, {44, 31.5102}, {45, 26.3239}, {46, 29.4721}, {47, 20.6974}, {48, 39.2361}, {49, 25.3794}, {50, 14.05}, {51, 22.1483}, {52, 8.45979}, {53, 31.6914}, {54, 26.9474}, {55, 19.3533}, {56, 37.897}, {57, 29.1635}, {58, 30.8538}, {59, 24.3766}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 20.0131}, {1, 17.0677}, {2, 0}, {3, 16.7063}, {4, 25.7678}, {5, 10.5061}, {6, 22.4511}, {7, 24.9511}, {8, 25.3225}, {9, 19.2063}, {10, 17.9563}, {11, 24.7133}, {12, 19.2145}, {13, 5.3033}, {14, 26.8964}, {15, 13.9112}, {16, 27.7734}, {17, 24.5178}, {18, 17.9819}, {19, 14.1421}, {20, 21.9151}, {21, 28.6642}, {22, 21.7145}, {23, 5.75694}, {24, 26.1202}, {25, 33.7519}, {26, 17.0958}, {27, 16.1395}, {28, 18.9346}, {29, 12.5608}, {30, 29.2063}, {31, 35.4846}, {32, 30.2734}, {33, 9.39154}, {34, 22.2376}, {35, 22.7501}, {36, 30.9633}, {37, 27.5356}, {38, 32.6895}, {39, 23.674}, {40, 34.7971}, {41, 1.25}, {42, 28.9263}, {43, 10.9108}, {44, 26.4811}, {45, 9.25615}, {46, 29.6202}, {47, 33.7584}, {48, 39.7971}, {49, 15.5061}, {50, 3.01777}, {51, 18.4983}, {52, 8.60794}, {53, 28.0413}, {54, 27.5084}, {55, 19.5014}, {56, 27.4035}, {57, 14.5958}, {58, 20.6464}, {59, 13.3444}, 