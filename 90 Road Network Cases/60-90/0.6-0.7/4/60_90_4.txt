node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 38, 39, 41, 42, 43, 45, 47, 49, 52, 53, 56, 58, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 8), Line(0, 33), Line(0, 36), Line(0, 40), Line(1, 26), Line(1, 28), Line(2, 16), Line(2, 59), Line(3, 11), Line(3, 18), Line(4, 40), Line(4, 59), Line(5, 41), Line(5, 44), Line(6, 11), Line(6, 12), Line(6, 50), Line(6, 57), Line(7, 10), Line(7, 38), Line(7, 39), Line(8, 51), Line(9, 24), Line(9, 26), Line(9, 48), Line(10, 44), Line(11, 18), Line(11, 26), Line(11, 46), Line(11, 51), Line(12, 28), Line(12, 37), Line(13, 17), Line(13, 20), Line(13, 23), Line(14, 37), Line(14, 57), Line(15, 25), Line(15, 34), Line(16, 23), Line(16, 43), Line(17, 42), Line(18, 25), Line(18, 46), Line(19, 20), Line(19, 29), Line(19, 53), Line(20, 49), Line(21, 31), Line(21, 47), Line(21, 51), Line(21, 56), Line(22, 39), Line(23, 24), Line(23, 32), Line(23, 42), Line(25, 53), Line(27, 33), Line(27, 40), Line(27, 57), Line(28, 31), Line(28, 53), Line(29, 36), Line(29, 55), Line(30, 51), Line(30, 52), Line(31, 40), Line(31, 56), Line(32, 45), Line(33, 56), Line(33, 57), Line(34, 35), Line(34, 42), Line(34, 49), Line(35, 38), Line(37, 39), Line(37, 49), Line(38, 58), Line(41, 48), Line(42, 55), Line(43, 49), Line(43, 50), Line(44, 54), Line(45, 47), Line(46, 53), Line(48, 58), Line(50, 52), Line(53, 54), Line(53, 59), Line(54, 55),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 8), Line(0, 33), Line(0, 40), Line(1, 26), Line(2, 59), Line(3, 18), Line(4, 40), Line(5, 41), Line(5, 44), Line(6, 11), Line(6, 12), Line(6, 50), Line(6, 57), Line(7, 38), Line(9, 48), Line(10, 44), Line(11, 18), Line(11, 26), Line(11, 46), Line(11, 51), Line(13, 17), Line(14, 37), Line(14, 57), Line(15, 25), Line(15, 34), Line(16, 23), Line(16, 43), Line(17, 42), Line(18, 25), Line(18, 46), Line(19, 20), Line(19, 29), Line(19, 53), Line(21, 47), Line(21, 51), Line(21, 56), Line(22, 39), Line(23, 24), Line(23, 32), Line(23, 42), Line(25, 53), Line(28, 53), Line(29, 36), Line(29, 55), Line(30, 51), Line(30, 52), Line(31, 40), Line(32, 45), Line(33, 57), Line(34, 42), Line(34, 49), Line(35, 38), Line(37, 39), Line(37, 49), Line(38, 58), Line(42, 55), Line(43, 49), Line(43, 50), Line(44, 54), Line(48, 58), Line(50, 52), Line(54, 55),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 8, 5.38516);
g.add_edge(0, 33, 3.16228);
g.add_edge(0, 36, 4.47214);
g.add_edge(0, 40, 7.2111);
g.add_edge(1, 26, 3.16228);
g.add_edge(1, 28, 4);
g.add_edge(2, 16, 4.12311);
g.add_edge(2, 59, 4.24264);
g.add_edge(3, 11, 7.28011);
g.add_edge(3, 18, 4.47214);
g.add_edge(4, 40, 6);
g.add_edge(4, 59, 7);
g.add_edge(5, 41, 5.09902);
g.add_edge(5, 44, 2);
g.add_edge(6, 11, 2.23607);
g.add_edge(6, 12, 2.23607);
g.add_edge(6, 50, 3.60555);
g.add_edge(6, 57, 1.41421);
g.add_edge(7, 10, 2.23607);
g.add_edge(7, 38, 5.38516);
g.add_edge(7, 39, 7.28011);
g.add_edge(8, 51, 6);
g.add_edge(9, 24, 8.06226);
g.add_edge(9, 26, 5.09902);
g.add_edge(9, 48, 9.48683);
g.add_edge(10, 44, 2.82843);
g.add_edge(11, 18, 3);
g.add_edge(11, 26, 4);
g.add_edge(11, 46, 4.24264);
g.add_edge(11, 51, 5);
g.add_edge(12, 28, 8.60233);
g.add_edge(12, 37, 8.60233);
g.add_edge(13, 17, 8.48528);
g.add_edge(13, 20, 9.21954);
g.add_edge(13, 23, 8.60233);
g.add_edge(14, 37, 4);
g.add_edge(14, 57, 9.21954);
g.add_edge(15, 25, 2.23607);
g.add_edge(15, 34, 7.28011);
g.add_edge(16, 23, 4.24264);
g.add_edge(16, 43, 4.12311);
g.add_edge(17, 42, 7.81025);
g.add_edge(18, 25, 5.09902);
g.add_edge(18, 46, 3);
g.add_edge(19, 20, 5.83095);
g.add_edge(19, 29, 6.7082);
g.add_edge(19, 53, 4.24264);
g.add_edge(20, 49, 8.06226);
g.add_edge(21, 31, 6.32456);
g.add_edge(21, 47, 7.81025);
g.add_edge(21, 51, 5.38516);
g.add_edge(21, 56, 7.2111);
g.add_edge(22, 39, 7.81025);
g.add_edge(23, 24, 1);
g.add_edge(23, 32, 5.09902);
g.add_edge(23, 42, 7.81025);
g.add_edge(25, 53, 8.60233);
g.add_edge(27, 33, 4.47214);
g.add_edge(27, 40, 1.41421);
g.add_edge(27, 57, 2.23607);
g.add_edge(28, 31, 8);
g.add_edge(28, 53, 2.23607);
g.add_edge(29, 36, 5.09902);
g.add_edge(29, 55, 2.82843);
g.add_edge(30, 51, 3.16228);
g.add_edge(30, 52, 4.24264);
g.add_edge(31, 40, 6.32456);
g.add_edge(31, 56, 6);
g.add_edge(32, 45, 5.38516);
g.add_edge(33, 56, 7.61577);
g.add_edge(33, 57, 5);
g.add_edge(34, 35, 4.12311);
g.add_edge(34, 42, 7.61577);
g.add_edge(34, 49, 6.40312);
g.add_edge(35, 38, 5);
g.add_edge(37, 39, 9);
g.add_edge(37, 49, 3.16228);
g.add_edge(38, 58, 4.12311);
g.add_edge(41, 48, 6.40312);
g.add_edge(42, 55, 5.38516);
g.add_edge(43, 49, 1);
g.add_edge(43, 50, 5);
g.add_edge(44, 54, 9.43398);
g.add_edge(45, 47, 8.24621);
g.add_edge(46, 53, 7.81025);
g.add_edge(48, 58, 11.4018);
g.add_edge(50, 52, 1);
g.add_edge(53, 54, 9.84886);
g.add_edge(53, 59, 10.2956);
g.add_edge(54, 55, 4.47214);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 3.35);
g.set_importance(6, 8.05);
g.set_importance(7, 4.85);
g.set_importance(8, 5.24);
g.set_importance(9, 4.77);
g.set_importance(10, 0);
g.set_importance(11, 8.83);
g.set_importance(12, 0);
g.set_importance(13, 2.7);
g.set_importance(14, 5.13);
g.set_importance(15, 7.16);
g.set_importance(16, 3.39);
g.set_importance(17, 1.32);
g.set_importance(18, 4.34);
g.set_importance(19, 1.62);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 9.8);
g.set_importance(23, 9.17);
g.set_importance(24, 9.62);
g.set_importance(25, 6.13);
g.set_importance(26, 6.91);
g.set_importance(27, 6.42);
g.set_importance(28, 3.62);
g.set_importance(29, 3.86);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 3.53);
g.set_importance(33, 0);
g.set_importance(34, 4.46);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 1.31);
g.set_importance(39, 2.04);
g.set_importance(40, 0);
g.set_importance(41, 3.73);
g.set_importance(42, 7.48);
g.set_importance(43, 6.46);
g.set_importance(44, 0);
g.set_importance(45, 2.11);
g.set_importance(46, 0);
g.set_importance(47, 5.42);
g.set_importance(48, 0);
g.set_importance(49, 1.46);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 6.73);
g.set_importance(53, 6.38);
g.set_importance(54, 0);
g.set_importance(55, 0);
g.set_importance(56, 8.29);
g.set_importance(57, 0);
g.set_importance(58, 5.33);
g.set_importance(59, 9.87);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 8), 1.19);
g.set_repair_time(Line(0, 33), 4.95);
g.set_repair_time(Line(0, 40), 3.91);
g.set_repair_time(Line(1, 26), 1);
g.set_repair_time(Line(2, 59), 3.7);
g.set_repair_time(Line(3, 18), 2.34);
g.set_repair_time(Line(4, 40), 1.56);
g.set_repair_time(Line(5, 41), 2.05);
g.set_repair_time(Line(5, 44), 2.36);
g.set_repair_time(Line(6, 11), 4.68);
g.set_repair_time(Line(6, 12), 4.48);
g.set_repair_time(Line(6, 50), 1.76);
g.set_repair_time(Line(6, 57), 4.87);
g.set_repair_time(Line(7, 38), 1.57);
g.set_repair_time(Line(9, 48), 4.4);
g.set_repair_time(Line(10, 44), 3.13);
g.set_repair_time(Line(11, 18), 4.59);
g.set_repair_time(Line(11, 26), 1.55);
g.set_repair_time(Line(11, 46), 1.42);
g.set_repair_time(Line(11, 51), 4.61);
g.set_repair_time(Line(13, 17), 2.73);
g.set_repair_time(Line(14, 37), 4.68);
g.set_repair_time(Line(14, 57), 1);
g.set_repair_time(Line(15, 25), 4.28);
g.set_repair_time(Line(15, 34), 3.3);
g.set_repair_time(Line(16, 23), 4.71);
g.set_repair_time(Line(16, 43), 3.75);
g.set_repair_time(Line(17, 42), 3.86);
g.set_repair_time(Line(18, 25), 4.55);
g.set_repair_time(Line(18, 46), 3.42);
g.set_repair_time(Line(19, 20), 3.64);
g.set_repair_time(Line(19, 29), 4.76);
g.set_repair_time(Line(19, 53), 1.6);
g.set_repair_time(Line(21, 47), 2.9);
g.set_repair_time(Line(21, 51), 1.3);
g.set_repair_time(Line(21, 56), 4.33);
g.set_repair_time(Line(22, 39), 4.65);
g.set_repair_time(Line(23, 24), 2.34);
g.set_repair_time(Line(23, 32), 1.82);
g.set_repair_time(Line(23, 42), 2.2);
g.set_repair_time(Line(25, 53), 1.4);
g.set_repair_time(Line(28, 53), 4.32);
g.set_repair_time(Line(29, 36), 2.77);
g.set_repair_time(Line(29, 55), 3.2);
g.set_repair_time(Line(30, 51), 1.64);
g.set_repair_time(Line(30, 52), 3.21);
g.set_repair_time(Line(31, 40), 3.87);
g.set_repair_time(Line(32, 45), 2.11);
g.set_repair_time(Line(33, 57), 1.27);
g.set_repair_time(Line(34, 42), 4.57);
g.set_repair_time(Line(34, 49), 2.3);
g.set_repair_time(Line(35, 38), 3.65);
g.set_repair_time(Line(37, 39), 1.09);
g.set_repair_time(Line(37, 49), 1.46);
g.set_repair_time(Line(38, 58), 2.92);
g.set_repair_time(Line(42, 55), 3.37);
g.set_repair_time(Line(43, 49), 2.12);
g.set_repair_time(Line(43, 50), 4.3);
g.set_repair_time(Line(44, 54), 2.63);
g.set_repair_time(Line(48, 58), 4.27);
g.set_repair_time(Line(50, 52), 2.13);
g.set_repair_time(Line(54, 55), 1.55);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 23.7185}, {2, 30.5672}, {3, 23.8658}, {4, 16.5139}, {5, 35.3821}, {6, 11.9706}, {7, 39.2127}, {8, 6.73146}, {9, 26.1395}, {10, 36.4177}, {11, 14.7657}, {12, 14.7657}, {13, 39.1623}, {14, 21.7273}, {15, 27.6846}, {16, 27.8814}, {17, 31.9937}, {18, 18.5157}, {19, 20.3492}, {20, 27.6379}, {21, 20.9629}, {22, 46.5314}, {23, 31.9937}, {24, 33.2437}, {25, 24.8895}, {26, 19.7657}, {27, 9.54302}, {28, 25.5186}, {29, 11.9639}, {30, 18.1843}, {31, 16.9196}, {32, 38.3675}, {33, 3.95285}, {34, 31.7507}, {35, 36.9045}, {36, 5.59017}, {37, 25.5186}, {38, 43.1545}, {39, 36.7686}, {40, 9.01388}, {41, 41.7559}, {42, 22.2309}, {43, 22.7276}, {44, 32.8821}, {45, 41.0335}, {46, 20.069}, {47, 30.7257}, {48, 37.998}, {49, 23.9776}, {50, 16.4776}, {51, 14.2315}, {52, 17.7276}, {53, 25.6525}, {54, 21.0896}, {55, 15.4995}, {56, 13.4726}, {57, 10.2028}, {58, 48.3084}, {59, 25.2639}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 23.7185}, {1, 0}, {2, 25.9679}, {3, 18.053}, {4, 25.5786}, {5, 34.3986}, {6, 11.7479}, {7, 38.2293}, {8, 22.7028}, {9, 10.3266}, {10, 35.4342}, {11, 8.95285}, {12, 14.543}, {13, 31.9115}, {14, 25.0401}, {15, 21.3431}, {16, 26.9577}, {17, 41.1801}, {18, 12.7028}, {19, 13.0984}, {20, 20.3871}, {21, 21.9343}, {22, 46.3087}, {23, 21.6544}, {24, 20.4044}, {25, 18.548}, {26, 3.95285}, {27, 16.3108}, {28, 5}, {29, 21.4836}, {30, 19.1557}, {31, 15}, {32, 28.0282}, {33, 19.7657}, {34, 30.4432}, {35, 35.5971}, {36, 27.8574}, {37, 25.2959}, {38, 41.5912}, {39, 36.5459}, {40, 18.0786}, {41, 30.1891}, {42, 31.4173}, {43, 22.5049}, {44, 31.8986}, {45, 34.7597}, {46, 14.2561}, {47, 31.6971}, {48, 22.1852}, {49, 23.7549}, {50, 16.2549}, {51, 15.2028}, {52, 17.5049}, {53, 7.79508}, {54, 20.1062}, {55, 25.0192}, {56, 22.5}, {57, 13.5157}, {58, 36.4374}, {59, 20.6646}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 30.5672}, {1, 25.9679}, {2, 0}, {3, 32.9599}, {4, 14.0533}, {5, 44.6914}, {6, 21.0647}, {7, 35.8607}, {8, 34.5639}, {9, 21.785}, {10, 38.6558}, {11, 23.8598}, {12, 23.8598}, {13, 21.2101}, {14, 20.5106}, {15, 28.6618}, {16, 5.15388}, {17, 29.9828}, {18, 27.6098}, {19, 23.4761}, {20, 21.6356}, {21, 33.7954}, {22, 36.5234}, {23, 10.4572}, {24, 11.7072}, {25, 28.9257}, {26, 28.1588}, {27, 23.3211}, {28, 20.9679}, {29, 30.487}, {30, 23.1111}, {31, 29.459}, {32, 16.831}, {33, 28.9112}, {34, 19.5617}, {35, 24.7156}, {36, 36.1573}, {37, 15.5106}, {38, 30.9656}, {39, 26.7606}, {40, 21.5533}, {41, 41.6475}, {42, 20.22}, {43, 10.3078}, {44, 42.1914}, {45, 23.5624}, {46, 27.9357}, {47, 33.8702}, {48, 33.6435}, {49, 11.5578}, {50, 16.5578}, {51, 27.0639}, {52, 17.8078}, {53, 18.1728}, {54, 30.4839}, {55, 26.9515}, {56, 36.959}, {57, 22.8325}, {58, 36.1194}, {59, 5.3033}, 