node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 8, 10, 12, 15, 16, 18, 19, 20, 26, 27, 29, 30, 31, 32, 34, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 58, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 10), Line(0, 32), Line(0, 39), Line(1, 22), Line(1, 35), Line(2, 23), Line(2, 31), Line(3, 26), Line(3, 39), Line(3, 51), Line(4, 27), Line(4, 45), Line(4, 54), Line(5, 31), Line(5, 34), Line(5, 41), Line(5, 43), Line(6, 31), Line(6, 33), Line(6, 48), Line(7, 11), Line(7, 36), Line(8, 18), Line(8, 24), Line(8, 39), Line(9, 20), Line(9, 26), Line(9, 49), Line(10, 20), Line(10, 45), Line(11, 13), Line(11, 54), Line(12, 27), Line(12, 47), Line(13, 23), Line(13, 36), Line(13, 50), Line(13, 51), Line(13, 54), Line(14, 18), Line(14, 25), Line(14, 41), Line(15, 25), Line(15, 42), Line(15, 46), Line(16, 33), Line(16, 39), Line(17, 43), Line(17, 56), Line(17, 59), Line(18, 26), Line(19, 37), Line(19, 42), Line(19, 45), Line(20, 43), Line(20, 44), Line(21, 30), Line(21, 40), Line(22, 48), Line(23, 42), Line(24, 28), Line(24, 44), Line(24, 51), Line(25, 43), Line(26, 56), Line(28, 35), Line(28, 46), Line(28, 47), Line(28, 57), Line(29, 36), Line(29, 37), Line(30, 57), Line(31, 49), Line(32, 54), Line(34, 50), Line(35, 36), Line(35, 47), Line(35, 53), Line(37, 53), Line(38, 40), Line(38, 53), Line(41, 53), Line(41, 58), Line(42, 58), Line(46, 55), Line(46, 59), Line(47, 50), Line(48, 58), Line(50, 52), Line(55, 59),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 10), Line(0, 39), Line(1, 35), Line(2, 23), Line(2, 31), Line(3, 26), Line(3, 39), Line(3, 51), Line(4, 27), Line(4, 45), Line(4, 54), Line(5, 31), Line(5, 41), Line(5, 43), Line(6, 31), Line(6, 48), Line(7, 36), Line(8, 18), Line(8, 39), Line(9, 20), Line(9, 26), Line(10, 45), Line(12, 47), Line(13, 36), Line(13, 51), Line(13, 54), Line(14, 18), Line(14, 25), Line(14, 41), Line(15, 25), Line(15, 42), Line(15, 46), Line(16, 33), Line(16, 39), Line(17, 43), Line(17, 56), Line(17, 59), Line(19, 37), Line(19, 42), Line(20, 44), Line(21, 30), Line(22, 48), Line(23, 42), Line(24, 44), Line(24, 51), Line(26, 56), Line(28, 35), Line(28, 47), Line(28, 57), Line(29, 36), Line(30, 57), Line(31, 49), Line(34, 50), Line(35, 36), Line(35, 53), Line(38, 40), Line(38, 53), Line(42, 58), Line(46, 59), Line(47, 50), Line(50, 52), Line(55, 59),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 10, 7.07107);
g.add_edge(0, 32, 6);
g.add_edge(0, 39, 9.05539);
g.add_edge(1, 22, 6.7082);
g.add_edge(1, 35, 3.16228);
g.add_edge(2, 23, 3.16228);
g.add_edge(2, 31, 4.24264);
g.add_edge(3, 26, 1.41421);
g.add_edge(3, 39, 5.09902);
g.add_edge(3, 51, 5.83095);
g.add_edge(4, 27, 6.32456);
g.add_edge(4, 45, 8.24621);
g.add_edge(4, 54, 8.06226);
g.add_edge(5, 31, 5);
g.add_edge(5, 34, 2);
g.add_edge(5, 41, 7.2111);
g.add_edge(5, 43, 8.60233);
g.add_edge(6, 31, 3.16228);
g.add_edge(6, 33, 4.12311);
g.add_edge(6, 48, 4.12311);
g.add_edge(7, 11, 6.08276);
g.add_edge(7, 36, 6.40312);
g.add_edge(8, 18, 2);
g.add_edge(8, 24, 5.38516);
g.add_edge(8, 39, 10);
g.add_edge(9, 20, 6.08276);
g.add_edge(9, 26, 7.07107);
g.add_edge(9, 49, 2.23607);
g.add_edge(10, 20, 9.21954);
g.add_edge(10, 45, 6.32456);
g.add_edge(11, 13, 5.38516);
g.add_edge(11, 54, 1.41421);
g.add_edge(12, 27, 8.94427);
g.add_edge(12, 47, 7.07107);
g.add_edge(13, 23, 7.61577);
g.add_edge(13, 36, 6.7082);
g.add_edge(13, 50, 2.23607);
g.add_edge(13, 51, 5.83095);
g.add_edge(13, 54, 4.12311);
g.add_edge(14, 18, 6.08276);
g.add_edge(14, 25, 7.61577);
g.add_edge(14, 41, 5.83095);
g.add_edge(15, 25, 7.2111);
g.add_edge(15, 42, 6.40312);
g.add_edge(15, 46, 3.16228);
g.add_edge(16, 33, 5.83095);
g.add_edge(16, 39, 10.8167);
g.add_edge(17, 43, 7.2111);
g.add_edge(17, 56, 2.82843);
g.add_edge(17, 59, 6.08276);
g.add_edge(18, 26, 6.32456);
g.add_edge(19, 37, 6.32456);
g.add_edge(19, 42, 3.60555);
g.add_edge(19, 45, 2.23607);
g.add_edge(20, 43, 3.16228);
g.add_edge(20, 44, 8.06226);
g.add_edge(21, 30, 4);
g.add_edge(21, 40, 8.544);
g.add_edge(22, 48, 10.2956);
g.add_edge(23, 42, 7.07107);
g.add_edge(24, 28, 8.60233);
g.add_edge(24, 44, 8.06226);
g.add_edge(24, 51, 6.7082);
g.add_edge(25, 43, 1.41421);
g.add_edge(26, 56, 1);
g.add_edge(28, 35, 4.12311);
g.add_edge(28, 46, 1.41421);
g.add_edge(28, 47, 6.7082);
g.add_edge(28, 57, 8.24621);
g.add_edge(29, 36, 4.12311);
g.add_edge(29, 37, 5.38516);
g.add_edge(30, 57, 9.21954);
g.add_edge(31, 49, 3.60555);
g.add_edge(32, 54, 6.08276);
g.add_edge(34, 50, 8.60233);
g.add_edge(35, 36, 4.12311);
g.add_edge(35, 47, 7.07107);
g.add_edge(35, 53, 2.23607);
g.add_edge(37, 53, 7.2111);
g.add_edge(38, 40, 11.4018);
g.add_edge(38, 53, 3.16228);
g.add_edge(41, 53, 4.47214);
g.add_edge(41, 58, 5);
g.add_edge(42, 58, 5.83095);
g.add_edge(46, 55, 5);
g.add_edge(46, 59, 8.544);
g.add_edge(47, 50, 2.23607);
g.add_edge(48, 58, 5.38516);
g.add_edge(50, 52, 2);
g.add_edge(55, 59, 4.24264);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 1.08);
g.set_importance(6, 1.28);
g.set_importance(7, 7.57);
g.set_importance(8, 9.07);
g.set_importance(9, 0);
g.set_importance(10, 2.49);
g.set_importance(11, 0);
g.set_importance(12, 1.2);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 3.45);
g.set_importance(16, 2.63);
g.set_importance(17, 0);
g.set_importance(18, 5.53);
g.set_importance(19, 9.69);
g.set_importance(20, 3.4);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 1.16);
g.set_importance(27, 1.77);
g.set_importance(28, 0);
g.set_importance(29, 1.48);
g.set_importance(30, 6.18);
g.set_importance(31, 9.58);
g.set_importance(32, 8.24);
g.set_importance(33, 0);
g.set_importance(34, 8.89);
g.set_importance(35, 0);
g.set_importance(36, 9.9);
g.set_importance(37, 4.04);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 8.85);
g.set_importance(41, 0);
g.set_importance(42, 4.4);
g.set_importance(43, 5.78);
g.set_importance(44, 7.96);
g.set_importance(45, 3.71);
g.set_importance(46, 3.3);
g.set_importance(47, 9.83);
g.set_importance(48, 4.15);
g.set_importance(49, 6.46);
g.set_importance(50, 8.11);
g.set_importance(51, 0);
g.set_importance(52, 9.19);
g.set_importance(53, 9.06);
g.set_importance(54, 0);
g.set_importance(55, 8.25);
g.set_importance(56, 0);
g.set_importance(57, 7.25);
g.set_importance(58, 7.57);
g.set_importance(59, 1.07);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 10), 4.55);
g.set_repair_time(Line(0, 39), 4.08);
g.set_repair_time(Line(1, 35), 3.2);
g.set_repair_time(Line(2, 23), 3.9);
g.set_repair_time(Line(2, 31), 2.03);
g.set_repair_time(Line(3, 26), 2.8);
g.set_repair_time(Line(3, 39), 1.05);
g.set_repair_time(Line(3, 51), 4.46);
g.set_repair_time(Line(4, 27), 2.84);
g.set_repair_time(Line(4, 45), 1.75);
g.set_repair_time(Line(4, 54), 4.54);
g.set_repair_time(Line(5, 31), 1.57);
g.set_repair_time(Line(5, 41), 1.33);
g.set_repair_time(Line(5, 43), 1.7);
g.set_repair_time(Line(6, 31), 4.98);
g.set_repair_time(Line(6, 48), 1.94);
g.set_repair_time(Line(7, 36), 2.61);
g.set_repair_time(Line(8, 18), 1.49);
g.set_repair_time(Line(8, 39), 2.27);
g.set_repair_time(Line(9, 20), 1.43);
g.set_repair_time(Line(9, 26), 2.17);
g.set_repair_time(Line(10, 45), 2.65);
g.set_repair_time(Line(12, 47), 1.57);
g.set_repair_time(Line(13, 36), 3.02);
g.set_repair_time(Line(13, 51), 3.66);
g.set_repair_time(Line(13, 54), 3.88);
g.set_repair_time(Line(14, 18), 2.81);
g.set_repair_time(Line(14, 25), 1.09);
g.set_repair_time(Line(14, 41), 1.98);
g.set_repair_time(Line(15, 25), 4.03);
g.set_repair_time(Line(15, 42), 4.73);
g.set_repair_time(Line(15, 46), 2.4);
g.set_repair_time(Line(16, 33), 1.75);
g.set_repair_time(Line(16, 39), 1.73);
g.set_repair_time(Line(17, 43), 3.82);
g.set_repair_time(Line(17, 56), 1.43);
g.set_repair_time(Line(17, 59), 1.09);
g.set_repair_time(Line(19, 37), 4.21);
g.set_repair_time(Line(19, 42), 1.88);
g.set_repair_time(Line(20, 44), 1.04);
g.set_repair_time(Line(21, 30), 4.03);
g.set_repair_time(Line(22, 48), 4.56);
g.set_repair_time(Line(23, 42), 4.62);
g.set_repair_time(Line(24, 44), 3.94);
g.set_repair_time(Line(24, 51), 2.78);
g.set_repair_time(Line(26, 56), 2.27);
g.set_repair_time(Line(28, 35), 2.89);
g.set_repair_time(Line(28, 47), 1.14);
g.set_repair_time(Line(28, 57), 2.67);
g.set_repair_time(Line(29, 36), 2.63);
g.set_repair_time(Line(30, 57), 3.64);
g.set_repair_time(Line(31, 49), 2.73);
g.set_repair_time(Line(34, 50), 3.43);
g.set_repair_time(Line(35, 36), 4.74);
g.set_repair_time(Line(35, 53), 3.62);
g.set_repair_time(Line(38, 40), 1.3);
g.set_repair_time(Line(38, 53), 4.98);
g.set_repair_time(Line(42, 58), 3.37);
g.set_repair_time(Line(46, 59), 2.59);
g.set_repair_time(Line(47, 50), 2.06);
g.set_repair_time(Line(50, 52), 4.13);
g.set_repair_time(Line(55, 59), 2.67);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 37.7493}, {2, 33.7299}, {3, 17.693}, {4, 25.1813}, {5, 35.069}, {6, 37.2826}, {7, 24.4747}, {8, 23.8192}, {9, 27.9667}, {10, 8.83883}, {11, 16.8712}, {12, 34.6863}, {13, 20.2573}, {14, 33.9227}, {15, 32.0505}, {16, 24.84}, {17, 24.2463}, {18, 26.3192}, {19, 19.5396}, {20, 20.3633}, {21, 61.065}, {22, 46.1346}, {23, 29.7771}, {24, 30.5507}, {25, 26.0839}, {26, 19.4608}, {27, 33.087}, {28, 34.2328}, {29, 33.7965}, {30, 56.065}, {31, 35.2687}, {32, 7.5}, {33, 32.1287}, {34, 33.8053}, {35, 33.7965}, {36, 28.6426}, {37, 27.4453}, {38, 40.412}, {39, 11.3192}, {40, 54.6642}, {41, 37.5852}, {42, 24.0466}, {43, 24.3161}, {44, 30.4411}, {45, 16.7445}, {46, 36.0005}, {47, 25.8475}, {48, 38.0667}, {49, 30.7618}, {50, 23.0524}, {51, 24.9817}, {52, 25.5524}, {53, 36.4592}, {54, 15.1035}, {55, 37.1531}, {56, 20.7108}, {57, 44.5405}, {58, 31.3352}, {59, 31.8498}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 37.7493}, {1, 0}, {2, 30.9645}, {3, 32.0694}, {4, 32.7237}, {5, 21.352}, {6, 26.4087}, {7, 17.1106}, {8, 26.5911}, {9, 34.904}, {10, 34.3683}, {11, 24.2234}, {12, 21.6305}, {13, 17.492}, {14, 19.6268}, {15, 14.8273}, {16, 38.8512}, {17, 29.158}, {18, 27.2302}, {19, 23.6675}, {20, 29.5618}, {21, 35.633}, {22, 8.38525}, {23, 27.0117}, {24, 19.8596}, {25, 23.8412}, {26, 33.8371}, {27, 32.8109}, {28, 9.10673}, {29, 14.2606}, {30, 30.9389}, {31, 27.602}, {32, 30.2493}, {33, 31.5626}, {34, 23.852}, {35, 3.95285}, {36, 9.10673}, {37, 15.7618}, {38, 10.7008}, {39, 38.4431}, {40, 24.953}, {41, 12.3381}, {42, 22.8312}, {43, 25.609}, {44, 29.9375}, {45, 26.4626}, {46, 10.8745}, {47, 12.7917}, {48, 21.2548}, {49, 32.1089}, {50, 15.5868}, {51, 24.7807}, {52, 18.0868}, {53, 6.74793}, {54, 22.6459}, {55, 17.1245}, {56, 32.6935}, {57, 19.4145}, {58, 18.5881}, {59, 21.5545}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 33.7299}, {1, 30.9645}, {2, 0}, {3, 23.2119}, {4, 28.7043}, {5, 11.5533}, {6, 9.25615}, {7, 27.8075}, {8, 31.8499}, {9, 12.6053}, {10, 27.9994}, {11, 20.204}, {12, 27.9016}, {13, 13.4726}, {14, 27.8559}, {15, 20.7956}, {16, 21.6987}, {17, 26.2297}, {18, 29.3499}, {19, 17.2986}, {20, 20.2088}, {21, 53.3484}, {22, 27.2796}, {23, 3.95285}, {24, 29.1465}, {25, 24.074}, {26, 21.4442}, {27, 36.61}, {28, 26.5162}, {29, 27.0117}, {30, 48.3484}, {31, 5.3033}, {32, 26.2299}, {33, 14.41}, {34, 14.0533}, {35, 27.0117}, {36, 21.8578}, {37, 25.2043}, {38, 30.1102}, {39, 29.5857}, {40, 44.3624}, {41, 20.5672}, {42, 12.7917}, {43, 22.3062}, {44, 30.2866}, {45, 20.0937}, {46, 24.7484}, {47, 19.0627}, {48, 14.41}, {49, 9.81024}, {50, 16.2676}, {51, 20.7613}, {52, 18.7676}, {53, 26.1573}, {54, 18.6264}, {55, 30.9984}, {56, 22.6942}, {57, 36.824}, {58, 20.0804}, {59, 33.8331}, 