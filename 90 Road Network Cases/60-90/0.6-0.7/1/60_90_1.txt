node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 9, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 2), Line(0, 15), Line(0, 16), Line(0, 21), Line(0, 39), Line(0, 57), Line(1, 9), Line(1, 13), Line(1, 35), Line(1, 47), Line(1, 56), Line(2, 6), Line(2, 8), Line(2, 42), Line(3, 11), Line(3, 50), Line(3, 54), Line(4, 9), Line(4, 47), Line(5, 24), Line(5, 27), Line(5, 29), Line(5, 37), Line(6, 11), Line(6, 26), Line(6, 42), Line(7, 14), Line(7, 17), Line(8, 23), Line(9, 35), Line(9, 56), Line(10, 27), Line(10, 45), Line(10, 47), Line(10, 48), Line(11, 27), Line(11, 46), Line(12, 19), Line(12, 29), Line(12, 50), Line(13, 38), Line(13, 44), Line(13, 57), Line(14, 30), Line(14, 37), Line(15, 20), Line(16, 28), Line(17, 53), Line(18, 33), Line(18, 52), Line(19, 43), Line(19, 55), Line(20, 32), Line(21, 44), Line(21, 53), Line(22, 34), Line(22, 36), Line(23, 44), Line(23, 53), Line(24, 27), Line(25, 34), Line(25, 38), Line(26, 45), Line(28, 49), Line(29, 55), Line(30, 51), Line(31, 34), Line(31, 36), Line(31, 43), Line(31, 59), Line(32, 47), Line(35, 41), Line(35, 43), Line(36, 54), Line(37, 38), Line(37, 39), Line(38, 48), Line(39, 48), Line(40, 46), Line(40, 57), Line(41, 51), Line(42, 50), Line(43, 52), Line(45, 46), Line(46, 58), Line(47, 57), Line(48, 54), Line(49, 54), Line(57, 58), Line(58, 59),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 15), Line(0, 16), Line(0, 39), Line(0, 57), Line(1, 9), Line(1, 13), Line(1, 35), Line(1, 56), Line(2, 6), Line(2, 8), Line(3, 11), Line(3, 50), Line(3, 54), Line(4, 9), Line(5, 27), Line(5, 29), Line(5, 37), Line(6, 26), Line(6, 42), Line(7, 17), Line(8, 23), Line(9, 35), Line(9, 56), Line(10, 27), Line(10, 45), Line(10, 48), Line(11, 27), Line(12, 19), Line(12, 50), Line(13, 38), Line(13, 44), Line(14, 30), Line(14, 37), Line(16, 28), Line(18, 33), Line(18, 52), Line(19, 55), Line(20, 32), Line(21, 44), Line(23, 44), Line(23, 53), Line(25, 34), Line(26, 45), Line(28, 49), Line(29, 55), Line(31, 36), Line(31, 43), Line(31, 59), Line(35, 41), Line(35, 43), Line(36, 54), Line(37, 38), Line(38, 48), Line(39, 48), Line(40, 46), Line(40, 57), Line(41, 51), Line(45, 46), Line(46, 58), Line(48, 54), Line(49, 54), Line(57, 58),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 2, 3);
g.add_edge(0, 15, 8.544);
g.add_edge(0, 16, 9.48683);
g.add_edge(0, 21, 2.23607);
g.add_edge(0, 39, 6.32456);
g.add_edge(0, 57, 3);
g.add_edge(1, 9, 5.83095);
g.add_edge(1, 13, 6.08276);
g.add_edge(1, 35, 1);
g.add_edge(1, 47, 9.48683);
g.add_edge(1, 56, 6.7082);
g.add_edge(2, 6, 9.21954);
g.add_edge(2, 8, 1);
g.add_edge(2, 42, 4.47214);
g.add_edge(3, 11, 3.16228);
g.add_edge(3, 50, 5.38516);
g.add_edge(3, 54, 10.8167);
g.add_edge(4, 9, 5.38516);
g.add_edge(4, 47, 2.23607);
g.add_edge(5, 24, 11.3137);
g.add_edge(5, 27, 4.47214);
g.add_edge(5, 29, 1);
g.add_edge(5, 37, 4.47214);
g.add_edge(6, 11, 7.61577);
g.add_edge(6, 26, 2);
g.add_edge(6, 42, 5);
g.add_edge(7, 14, 1);
g.add_edge(7, 17, 2.23607);
g.add_edge(8, 23, 6);
g.add_edge(9, 35, 5);
g.add_edge(9, 56, 6.08276);
g.add_edge(10, 27, 5.38516);
g.add_edge(10, 45, 3);
g.add_edge(10, 47, 2);
g.add_edge(10, 48, 6.7082);
g.add_edge(11, 27, 5);
g.add_edge(11, 46, 6.7082);
g.add_edge(12, 19, 2.23607);
g.add_edge(12, 29, 7.2111);
g.add_edge(12, 50, 5);
g.add_edge(13, 38, 4.12311);
g.add_edge(13, 44, 2);
g.add_edge(13, 57, 4.24264);
g.add_edge(14, 30, 8.544);
g.add_edge(14, 37, 1.41421);
g.add_edge(15, 20, 3.60555);
g.add_edge(16, 28, 8.94427);
g.add_edge(17, 53, 5.65685);
g.add_edge(18, 33, 8.06226);
g.add_edge(18, 52, 8.24621);
g.add_edge(19, 43, 4.12311);
g.add_edge(19, 55, 5.38516);
g.add_edge(20, 32, 3.60555);
g.add_edge(21, 44, 7.2111);
g.add_edge(21, 53, 6.32456);
g.add_edge(22, 34, 5.65685);
g.add_edge(22, 36, 6);
g.add_edge(23, 44, 2.23607);
g.add_edge(23, 53, 6.08276);
g.add_edge(24, 27, 7.2111);
g.add_edge(25, 34, 5);
g.add_edge(25, 38, 6.32456);
g.add_edge(26, 45, 5);
g.add_edge(28, 49, 2.23607);
g.add_edge(29, 55, 11.4018);
g.add_edge(30, 51, 5.38516);
g.add_edge(31, 34, 3);
g.add_edge(31, 36, 4.12311);
g.add_edge(31, 43, 3.16228);
g.add_edge(31, 59, 8.06226);
g.add_edge(32, 47, 5.38516);
g.add_edge(35, 41, 7.28011);
g.add_edge(35, 43, 5);
g.add_edge(36, 54, 7.2111);
g.add_edge(37, 38, 3);
g.add_edge(37, 39, 3.60555);
g.add_edge(38, 48, 1);
g.add_edge(39, 48, 2.23607);
g.add_edge(40, 46, 1);
g.add_edge(40, 57, 6.40312);
g.add_edge(41, 51, 6.40312);
g.add_edge(42, 50, 7.2111);
g.add_edge(43, 52, 4.47214);
g.add_edge(45, 46, 5.09902);
g.add_edge(46, 58, 8.60233);
g.add_edge(47, 57, 6.08276);
g.add_edge(48, 54, 6.32456);
g.add_edge(49, 54, 7.2111);
g.add_edge(57, 58, 3.16228);
g.add_edge(58, 59, 5.09902);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 6.89);
g.set_importance(8, 0);
g.set_importance(9, 3.01);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 2.46);
g.set_importance(13, 9.96);
g.set_importance(14, 7.15);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 7.18);
g.set_importance(20, 0);
g.set_importance(21, 9);
g.set_importance(22, 3.03);
g.set_importance(23, 7.65);
g.set_importance(24, 6.96);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 9.64);
g.set_importance(28, 8.18);
g.set_importance(29, 2.54);
g.set_importance(30, 1.58);
g.set_importance(31, 7.1);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 9.21);
g.set_importance(35, 6.76);
g.set_importance(36, 7.34);
g.set_importance(37, 4.25);
g.set_importance(38, 8.18);
g.set_importance(39, 6.6);
g.set_importance(40, 1.78);
g.set_importance(41, 5.73);
g.set_importance(42, 4.16);
g.set_importance(43, 8.79);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 5.54);
g.set_importance(47, 7.15);
g.set_importance(48, 9.27);
g.set_importance(49, 4.16);
g.set_importance(50, 0);
g.set_importance(51, 7.91);
g.set_importance(52, 5.11);
g.set_importance(53, 0);
g.set_importance(54, 6.46);
g.set_importance(55, 6.29);
g.set_importance(56, 2.82);
g.set_importance(57, 5.7);
g.set_importance(58, 9.74);
g.set_importance(59, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 15), 3.71);
g.set_repair_time(Line(0, 16), 3.95);
g.set_repair_time(Line(0, 39), 4.32);
g.set_repair_time(Line(0, 57), 3.57);
g.set_repair_time(Line(1, 9), 4.37);
g.set_repair_time(Line(1, 13), 4.57);
g.set_repair_time(Line(1, 35), 2.31);
g.set_repair_time(Line(1, 56), 2.35);
g.set_repair_time(Line(2, 6), 2.8);
g.set_repair_time(Line(2, 8), 4.11);
g.set_repair_time(Line(3, 11), 1.54);
g.set_repair_time(Line(3, 50), 1.64);
g.set_repair_time(Line(3, 54), 2.64);
g.set_repair_time(Line(4, 9), 4.7);
g.set_repair_time(Line(5, 27), 3.24);
g.set_repair_time(Line(5, 29), 4.01);
g.set_repair_time(Line(5, 37), 2.43);
g.set_repair_time(Line(6, 26), 3.72);
g.set_repair_time(Line(6, 42), 1.62);
g.set_repair_time(Line(7, 17), 1.83);
g.set_repair_time(Line(8, 23), 3.92);
g.set_repair_time(Line(9, 35), 2.2);
g.set_repair_time(Line(9, 56), 3.96);
g.set_repair_time(Line(10, 27), 4.18);
g.set_repair_time(Line(10, 45), 3.02);
g.set_repair_time(Line(10, 48), 4.92);
g.set_repair_time(Line(11, 27), 3.74);
g.set_repair_time(Line(12, 19), 1.29);
g.set_repair_time(Line(12, 50), 2.26);
g.set_repair_time(Line(13, 38), 4.2);
g.set_repair_time(Line(13, 44), 1.7);
g.set_repair_time(Line(14, 30), 4.36);
g.set_repair_time(Line(14, 37), 2.17);
g.set_repair_time(Line(16, 28), 4.71);
g.set_repair_time(Line(18, 33), 1.98);
g.set_repair_time(Line(18, 52), 2.99);
g.set_repair_time(Line(19, 55), 4.6);
g.set_repair_time(Line(20, 32), 3.22);
g.set_repair_time(Line(21, 44), 3.33);
g.set_repair_time(Line(23, 44), 1.03);
g.set_repair_time(Line(23, 53), 4.41);
g.set_repair_time(Line(25, 34), 1.47);
g.set_repair_time(Line(26, 45), 2.4);
g.set_repair_time(Line(28, 49), 4.21);
g.set_repair_time(Line(29, 55), 4.6);
g.set_repair_time(Line(31, 36), 3.84);
g.set_repair_time(Line(31, 43), 4.46);
g.set_repair_time(Line(31, 59), 2.62);
g.set_repair_time(Line(35, 41), 2.99);
g.set_repair_time(Line(35, 43), 1.09);
g.set_repair_time(Line(36, 54), 3.57);
g.set_repair_time(Line(37, 38), 4.82);
g.set_repair_time(Line(38, 48), 1.19);
g.set_repair_time(Line(39, 48), 3.16);
g.set_repair_time(Line(40, 46), 3.79);
g.set_repair_time(Line(40, 57), 2.24);
g.set_repair_time(Line(41, 51), 3.21);
g.set_repair_time(Line(45, 46), 4.68);
g.set_repair_time(Line(46, 58), 3.53);
g.set_repair_time(Line(48, 54), 1.26);
g.set_repair_time(Line(49, 54), 4.37);
g.set_repair_time(Line(57, 58), 4.43);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 16.6568}, {2, 3.75}, {3, 25.0855}, {4, 14.1485}, {5, 18.0028}, {6, 15.2744}, {7, 15.4304}, {8, 5}, {9, 20.88}, {10, 13.8535}, {11, 21.3892}, {12, 24.604}, {13, 9.0533}, {14, 14.1804}, {15, 10.68}, {16, 11.8585}, {17, 17.7718}, {18, 40.0547}, {19, 27.3991}, {20, 15.1869}, {21, 2.79508}, {22, 33.1775}, {23, 12.5}, {24, 29.5988}, {25, 19.8565}, {26, 17.7744}, {27, 20.5849}, {28, 23.0389}, {29, 19.2528}, {30, 24.8604}, {31, 24.1544}, {32, 18.0849}, {33, 50.1325}, {34, 26.1065}, {35, 17.9068}, {36, 27.6204}, {37, 12.4126}, {38, 11.9508}, {39, 7.90569}, {40, 11.7539}, {41, 27.0069}, {42, 9.34017}, {43, 24.1568}, {44, 11.5533}, {45, 17.6035}, {46, 13.0039}, {47, 11.3535}, {48, 10.7008}, {49, 25.834}, {50, 18.354}, {51, 31.5919}, {52, 29.7469}, {53, 10.7008}, {54, 18.6065}, {55, 33.505}, {56, 25.042}, {57, 3.75}, {58, 7.70285}, {59, 14.0766}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 16.6568}, {1, 0}, {2, 20.4068}, {3, 28.4304}, {4, 14.0201}, {5, 22.0975}, {6, 26.8585}, {7, 19.5251}, {8, 20.3985}, {9, 7.28869}, {10, 14.3585}, {11, 27.34}, {12, 15.449}, {13, 7.60345}, {14, 18.2751}, {15, 27.3368}, {16, 28.5153}, {17, 22.3202}, {18, 23.3979}, {19, 12.6539}, {20, 23.0969}, {21, 19.1173}, {22, 22.2739}, {23, 12.8985}, {24, 30.1039}, {25, 20.663}, {26, 24.3585}, {27, 21.09}, {28, 33.722}, {29, 23.3475}, {30, 25.0855}, {31, 11.4528}, {32, 18.59}, {33, 33.4758}, {34, 15.2028}, {35, 1.25}, {36, 16.6067}, {37, 16.5073}, {38, 12.7573}, {39, 16.8024}, {40, 20.9107}, {41, 10.3501}, {42, 25.9969}, {43, 7.5}, {44, 10.1035}, {45, 18.1085}, {46, 22.1607}, {47, 11.8585}, {48, 14.0073}, {49, 30.9269}, {50, 21.699}, {51, 18.354}, {52, 13.0902}, {53, 20.502}, {54, 21.913}, {55, 19.3853}, {56, 8.38525}, {57, 12.9068}, {58, 16.8596}, {59, 21.5307}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 3.75}, {1, 20.4068}, {2, 0}, {3, 21.3355}, {4, 17.8985}, {5, 21.7528}, {6, 11.5244}, {7, 19.1804}, {8, 1.25}, {9, 24.63}, {10, 17.6035}, {11, 21.0441}, {12, 20.854}, {13, 12.8033}, {14, 17.9304}, {15, 14.43}, {16, 15.6085}, {17, 21.5218}, {18, 43.8047}, {19, 23.6491}, {20, 18.9369}, {21, 6.54508}, {22, 36.9275}, {23, 8.75}, {24, 33.3488}, {25, 23.6065}, {26, 14.0244}, {27, 24.3349}, {28, 26.7889}, {29, 23.0028}, {30, 28.6104}, {31, 27.9044}, {32, 21.8349}, {33, 53.8825}, {34, 29.8565}, {35, 21.6568}, {36, 31.3704}, {37, 16.1626}, {38, 15.7008}, {39, 11.6557}, {40, 15.5039}, {41, 30.7569}, {42, 5.59017}, {43, 27.9068}, {44, 11.5451}, {45, 20.2744}, {46, 16.7539}, {47, 15.1035}, {48, 14.4508}, {49, 29.584}, {50, 14.604}, {51, 35.3419}, {52, 33.4969}, {53, 14.4508}, {54, 22.3565}, {55, 30.3806}, {56, 28.792}, {57, 7.5}, {58, 11.4528}, {59, 17.8266}, 