node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 7, 8, 9, 10, 13, 14, 18, 19, 20, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 54, 56, 57, 58, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 11), Line(0, 15), Line(0, 25), Line(1, 6), Line(1, 21), Line(1, 32), Line(1, 47), Line(2, 57), Line(2, 58), Line(3, 41), Line(3, 54), Line(4, 7), Line(4, 16), Line(4, 28), Line(4, 30), Line(4, 31), Line(5, 23), Line(5, 48), Line(6, 10), Line(7, 38), Line(7, 59), Line(8, 25), Line(8, 32), Line(9, 42), Line(9, 55), Line(10, 50), Line(11, 19), Line(11, 29), Line(11, 51), Line(12, 14), Line(12, 31), Line(12, 58), Line(13, 47), Line(13, 55), Line(13, 56), Line(13, 59), Line(14, 31), Line(14, 44), Line(14, 59), Line(15, 19), Line(16, 51), Line(17, 19), Line(17, 30), Line(18, 31), Line(18, 48), Line(18, 49), Line(19, 50), Line(20, 34), Line(20, 35), Line(20, 50), Line(20, 53), Line(21, 30), Line(21, 32), Line(22, 38), Line(22, 45), Line(23, 26), Line(23, 47), Line(24, 27), Line(24, 31), Line(24, 32), Line(24, 50), Line(26, 43), Line(27, 34), Line(27, 40), Line(27, 42), Line(28, 46), Line(29, 39), Line(29, 45), Line(29, 48), Line(30, 37), Line(33, 39), Line(33, 42), Line(35, 37), Line(35, 56), Line(36, 43), Line(36, 49), Line(36, 54), Line(37, 52), Line(37, 53), Line(39, 51), Line(40, 52), Line(41, 52), Line(42, 53), Line(44, 46), Line(45, 59), Line(46, 58), Line(47, 48), Line(47, 49), Line(50, 52), Line(54, 58),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 15), Line(0, 25), Line(1, 6), Line(1, 32), Line(1, 47), Line(2, 57), Line(2, 58), Line(3, 41), Line(4, 7), Line(4, 16), Line(4, 28), Line(4, 31), Line(5, 23), Line(5, 48), Line(7, 59), Line(8, 25), Line(9, 42), Line(9, 55), Line(10, 50), Line(11, 29), Line(11, 51), Line(12, 14), Line(13, 56), Line(13, 59), Line(14, 31), Line(14, 44), Line(14, 59), Line(15, 19), Line(16, 51), Line(17, 19), Line(18, 31), Line(18, 49), Line(20, 34), Line(20, 35), Line(20, 50), Line(20, 53), Line(21, 30), Line(21, 32), Line(22, 38), Line(22, 45), Line(24, 27), Line(24, 50), Line(27, 34), Line(27, 40), Line(27, 42), Line(29, 39), Line(29, 45), Line(30, 37), Line(33, 39), Line(33, 42), Line(35, 56), Line(36, 43), Line(36, 49), Line(36, 54), Line(39, 51), Line(40, 52), Line(41, 52), Line(42, 53), Line(45, 59), Line(47, 48), Line(47, 49), Line(50, 52),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 11, 1.41421);
g.add_edge(0, 15, 7.2111);
g.add_edge(0, 25, 1);
g.add_edge(1, 6, 5.65685);
g.add_edge(1, 21, 3.60555);
g.add_edge(1, 32, 4.12311);
g.add_edge(1, 47, 3);
g.add_edge(2, 57, 9);
g.add_edge(2, 58, 1);
g.add_edge(3, 41, 6.08276);
g.add_edge(3, 54, 7);
g.add_edge(4, 7, 7.81025);
g.add_edge(4, 16, 7.61577);
g.add_edge(4, 28, 8.94427);
g.add_edge(4, 30, 8.24621);
g.add_edge(4, 31, 7.07107);
g.add_edge(5, 23, 5.83095);
g.add_edge(5, 48, 7.07107);
g.add_edge(6, 10, 5);
g.add_edge(7, 38, 4.47214);
g.add_edge(7, 59, 1);
g.add_edge(8, 25, 9.84886);
g.add_edge(8, 32, 1);
g.add_edge(9, 42, 8.544);
g.add_edge(9, 55, 11.4018);
g.add_edge(10, 50, 7.28011);
g.add_edge(11, 19, 5.38516);
g.add_edge(11, 29, 8.24621);
g.add_edge(11, 51, 6.40312);
g.add_edge(12, 14, 9.48683);
g.add_edge(12, 31, 7.61577);
g.add_edge(12, 58, 9.84886);
g.add_edge(13, 47, 7.07107);
g.add_edge(13, 55, 6.08276);
g.add_edge(13, 56, 1.41421);
g.add_edge(13, 59, 3.16228);
g.add_edge(14, 31, 6.32456);
g.add_edge(14, 44, 8.544);
g.add_edge(14, 59, 2);
g.add_edge(15, 19, 3);
g.add_edge(16, 51, 5.65685);
g.add_edge(17, 19, 3);
g.add_edge(17, 30, 6.7082);
g.add_edge(18, 31, 5);
g.add_edge(18, 48, 1);
g.add_edge(18, 49, 1.41421);
g.add_edge(19, 50, 3.60555);
g.add_edge(20, 34, 7.2111);
g.add_edge(20, 35, 8.544);
g.add_edge(20, 50, 2.23607);
g.add_edge(20, 53, 10.6301);
g.add_edge(21, 30, 6.32456);
g.add_edge(21, 32, 3.16228);
g.add_edge(22, 38, 2);
g.add_edge(22, 45, 3);
g.add_edge(23, 26, 3);
g.add_edge(23, 47, 4.24264);
g.add_edge(24, 27, 6.40312);
g.add_edge(24, 31, 1);
g.add_edge(24, 32, 7.81025);
g.add_edge(24, 50, 5.09902);
g.add_edge(26, 43, 3.16228);
g.add_edge(27, 34, 2);
g.add_edge(27, 40, 3.16228);
g.add_edge(27, 42, 5.83095);
g.add_edge(28, 46, 3.60555);
g.add_edge(29, 39, 8.06226);
g.add_edge(29, 45, 6.40312);
g.add_edge(29, 48, 9.43398);
g.add_edge(30, 37, 7.28011);
g.add_edge(33, 39, 5.38516);
g.add_edge(33, 42, 2.23607);
g.add_edge(35, 37, 8);
g.add_edge(35, 56, 3.60555);
g.add_edge(36, 43, 9.43398);
g.add_edge(36, 49, 4.12311);
g.add_edge(36, 54, 6);
g.add_edge(37, 52, 2.23607);
g.add_edge(37, 53, 8.60233);
g.add_edge(39, 51, 1.41421);
g.add_edge(40, 52, 4.24264);
g.add_edge(41, 52, 2.82843);
g.add_edge(42, 53, 5);
g.add_edge(44, 46, 4);
g.add_edge(45, 59, 5.83095);
g.add_edge(46, 58, 5.65685);
g.add_edge(47, 48, 5.83095);
g.add_edge(47, 49, 5);
g.add_edge(50, 52, 1);
g.add_edge(54, 58, 3.60555);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 1.21);
g.set_importance(6, 0);
g.set_importance(7, 9.87);
g.set_importance(8, 5.75);
g.set_importance(9, 6.64);
g.set_importance(10, 9.99);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 7.14);
g.set_importance(14, 1.07);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 1.39);
g.set_importance(19, 6.2);
g.set_importance(20, 7.96);
g.set_importance(21, 0);
g.set_importance(22, 5.63);
g.set_importance(23, 7.74);
g.set_importance(24, 1.84);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 5.69);
g.set_importance(28, 9.36);
g.set_importance(29, 0);
g.set_importance(30, 9.17);
g.set_importance(31, 2.15);
g.set_importance(32, 6.11);
g.set_importance(33, 1.97);
g.set_importance(34, 7.85);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 5.22);
g.set_importance(39, 9.46);
g.set_importance(40, 5.58);
g.set_importance(41, 9.85);
g.set_importance(42, 6.26);
g.set_importance(43, 0);
g.set_importance(44, 5.22);
g.set_importance(45, 3.16);
g.set_importance(46, 3.53);
g.set_importance(47, 1.39);
g.set_importance(48, 0);
g.set_importance(49, 8.3);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 3.73);
g.set_importance(53, 0);
g.set_importance(54, 7.5);
g.set_importance(55, 0);
g.set_importance(56, 1.79);
g.set_importance(57, 1.43);
g.set_importance(58, 8.56);
g.set_importance(59, 9.04);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 15), 2.77);
g.set_repair_time(Line(0, 25), 2.12);
g.set_repair_time(Line(1, 6), 4.39);
g.set_repair_time(Line(1, 32), 2.47);
g.set_repair_time(Line(1, 47), 3.43);
g.set_repair_time(Line(2, 57), 4.95);
g.set_repair_time(Line(2, 58), 4.1);
g.set_repair_time(Line(3, 41), 1.51);
g.set_repair_time(Line(4, 7), 4.49);
g.set_repair_time(Line(4, 16), 1.83);
g.set_repair_time(Line(4, 28), 1.02);
g.set_repair_time(Line(4, 31), 1.63);
g.set_repair_time(Line(5, 23), 2.17);
g.set_repair_time(Line(5, 48), 1.51);
g.set_repair_time(Line(7, 59), 4.55);
g.set_repair_time(Line(8, 25), 4.41);
g.set_repair_time(Line(9, 42), 4.97);
g.set_repair_time(Line(9, 55), 2.4);
g.set_repair_time(Line(10, 50), 1.63);
g.set_repair_time(Line(11, 29), 1.62);
g.set_repair_time(Line(11, 51), 4.57);
g.set_repair_time(Line(12, 14), 3.14);
g.set_repair_time(Line(13, 56), 1.92);
g.set_repair_time(Line(13, 59), 5);
g.set_repair_time(Line(14, 31), 1.22);
g.set_repair_time(Line(14, 44), 1.48);
g.set_repair_time(Line(14, 59), 2.34);
g.set_repair_time(Line(15, 19), 3.69);
g.set_repair_time(Line(16, 51), 2.79);
g.set_repair_time(Line(17, 19), 2.28);
g.set_repair_time(Line(18, 31), 2.45);
g.set_repair_time(Line(18, 49), 2.69);
g.set_repair_time(Line(20, 34), 4.53);
g.set_repair_time(Line(20, 35), 2.14);
g.set_repair_time(Line(20, 50), 3.36);
g.set_repair_time(Line(20, 53), 1.32);
g.set_repair_time(Line(21, 30), 4.36);
g.set_repair_time(Line(21, 32), 2.02);
g.set_repair_time(Line(22, 38), 1.47);
g.set_repair_time(Line(22, 45), 1.68);
g.set_repair_time(Line(24, 27), 2.88);
g.set_repair_time(Line(24, 50), 2.46);
g.set_repair_time(Line(27, 34), 2.14);
g.set_repair_time(Line(27, 40), 3.8);
g.set_repair_time(Line(27, 42), 4.58);
g.set_repair_time(Line(29, 39), 3.17);
g.set_repair_time(Line(29, 45), 2.55);
g.set_repair_time(Line(30, 37), 4.11);
g.set_repair_time(Line(33, 39), 1.05);
g.set_repair_time(Line(33, 42), 2.19);
g.set_repair_time(Line(35, 56), 1.1);
g.set_repair_time(Line(36, 43), 2.85);
g.set_repair_time(Line(36, 49), 2.08);
g.set_repair_time(Line(36, 54), 4.94);
g.set_repair_time(Line(39, 51), 3.28);
g.set_repair_time(Line(40, 52), 4.55);
g.set_repair_time(Line(41, 52), 1.88);
g.set_repair_time(Line(42, 53), 3.79);
g.set_repair_time(Line(45, 59), 2.37);
g.set_repair_time(Line(47, 48), 3.57);
g.set_repair_time(Line(47, 49), 2.33);
g.set_repair_time(Line(50, 52), 3.5);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 19.965}, {2, 39.9021}, {3, 25.3951}, {4, 26.3625}, {5, 32.7068}, {6, 27.036}, {7, 28.6181}, {8, 13.5611}, {9, 31.746}, {10, 22.1063}, {11, 1.76777}, {12, 30.1497}, {13, 31.321}, {14, 28.5356}, {15, 9.01388}, {16, 16.8427}, {17, 12.2492}, {18, 25.118}, {19, 8.49922}, {20, 15.8012}, {21, 18.7639}, {22, 23.8294}, {23, 29.0183}, {24, 19.3799}, {25, 1.25}, {26, 32.7683}, {27, 23.5123}, {28, 37.5428}, {29, 12.0755}, {30, 20.6345}, {31, 20.6299}, {32, 14.8111}, {33, 18.2709}, {34, 24.8151}, {35, 26.4813}, {36, 32.0397}, {37, 17.0512}, {38, 26.3294}, {39, 11.5394}, {40, 19.5595}, {41, 17.7917}, {42, 21.066}, {43, 36.7211}, {44, 39.2156}, {45, 20.0794}, {46, 42.0497}, {47, 23.715}, {48, 23.868}, {49, 26.8858}, {50, 13.0062}, {51, 9.77167}, {52, 14.2562}, {53, 27.316}, {54, 34.1451}, {55, 38.9244}, {56, 30.9882}, {57, 51.1521}, {58, 38.6521}, {59, 27.3681}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 19.965}, {1, 0}, {2, 28.4108}, {3, 31.4039}, {4, 22.7204}, {5, 16.342}, {6, 7.07107}, {7, 17.7917}, {8, 6.40388}, {9, 34.4445}, {10, 13.3211}, {11, 21.7327}, {12, 25.6864}, {13, 12.5888}, {14, 19.0417}, {15, 28.2979}, {16, 32.2401}, {17, 20.7979}, {18, 11.7678}, {19, 24.5479}, {20, 24.0856}, {21, 4.50694}, {22, 25.8819}, {23, 9.0533}, {24, 14.9167}, {25, 18.715}, {26, 12.8033}, {27, 22.9206}, {28, 33.9007}, {29, 22.8312}, {30, 12.4126}, {31, 16.1667}, {32, 5.15388}, {33, 33.0044}, {34, 25.4206}, {35, 18.8635}, {36, 15.1539}, {37, 21.5128}, {38, 23.3819}, {39, 31.5044}, {40, 26.8734}, {41, 26.076}, {42, 30.2093}, {43, 16.7561}, {44, 29.7217}, {45, 23.8304}, {46, 34.2319}, {47, 3.75}, {48, 11.0387}, {49, 10}, {50, 21.2905}, {51, 29.7366}, {52, 22.5405}, {53, 32.2657}, {54, 22.6539}, {55, 20.1923}, {56, 14.3566}, {57, 39.6608}, {58, 27.1608}, {59, 16.5417}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 39.9021}, {1, 28.4108}, {2, 0}, {3, 14.5069}, {4, 24.0083}, {5, 30.2674}, {6, 35.4819}, {7, 27.7511}, {8, 34.8147}, {9, 50.3034}, {10, 35.9961}, {11, 38.1343}, {12, 13.5611}, {13, 30.4539}, {14, 24.0011}, {15, 35.1529}, {16, 33.5281}, {17, 35.1529}, {18, 20.1786}, {19, 31.4029}, {20, 29.691}, {21, 32.9178}, {22, 35.8412}, {23, 29.9641}, {24, 24.3308}, {25, 41.1521}, {26, 29.0023}, {27, 32.3347}, {28, 12.828}, {29, 33.2211}, {30, 34.3161}, {31, 23.0808}, {32, 33.5647}, {33, 42.4185}, {34, 34.8347}, {35, 36.7286}, {36, 13.2569}, {37, 28.441}, {38, 33.3412}, {39, 42.3669}, {40, 30.9492}, {41, 22.1104}, {42, 39.6234}, {43, 25.0494}, {44, 13.3211}, {45, 33.7898}, {46, 8.32107}, {47, 24.6608}, {48, 21.4286}, {49, 18.4108}, {50, 26.8959}, {51, 40.5991}, {52, 25.6459}, {53, 39.1939}, {54, 5.75694}, {55, 38.0574}, {56, 32.2217}, {57, 11.25}, {58, 1.25}, {59, 26.5011}, 