node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 29, 30, 32, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 51, 52, 57, 58, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 22), Line(0, 23), Line(0, 42), Line(0, 51), Line(1, 7), Line(1, 14), Line(1, 20), Line(1, 36), Line(2, 6), Line(2, 22), Line(2, 34), Line(3, 27), Line(3, 57), Line(3, 58), Line(4, 8), Line(4, 44), Line(5, 17), Line(5, 20), Line(5, 22), Line(5, 37), Line(6, 19), Line(6, 32), Line(7, 11), Line(7, 13), Line(7, 16), Line(7, 32), Line(8, 11), Line(8, 15), Line(8, 39), Line(9, 20), Line(9, 36), Line(9, 43), Line(10, 45), Line(11, 17), Line(11, 52), Line(12, 38), Line(12, 56), Line(13, 35), Line(14, 40), Line(14, 57), Line(15, 26), Line(16, 59), Line(17, 31), Line(18, 29), Line(18, 44), Line(18, 47), Line(19, 51), Line(19, 58), Line(20, 33), Line(20, 39), Line(21, 26), Line(21, 54), Line(21, 57), Line(22, 23), Line(22, 35), Line(23, 41), Line(24, 44), Line(24, 53), Line(24, 54), Line(25, 30), Line(25, 43), Line(27, 31), Line(28, 41), Line(28, 51), Line(29, 38), Line(29, 39), Line(30, 54), Line(32, 48), Line(33, 52), Line(33, 53), Line(33, 55), Line(34, 39), Line(35, 44), Line(35, 58), Line(36, 49), Line(37, 55), Line(38, 54), Line(39, 57), Line(40, 46), Line(40, 56), Line(41, 44), Line(42, 45), Line(46, 59), Line(47, 48), Line(49, 50), Line(49, 56), Line(49, 57), Line(50, 52), Line(52, 57), Line(55, 56),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 42), Line(0, 51), Line(1, 7), Line(1, 14), Line(1, 20), Line(2, 6), Line(2, 22), Line(2, 34), Line(3, 27), Line(3, 57), Line(4, 44), Line(5, 17), Line(5, 22), Line(5, 37), Line(6, 19), Line(6, 32), Line(7, 13), Line(7, 16), Line(7, 32), Line(8, 11), Line(8, 15), Line(8, 39), Line(9, 20), Line(10, 45), Line(11, 17), Line(12, 56), Line(13, 35), Line(14, 40), Line(14, 57), Line(15, 26), Line(18, 29), Line(18, 44), Line(19, 58), Line(20, 33), Line(22, 23), Line(22, 35), Line(23, 41), Line(24, 44), Line(24, 53), Line(25, 30), Line(27, 31), Line(28, 41), Line(28, 51), Line(29, 38), Line(29, 39), Line(30, 54), Line(32, 48), Line(33, 53), Line(33, 55), Line(35, 44), Line(35, 58), Line(36, 49), Line(39, 57), Line(40, 46), Line(40, 56), Line(41, 44), Line(42, 45), Line(46, 59), Line(47, 48), Line(49, 56), Line(49, 57), Line(52, 57),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 22, 4.12311);
g.add_edge(0, 23, 8.60233);
g.add_edge(0, 42, 8.24621);
g.add_edge(0, 51, 3.16228);
g.add_edge(1, 7, 1.41421);
g.add_edge(1, 14, 5.38516);
g.add_edge(1, 20, 12.0416);
g.add_edge(1, 36, 8.48528);
g.add_edge(2, 6, 2.23607);
g.add_edge(2, 22, 4.47214);
g.add_edge(2, 34, 8.60233);
g.add_edge(3, 27, 5.38516);
g.add_edge(3, 57, 6.08276);
g.add_edge(3, 58, 5.83095);
g.add_edge(4, 8, 7.61577);
g.add_edge(4, 44, 3.16228);
g.add_edge(5, 17, 8.60233);
g.add_edge(5, 20, 12.7279);
g.add_edge(5, 22, 7.2111);
g.add_edge(5, 37, 11.4018);
g.add_edge(6, 19, 6.32456);
g.add_edge(6, 32, 4.12311);
g.add_edge(7, 11, 7);
g.add_edge(7, 13, 6.40312);
g.add_edge(7, 16, 7.81025);
g.add_edge(7, 32, 3.60555);
g.add_edge(8, 11, 4.12311);
g.add_edge(8, 15, 5);
g.add_edge(8, 39, 1);
g.add_edge(9, 20, 5.38516);
g.add_edge(9, 36, 2);
g.add_edge(9, 43, 7.28011);
g.add_edge(10, 45, 5.83095);
g.add_edge(11, 17, 4.47214);
g.add_edge(11, 52, 7.07107);
g.add_edge(12, 38, 7);
g.add_edge(12, 56, 9.21954);
g.add_edge(13, 35, 5.83095);
g.add_edge(14, 40, 7.07107);
g.add_edge(14, 57, 1);
g.add_edge(15, 26, 6.40312);
g.add_edge(16, 59, 2.82843);
g.add_edge(17, 31, 3.16228);
g.add_edge(18, 29, 3.16228);
g.add_edge(18, 44, 1);
g.add_edge(18, 47, 2.23607);
g.add_edge(19, 51, 2.82843);
g.add_edge(19, 58, 2.23607);
g.add_edge(20, 33, 2.23607);
g.add_edge(20, 39, 8.94427);
g.add_edge(21, 26, 1);
g.add_edge(21, 54, 8.544);
g.add_edge(21, 57, 2.23607);
g.add_edge(22, 23, 6.08276);
g.add_edge(22, 35, 4.24264);
g.add_edge(23, 41, 7.07107);
g.add_edge(24, 44, 1.41421);
g.add_edge(24, 53, 4.47214);
g.add_edge(24, 54, 2.82843);
g.add_edge(25, 30, 8.24621);
g.add_edge(25, 43, 9.05539);
g.add_edge(27, 31, 3.60555);
g.add_edge(28, 41, 2.23607);
g.add_edge(28, 51, 3.60555);
g.add_edge(29, 38, 6.7082);
g.add_edge(29, 39, 5.83095);
g.add_edge(30, 54, 5);
g.add_edge(32, 48, 2.82843);
g.add_edge(33, 52, 1);
g.add_edge(33, 53, 5.09902);
g.add_edge(33, 55, 7.07107);
g.add_edge(34, 39, 8.94427);
g.add_edge(35, 44, 6.40312);
g.add_edge(35, 58, 4.47214);
g.add_edge(36, 49, 6.32456);
g.add_edge(37, 55, 7.28011);
g.add_edge(38, 54, 6.32456);
g.add_edge(39, 57, 2.23607);
g.add_edge(40, 46, 8.06226);
g.add_edge(40, 56, 9.43398);
g.add_edge(41, 44, 4.24264);
g.add_edge(42, 45, 3.60555);
g.add_edge(46, 59, 6.40312);
g.add_edge(47, 48, 5);
g.add_edge(49, 50, 3.60555);
g.add_edge(49, 56, 5.09902);
g.add_edge(49, 57, 3.16228);
g.add_edge(50, 52, 8.48528);
g.add_edge(52, 57, 5.38516);
g.add_edge(55, 56, 6);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 6.53);
g.set_importance(8, 7.77);
g.set_importance(9, 2.95);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 7.64);
g.set_importance(13, 7.7);
g.set_importance(14, 8.07);
g.set_importance(15, 0);
g.set_importance(16, 9.03);
g.set_importance(17, 5.4);
g.set_importance(18, 5.5);
g.set_importance(19, 8.97);
g.set_importance(20, 9.76);
g.set_importance(21, 0);
g.set_importance(22, 9.92);
g.set_importance(23, 2.43);
g.set_importance(24, 0);
g.set_importance(25, 2.62);
g.set_importance(26, 5.29);
g.set_importance(27, 8.47);
g.set_importance(28, 0);
g.set_importance(29, 4.14);
g.set_importance(30, 7.14);
g.set_importance(31, 0);
g.set_importance(32, 8.06);
g.set_importance(33, 0);
g.set_importance(34, 8.93);
g.set_importance(35, 5.93);
g.set_importance(36, 0);
g.set_importance(37, 3.93);
g.set_importance(38, 9.11);
g.set_importance(39, 8.16);
g.set_importance(40, 1.11);
g.set_importance(41, 0);
g.set_importance(42, 6.65);
g.set_importance(43, 7.58);
g.set_importance(44, 0);
g.set_importance(45, 5.35);
g.set_importance(46, 2.78);
g.set_importance(47, 2.77);
g.set_importance(48, 0);
g.set_importance(49, 7.63);
g.set_importance(50, 0);
g.set_importance(51, 3.64);
g.set_importance(52, 2.1);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 8.18);
g.set_importance(58, 3.81);
g.set_importance(59, 4.47);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 42), 3.7);
g.set_repair_time(Line(0, 51), 4.7);
g.set_repair_time(Line(1, 7), 4.39);
g.set_repair_time(Line(1, 14), 1.86);
g.set_repair_time(Line(1, 20), 2.12);
g.set_repair_time(Line(2, 6), 2.57);
g.set_repair_time(Line(2, 22), 2.19);
g.set_repair_time(Line(2, 34), 2.89);
g.set_repair_time(Line(3, 27), 3.6);
g.set_repair_time(Line(3, 57), 4.95);
g.set_repair_time(Line(4, 44), 4.46);
g.set_repair_time(Line(5, 17), 4.22);
g.set_repair_time(Line(5, 22), 3.5);
g.set_repair_time(Line(5, 37), 4.76);
g.set_repair_time(Line(6, 19), 1.88);
g.set_repair_time(Line(6, 32), 2.73);
g.set_repair_time(Line(7, 13), 2.92);
g.set_repair_time(Line(7, 16), 2.96);
g.set_repair_time(Line(7, 32), 1.32);
g.set_repair_time(Line(8, 11), 1.92);
g.set_repair_time(Line(8, 15), 4.04);
g.set_repair_time(Line(8, 39), 3.53);
g.set_repair_time(Line(9, 20), 4.25);
g.set_repair_time(Line(10, 45), 2.33);
g.set_repair_time(Line(11, 17), 2.92);
g.set_repair_time(Line(12, 56), 3.71);
g.set_repair_time(Line(13, 35), 3.52);
g.set_repair_time(Line(14, 40), 4.85);
g.set_repair_time(Line(14, 57), 3.35);
g.set_repair_time(Line(15, 26), 4.32);
g.set_repair_time(Line(18, 29), 1.07);
g.set_repair_time(Line(18, 44), 3.53);
g.set_repair_time(Line(19, 58), 2.44);
g.set_repair_time(Line(20, 33), 4.88);
g.set_repair_time(Line(22, 23), 3.85);
g.set_repair_time(Line(22, 35), 2.55);
g.set_repair_time(Line(23, 41), 4.89);
g.set_repair_time(Line(24, 44), 4.04);
g.set_repair_time(Line(24, 53), 2.75);
g.set_repair_time(Line(25, 30), 2.22);
g.set_repair_time(Line(27, 31), 2.01);
g.set_repair_time(Line(28, 41), 2.37);
g.set_repair_time(Line(28, 51), 3.89);
g.set_repair_time(Line(29, 38), 3.62);
g.set_repair_time(Line(29, 39), 2.09);
g.set_repair_time(Line(30, 54), 1.37);
g.set_repair_time(Line(32, 48), 1.52);
g.set_repair_time(Line(33, 53), 1.97);
g.set_repair_time(Line(33, 55), 4.51);
g.set_repair_time(Line(35, 44), 3.3);
g.set_repair_time(Line(35, 58), 1.14);
g.set_repair_time(Line(36, 49), 4.92);
g.set_repair_time(Line(39, 57), 2.05);
g.set_repair_time(Line(40, 46), 3.57);
g.set_repair_time(Line(40, 56), 2.61);
g.set_repair_time(Line(41, 44), 3.7);
g.set_repair_time(Line(42, 45), 1.01);
g.set_repair_time(Line(46, 59), 3.26);
g.set_repair_time(Line(47, 48), 2.83);
g.set_repair_time(Line(49, 56), 2.68);
g.set_repair_time(Line(49, 57), 1.21);
g.set_repair_time(Line(52, 57), 4);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 24.9677}, {2, 10.7441}, {3, 17.5722}, {4, 20.511}, {5, 14.1678}, {6, 13.5391}, {7, 23.2}, {8, 29.2207}, {9, 36.8091}, {10, 22.1034}, {11, 30.5108}, {12, 38.5172}, {13, 17.7459}, {14, 26.4256}, {15, 35.4707}, {16, 32.9628}, {17, 24.9207}, {18, 17.8082}, {19, 7.48838}, {20, 30.0777}, {21, 27.9707}, {22, 5.15388}, {23, 10.7529}, {24, 18.3259}, {25, 38.4192}, {26, 29.2207}, {27, 24.3036}, {28, 8.45979}, {29, 21.761}, {30, 28.1115}, {31, 28.8106}, {32, 18.693}, {33, 30.2899}, {34, 21.497}, {35, 10.4572}, {36, 35.5743}, {37, 28.42}, {38, 29.7672}, {39, 27.9707}, {40, 35.2644}, {41, 11.2549}, {42, 10.3078}, {43, 45.9093}, {44, 16.5582}, {45, 14.8147}, {46, 44.5022}, {47, 20.6033}, {48, 22.2286}, {49, 29.1285}, {50, 33.6354}, {51, 3.95285}, {52, 31.5399}, {53, 23.9161}, {54, 21.8615}, {55, 37.5201}, {56, 35.5022}, {57, 25.1756}, {58, 10.2835}, {59, 36.4983}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 24.9677}, {1, 0}, {2, 14.2237}, {3, 15.5849}, {4, 21.5463}, {5, 26.8608}, {6, 11.4286}, {7, 1.76777}, {8, 12.0265}, {9, 13.1066}, {10, 47.0711}, {11, 10.5178}, {12, 29.8325}, {13, 9.77167}, {14, 6.73146}, {15, 18.2765}, {16, 11.5306}, {17, 16.1079}, {18, 18.8553}, {19, 19.3343}, {20, 15.052}, {21, 10.7765}, {22, 19.8138}, {23, 27.4173}, {24, 21.8731}, {25, 33.526}, {26, 12.0265}, {27, 22.3164}, {28, 27.3768}, {29, 18.0652}, {30, 27.7065}, {31, 20.0608}, {32, 6.27471}, {33, 15.9629}, {34, 21.9569}, {35, 17.0604}, {36, 10.6066}, {37, 33.9019}, {38, 26.4505}, {39, 10.7765}, {40, 15.5703}, {41, 25.4086}, {42, 35.2755}, {43, 22.2067}, {44, 20.1053}, {45, 39.7824}, {46, 23.07}, {47, 16.0602}, {48, 9.81024}, {49, 11.9343}, {50, 16.4412}, {51, 22.8698}, {52, 14.7129}, {53, 22.3367}, {54, 21.4565}, {55, 24.8017}, {56, 18.3081}, {57, 7.98146}, {58, 22.1294}, {59, 15.0661}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 10.7441}, {1, 14.2237}, {2, 0}, {3, 20.7846}, {4, 22.8502}, {5, 14.604}, {6, 2.79508}, {7, 12.4559}, {8, 23.1832}, {9, 27.3303}, {10, 32.8474}, {11, 21.2059}, {12, 40.8564}, {13, 18.1822}, {14, 20.9551}, {15, 29.4332}, {16, 22.2187}, {17, 25.357}, {18, 20.1474}, {19, 10.7008}, {20, 29.2757}, {21, 25.0002}, {22, 5.59017}, {23, 13.1936}, {24, 20.6651}, {25, 40.7584}, {26, 26.2502}, {27, 27.516}, {28, 18.7433}, {29, 24.1002}, {30, 30.4507}, {31, 29.3098}, {32, 7.94897}, {33, 30.1866}, {34, 10.7529}, {35, 10.8935}, {36, 24.8303}, {37, 28.8562}, {38, 32.1064}, {39, 21.9332}, {40, 29.794}, {41, 21.5383}, {42, 21.0518}, {43, 36.4304}, {44, 18.8974}, {45, 25.5588}, {46, 33.7582}, {47, 17.7345}, {48, 11.4845}, {49, 26.158}, {50, 30.6649}, {51, 14.2363}, {52, 28.9366}, {53, 26.2553}, {54, 24.2007}, {55, 37.9564}, {56, 32.5318}, {57, 22.2051}, {58, 13.4959}, {59, 25.7543}, 