node_num : 60
demand_node_num : 36
edge_num : 90
damaged_edge_num : 62
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 32, 33, 36, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 12), Line(0, 32), Line(0, 47), Line(0, 55), Line(1, 41), Line(1, 48), Line(2, 4), Line(2, 51), Line(2, 57), Line(3, 25), Line(3, 51), Line(4, 5), Line(5, 15), Line(5, 52), Line(6, 19), Line(6, 22), Line(6, 27), Line(6, 57), Line(7, 16), Line(7, 21), Line(7, 37), Line(7, 44), Line(8, 14), Line(8, 15), Line(8, 25), Line(8, 34), Line(9, 17), Line(9, 31), Line(10, 12), Line(10, 59), Line(11, 23), Line(11, 27), Line(11, 46), Line(12, 24), Line(13, 15), Line(13, 31), Line(13, 40), Line(13, 50), Line(14, 28), Line(14, 37), Line(15, 33), Line(15, 42), Line(15, 54), Line(16, 49), Line(16, 58), Line(17, 31), Line(17, 58), Line(18, 22), Line(18, 29), Line(19, 29), Line(19, 44), Line(19, 45), Line(19, 59), Line(20, 26), Line(20, 29), Line(20, 47), Line(20, 50), Line(21, 37), Line(23, 25), Line(23, 30), Line(24, 35), Line(24, 56), Line(25, 27), Line(26, 54), Line(27, 28), Line(27, 38), Line(28, 51), Line(30, 53), Line(31, 39), Line(32, 34), Line(33, 39), Line(34, 37), Line(34, 59), Line(35, 43), Line(35, 49), Line(36, 52), Line(36, 59), Line(38, 40), Line(38, 42), Line(39, 44), Line(39, 48), Line(40, 49), Line(41, 53), Line(42, 45), Line(43, 46), Line(44, 56), Line(45, 50), Line(46, 56), Line(47, 48), Line(55, 57),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 12), Line(0, 32), Line(0, 47), Line(1, 41), Line(1, 48), Line(2, 4), Line(2, 51), Line(2, 57), Line(3, 25), Line(3, 51), Line(4, 5), Line(5, 15), Line(5, 52), Line(6, 19), Line(6, 27), Line(6, 57), Line(7, 16), Line(7, 44), Line(8, 15), Line(8, 34), Line(9, 17), Line(9, 31), Line(10, 12), Line(10, 59), Line(13, 15), Line(13, 31), Line(13, 40), Line(14, 28), Line(15, 42), Line(15, 54), Line(16, 58), Line(17, 58), Line(19, 29), Line(19, 44), Line(19, 45), Line(19, 59), Line(20, 26), Line(20, 29), Line(20, 47), Line(20, 50), Line(21, 37), Line(23, 30), Line(27, 28), Line(27, 38), Line(28, 51), Line(30, 53), Line(31, 39), Line(33, 39), Line(34, 59), Line(35, 43), Line(35, 49), Line(36, 52), Line(36, 59), Line(38, 40), Line(38, 42), Line(39, 44), Line(39, 48), Line(40, 49), Line(41, 53), Line(42, 45), Line(44, 56), Line(45, 50),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 12, 4.24264);
g.add_edge(0, 32, 4.24264);
g.add_edge(0, 47, 5);
g.add_edge(0, 55, 2);
g.add_edge(1, 41, 9.43398);
g.add_edge(1, 48, 7.07107);
g.add_edge(2, 4, 6.32456);
g.add_edge(2, 51, 5);
g.add_edge(2, 57, 2.82843);
g.add_edge(3, 25, 11.4018);
g.add_edge(3, 51, 5.83095);
g.add_edge(4, 5, 1);
g.add_edge(5, 15, 2.23607);
g.add_edge(5, 52, 2.23607);
g.add_edge(6, 19, 3.16228);
g.add_edge(6, 22, 5);
g.add_edge(6, 27, 1.41421);
g.add_edge(6, 57, 6.7082);
g.add_edge(7, 16, 2);
g.add_edge(7, 21, 4.12311);
g.add_edge(7, 37, 1.41421);
g.add_edge(7, 44, 8.06226);
g.add_edge(8, 14, 2.23607);
g.add_edge(8, 15, 4.12311);
g.add_edge(8, 25, 8);
g.add_edge(8, 34, 4.47214);
g.add_edge(9, 17, 3.16228);
g.add_edge(9, 31, 7.61577);
g.add_edge(10, 12, 7.61577);
g.add_edge(10, 59, 3.60555);
g.add_edge(11, 23, 6.08276);
g.add_edge(11, 27, 10.6301);
g.add_edge(11, 46, 7.2111);
g.add_edge(12, 24, 3.16228);
g.add_edge(13, 15, 7.07107);
g.add_edge(13, 31, 6);
g.add_edge(13, 40, 2.23607);
g.add_edge(13, 50, 2.23607);
g.add_edge(14, 28, 2.23607);
g.add_edge(14, 37, 8.60233);
g.add_edge(15, 33, 3.60555);
g.add_edge(15, 42, 4);
g.add_edge(15, 54, 7);
g.add_edge(16, 49, 1.41421);
g.add_edge(16, 58, 1.41421);
g.add_edge(17, 31, 5.65685);
g.add_edge(17, 58, 1.41421);
g.add_edge(18, 22, 9.43398);
g.add_edge(18, 29, 4.12311);
g.add_edge(19, 29, 9.84886);
g.add_edge(19, 44, 9.48683);
g.add_edge(19, 45, 3.16228);
g.add_edge(19, 59, 7.28011);
g.add_edge(20, 26, 8.94427);
g.add_edge(20, 29, 2.23607);
g.add_edge(20, 47, 2.23607);
g.add_edge(20, 50, 5.09902);
g.add_edge(21, 37, 5.38516);
g.add_edge(23, 25, 10);
g.add_edge(23, 30, 6.32456);
g.add_edge(24, 35, 6.40312);
g.add_edge(24, 56, 7.2111);
g.add_edge(25, 27, 7.07107);
g.add_edge(26, 54, 1.41421);
g.add_edge(27, 28, 9.89949);
g.add_edge(27, 38, 5.38516);
g.add_edge(28, 51, 4.47214);
g.add_edge(30, 53, 4.12311);
g.add_edge(31, 39, 2.82843);
g.add_edge(32, 34, 2);
g.add_edge(33, 39, 4.12311);
g.add_edge(34, 37, 7.28011);
g.add_edge(34, 59, 3);
g.add_edge(35, 43, 7.2111);
g.add_edge(35, 49, 7.61577);
g.add_edge(36, 52, 5);
g.add_edge(36, 59, 6.08276);
g.add_edge(38, 40, 3.60555);
g.add_edge(38, 42, 5.65685);
g.add_edge(39, 44, 3);
g.add_edge(39, 48, 9.05539);
g.add_edge(40, 49, 1);
g.add_edge(41, 53, 5.38516);
g.add_edge(42, 45, 7.28011);
g.add_edge(43, 46, 6.32456);
g.add_edge(44, 56, 4.24264);
g.add_edge(45, 50, 2);
g.add_edge(46, 56, 5);
g.add_edge(47, 48, 9.89949);
g.add_edge(55, 57, 5);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 8.62);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 4.17);
g.set_importance(9, 2.36);
g.set_importance(10, 5.99);
g.set_importance(11, 7.29);
g.set_importance(12, 6.69);
g.set_importance(13, 1.05);
g.set_importance(14, 8.59);
g.set_importance(15, 0);
g.set_importance(16, 5.3);
g.set_importance(17, 0);
g.set_importance(18, 6.27);
g.set_importance(19, 9.54);
g.set_importance(20, 1.52);
g.set_importance(21, 1.23);
g.set_importance(22, 4.31);
g.set_importance(23, 0);
g.set_importance(24, 5.82);
g.set_importance(25, 2.18);
g.set_importance(26, 3.47);
g.set_importance(27, 2.14);
g.set_importance(28, 8.28);
g.set_importance(29, 0);
g.set_importance(30, 4.76);
g.set_importance(31, 0);
g.set_importance(32, 9.79);
g.set_importance(33, 2.43);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 6.14);
g.set_importance(37, 4.46);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 0);
g.set_importance(41, 5.22);
g.set_importance(42, 0);
g.set_importance(43, 2.18);
g.set_importance(44, 2.23);
g.set_importance(45, 0);
g.set_importance(46, 9.57);
g.set_importance(47, 9.58);
g.set_importance(48, 5.29);
g.set_importance(49, 0);
g.set_importance(50, 5.77);
g.set_importance(51, 8.11);
g.set_importance(52, 2.99);
g.set_importance(53, 3.63);
g.set_importance(54, 0);
g.set_importance(55, 1.2);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 3.27);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 12), 3.46);
g.set_repair_time(Line(0, 32), 1.46);
g.set_repair_time(Line(0, 47), 3.11);
g.set_repair_time(Line(1, 41), 1.84);
g.set_repair_time(Line(1, 48), 3.61);
g.set_repair_time(Line(2, 4), 4.57);
g.set_repair_time(Line(2, 51), 2.82);
g.set_repair_time(Line(2, 57), 1.27);
g.set_repair_time(Line(3, 25), 4.04);
g.set_repair_time(Line(3, 51), 2.94);
g.set_repair_time(Line(4, 5), 4.2);
g.set_repair_time(Line(5, 15), 3.92);
g.set_repair_time(Line(5, 52), 2.97);
g.set_repair_time(Line(6, 19), 4);
g.set_repair_time(Line(6, 27), 2.56);
g.set_repair_time(Line(6, 57), 1.18);
g.set_repair_time(Line(7, 16), 3.75);
g.set_repair_time(Line(7, 44), 2.95);
g.set_repair_time(Line(8, 15), 2.06);
g.set_repair_time(Line(8, 34), 1.53);
g.set_repair_time(Line(9, 17), 1.74);
g.set_repair_time(Line(9, 31), 2.79);
g.set_repair_time(Line(10, 12), 2.91);
g.set_repair_time(Line(10, 59), 2.98);
g.set_repair_time(Line(13, 15), 1.89);
g.set_repair_time(Line(13, 31), 2.23);
g.set_repair_time(Line(13, 40), 1.7);
g.set_repair_time(Line(14, 28), 3.15);
g.set_repair_time(Line(15, 42), 3.02);
g.set_repair_time(Line(15, 54), 4.97);
g.set_repair_time(Line(16, 58), 1.39);
g.set_repair_time(Line(17, 58), 1.01);
g.set_repair_time(Line(19, 29), 2.65);
g.set_repair_time(Line(19, 44), 1.54);
g.set_repair_time(Line(19, 45), 4.07);
g.set_repair_time(Line(19, 59), 4.87);
g.set_repair_time(Line(20, 26), 1.77);
g.set_repair_time(Line(20, 29), 3.93);
g.set_repair_time(Line(20, 47), 1.91);
g.set_repair_time(Line(20, 50), 1.57);
g.set_repair_time(Line(21, 37), 3.18);
g.set_repair_time(Line(23, 30), 3.77);
g.set_repair_time(Line(27, 28), 3.58);
g.set_repair_time(Line(27, 38), 2.51);
g.set_repair_time(Line(28, 51), 1.58);
g.set_repair_time(Line(30, 53), 3.52);
g.set_repair_time(Line(31, 39), 2.62);
g.set_repair_time(Line(33, 39), 4.48);
g.set_repair_time(Line(34, 59), 2.67);
g.set_repair_time(Line(35, 43), 2.16);
g.set_repair_time(Line(35, 49), 4.51);
g.set_repair_time(Line(36, 52), 1.38);
g.set_repair_time(Line(36, 59), 3.6);
g.set_repair_time(Line(38, 40), 4.76);
g.set_repair_time(Line(38, 42), 1.07);
g.set_repair_time(Line(39, 44), 4.99);
g.set_repair_time(Line(39, 48), 3.43);
g.set_repair_time(Line(40, 49), 1.04);
g.set_repair_time(Line(41, 53), 4.27);
g.set_repair_time(Line(42, 45), 1.87);
g.set_repair_time(Line(44, 56), 4.29);
g.set_repair_time(Line(45, 50), 1.13);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 27.4632}, {2, 12.2855}, {3, 25.8242}, {4, 20.1912}, {5, 21.3424}, {6, 17.1353}, {7, 18.6712}, {8, 13.3935}, {9, 28.6596}, {10, 14.823}, {11, 32.1907}, {12, 5.3033}, {13, 18.2139}, {14, 16.1886}, {15, 18.5474}, {16, 21.1712}, {17, 24.7067}, {18, 16.9941}, {19, 20.6534}, {20, 9.04508}, {21, 23.6349}, {22, 23.3853}, {23, 35.8935}, {24, 9.25615}, {25, 23.3935}, {26, 20.2254}, {27, 18.903}, {28, 18.9836}, {29, 11.8402}, {30, 43.7992}, {31, 25.7139}, {32, 5.3033}, {33, 23.0543}, {34, 7.8033}, {35, 17.2601}, {36, 19.1568}, {37, 16.9034}, {38, 25.516}, {39, 27.3233}, {40, 21.009}, {41, 39.2557}, {42, 23.5474}, {43, 26.2739}, {44, 23.5733}, {45, 17.9189}, {46, 24.52}, {47, 6.25}, {48, 18.6244}, {49, 22.259}, {50, 15.4189}, {51, 18.5355}, {52, 24.1375}, {53, 45.9871}, {54, 21.9932}, {55, 2.5}, {56, 18.27}, {57, 8.75}, {58, 22.939}, {59, 11.5533}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 27.4632}, {1, 0}, {2, 39.7487}, {3, 53.2874}, {4, 33.864}, {5, 32.614}, {6, 39.7195}, {7, 33.9859}, {8, 34.9728}, {9, 33.2133}, {10, 42.2862}, {11, 39.187}, {12, 32.7665}, {13, 31.1936}, {14, 37.7679}, {15, 29.8189}, {16, 34.3002}, {17, 30.7647}, {18, 31.9573}, {19, 35.7666}, {20, 24.0083}, {21, 39.1398}, {22, 43.7497}, {23, 31.5835}, {24, 36.7194}, {25, 44.0835}, {26, 35.1886}, {27, 41.4872}, {28, 40.5629}, {29, 26.8034}, {30, 23.6778}, {31, 23.6936}, {32, 32.7665}, {33, 25.3119}, {34, 35.2665}, {35, 44.7233}, {36, 41.6591}, {37, 35.7537}, {38, 38.4956}, {39, 20.1581}, {40, 33.9887}, {41, 11.7925}, {42, 34.8189}, {43, 43.3671}, {44, 23.9081}, {45, 32.8821}, {46, 35.4614}, {47, 21.2132}, {48, 8.83883}, {49, 35.2387}, {50, 30.3821}, {51, 45.9987}, {52, 35.4091}, {53, 18.5239}, {54, 36.9564}, {55, 29.9632}, {56, 29.2114}, {57, 36.2132}, {58, 32.5324}, {59, 39.0165}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 12.2855}, {1, 39.7487}, {2, 0}, {3, 13.5387}, {4, 7.90569}, {5, 9.15569}, {6, 11.9208}, {7, 27.1559}, {8, 17.1047}, {9, 34.0908}, {10, 27.1086}, {11, 26.9762}, {12, 17.5888}, {13, 20.7896}, {14, 14.6353}, {15, 11.9508}, {16, 26.6025}, {17, 30.138}, {18, 29.2796}, {19, 15.8736}, {20, 21.3306}, {21, 32.1196}, {22, 18.1708}, {23, 34.5797}, {24, 21.5417}, {25, 22.5274}, {26, 22.4685}, {27, 13.6886}, {28, 11.8402}, {29, 24.1257}, {30, 42.4854}, {31, 25.1471}, {32, 17.5888}, {33, 16.4577}, {34, 20.0888}, {35, 29.5456}, {36, 18.2008}, {37, 25.3882}, {38, 20.42}, {39, 21.6116}, {40, 23.5847}, {41, 51.5412}, {42, 16.9508}, {43, 38.5595}, {44, 25.3616}, {45, 19.8265}, {46, 35.9901}, {47, 18.5355}, {48, 30.9099}, {49, 24.8347}, {50, 22.3265}, {51, 6.25}, {52, 11.9508}, {53, 47.6393}, {54, 20.7008}, {55, 9.78553}, {56, 30.5556}, {57, 3.53553}, {58, 28.3702}, {59, 23.8388}, 