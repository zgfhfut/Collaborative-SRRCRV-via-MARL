node_num : 60
demand_node_num : 30
edge_num : 90
damaged_edge_num : 54
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 13, 15, 16, 17, 19, 21, 22, 23, 24, 26, 30, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 45, 47, 49, 51, 52, 54, 55, 57, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 2), Line(0, 6), Line(0, 55), Line(1, 26), Line(1, 27), Line(2, 5), Line(3, 13), Line(3, 44), Line(3, 48), Line(3, 49), Line(3, 50), Line(4, 20), Line(4, 25), Line(4, 51), Line(5, 30), Line(5, 56), Line(6, 16), Line(6, 24), Line(7, 10), Line(7, 56), Line(7, 57), Line(8, 13), Line(8, 14), Line(8, 22), Line(8, 33), Line(9, 27), Line(9, 53), Line(9, 56), Line(10, 30), Line(10, 33), Line(10, 51), Line(11, 36), Line(11, 57), Line(12, 29), Line(12, 47), Line(13, 39), Line(14, 26), Line(14, 45), Line(14, 46), Line(15, 29), Line(15, 52), Line(15, 58), Line(16, 18), Line(16, 46), Line(17, 39), Line(17, 44), Line(18, 46), Line(18, 54), Line(19, 37), Line(19, 55), Line(20, 21), Line(20, 30), Line(21, 37), Line(21, 38), Line(22, 27), Line(23, 40), Line(23, 41), Line(23, 57), Line(24, 31), Line(24, 47), Line(25, 34), Line(26, 48), Line(28, 35), Line(28, 52), Line(29, 43), Line(29, 56), Line(30, 33), Line(31, 32), Line(31, 34), Line(32, 33), Line(32, 43), Line(33, 51), Line(34, 49), Line(35, 39), Line(35, 43), Line(35, 50), Line(36, 54), Line(36, 59), Line(38, 53), Line(38, 58), Line(39, 50), Line(40, 45), Line(41, 47), Line(42, 50), Line(42, 59), Line(43, 54), Line(44, 52), Line(46, 48), Line(46, 51), Line(48, 50),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 6), Line(0, 55), Line(1, 26), Line(2, 5), Line(3, 13), Line(3, 44), Line(3, 48), Line(3, 49), Line(3, 50), Line(4, 25), Line(4, 51), Line(5, 30), Line(7, 10), Line(7, 56), Line(7, 57), Line(8, 14), Line(8, 22), Line(8, 33), Line(9, 56), Line(10, 30), Line(10, 33), Line(11, 36), Line(11, 57), Line(12, 29), Line(12, 47), Line(13, 39), Line(14, 26), Line(14, 46), Line(15, 29), Line(17, 44), Line(18, 46), Line(18, 54), Line(19, 37), Line(19, 55), Line(22, 27), Line(23, 41), Line(26, 48), Line(28, 35), Line(28, 52), Line(30, 33), Line(31, 34), Line(32, 33), Line(33, 51), Line(34, 49), Line(35, 43), Line(35, 50), Line(38, 58), Line(39, 50), Line(40, 45), Line(41, 47), Line(42, 50), Line(42, 59), Line(46, 51), Line(48, 50),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 2, 7.28);
g.add_edge(0, 6, 9.21);
g.add_edge(0, 55, 1.41);
g.add_edge(1, 26, 2.23);
g.add_edge(1, 27, 7.07);
g.add_edge(2, 5, 6.7);
g.add_edge(3, 13, 7.21);
g.add_edge(3, 44, 3.6);
g.add_edge(3, 48, 2);
g.add_edge(3, 49, 7.07);
g.add_edge(3, 50, 4.24);
g.add_edge(4, 20, 2.23);
g.add_edge(4, 25, 3.6);
g.add_edge(4, 51, 3.16);
g.add_edge(5, 30, 2.23);
g.add_edge(5, 56, 8);
g.add_edge(6, 16, 2.23);
g.add_edge(6, 24, 4.12);
g.add_edge(7, 10, 2.23);
g.add_edge(7, 56, 3.6);
g.add_edge(7, 57, 3.16);
g.add_edge(8, 13, 2.23);
g.add_edge(8, 14, 1.41);
g.add_edge(8, 22, 1.41);
g.add_edge(8, 33, 2);
g.add_edge(9, 27, 5.65);
g.add_edge(9, 53, 3.6);
g.add_edge(9, 56, 6.4);
g.add_edge(10, 30, 5.38);
g.add_edge(10, 33, 8.06);
g.add_edge(10, 51, 5);
g.add_edge(11, 36, 2.23);
g.add_edge(11, 57, 4.47);
g.add_edge(12, 29, 7.61);
g.add_edge(12, 47, 5.38);
g.add_edge(13, 39, 2.23);
g.add_edge(14, 26, 8.06);
g.add_edge(14, 45, 9.84);
g.add_edge(14, 46, 8.54);
g.add_edge(15, 29, 2.23);
g.add_edge(15, 52, 5.09);
g.add_edge(15, 58, 5.09);
g.add_edge(16, 18, 8.06);
g.add_edge(16, 46, 1.41);
g.add_edge(17, 39, 7.07);
g.add_edge(17, 44, 5.09);
g.add_edge(18, 46, 7.81);
g.add_edge(18, 54, 3.16);
g.add_edge(19, 37, 4);
g.add_edge(19, 55, 5.83);
g.add_edge(20, 21, 8.94);
g.add_edge(20, 30, 6.4);
g.add_edge(21, 37, 6);
g.add_edge(21, 38, 5);
g.add_edge(22, 27, 5.09);
g.add_edge(23, 40, 3.6);
g.add_edge(23, 41, 2);
g.add_edge(23, 57, 9.05);
g.add_edge(24, 31, 7.07);
g.add_edge(24, 47, 6.7);
g.add_edge(25, 34, 3.16);
g.add_edge(26, 48, 8);
g.add_edge(28, 35, 2);
g.add_edge(28, 52, 3.16);
g.add_edge(29, 43, 8.06);
g.add_edge(29, 56, 7.61);
g.add_edge(30, 33, 6.32);
g.add_edge(31, 32, 8.6);
g.add_edge(31, 34, 4.24);
g.add_edge(32, 33, 7.81);
g.add_edge(32, 43, 7.28);
g.add_edge(33, 51, 3.16);
g.add_edge(34, 49, 2);
g.add_edge(35, 39, 2);
g.add_edge(35, 43, 4);
g.add_edge(35, 50, 6.4);
g.add_edge(36, 54, 3.6);
g.add_edge(36, 59, 2.23);
g.add_edge(38, 53, 9.21);
g.add_edge(38, 58, 4.47);
g.add_edge(39, 50, 7.81);
g.add_edge(40, 45, 6);
g.add_edge(41, 47, 4);
g.add_edge(42, 50, 7.28);
g.add_edge(42, 59, 2.82);
g.add_edge(43, 54, 7.21);
g.add_edge(44, 52, 5.83);
g.add_edge(46, 48, 6);
g.add_edge(46, 51, 4.12);
g.add_edge(48, 50, 3.16);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 8.95);
g.set_importance(14, 0);
g.set_importance(15, 2.44);
g.set_importance(16, 1.19);
g.set_importance(17, 4.18);
g.set_importance(18, 0);
g.set_importance(19, 9.05);
g.set_importance(20, 0);
g.set_importance(21, 8.84);
g.set_importance(22, 8.42);
g.set_importance(23, 3.98);
g.set_importance(24, 5.59);
g.set_importance(25, 0);
g.set_importance(26, 5.06);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 4.8);
g.set_importance(31, 1.09);
g.set_importance(32, 1.63);
g.set_importance(33, 4.98);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 7.2);
g.set_importance(37, 0);
g.set_importance(38, 9.45);
g.set_importance(39, 4.13);
g.set_importance(40, 3.56);
g.set_importance(41, 0);
g.set_importance(42, 1.97);
g.set_importance(43, 9.19);
g.set_importance(44, 3.98);
g.set_importance(45, 3.54);
g.set_importance(46, 0);
g.set_importance(47, 8.53);
g.set_importance(48, 0);
g.set_importance(49, 1.63);
g.set_importance(50, 0);
g.set_importance(51, 5.04);
g.set_importance(52, 3.8);
g.set_importance(53, 0);
g.set_importance(54, 9.84);
g.set_importance(55, 8.26);
g.set_importance(56, 0);
g.set_importance(57, 8.15);
g.set_importance(58, 0);
g.set_importance(59, 3.39);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 6), 2.15);
g.set_repair_time(Line(0, 55), 4.7);
g.set_repair_time(Line(1, 26), 3.26);
g.set_repair_time(Line(2, 5), 2.13);
g.set_repair_time(Line(3, 13), 1.56);
g.set_repair_time(Line(3, 44), 1.43);
g.set_repair_time(Line(3, 48), 4.05);
g.set_repair_time(Line(3, 49), 2.42);
g.set_repair_time(Line(3, 50), 1.48);
g.set_repair_time(Line(4, 25), 4.4);
g.set_repair_time(Line(4, 51), 4.77);
g.set_repair_time(Line(5, 30), 4.95);
g.set_repair_time(Line(7, 10), 1.46);
g.set_repair_time(Line(7, 56), 1.68);
g.set_repair_time(Line(7, 57), 4.37);
g.set_repair_time(Line(8, 14), 2.31);
g.set_repair_time(Line(8, 22), 2.15);
g.set_repair_time(Line(8, 33), 3.12);
g.set_repair_time(Line(9, 56), 1.77);
g.set_repair_time(Line(10, 30), 1.16);
g.set_repair_time(Line(10, 33), 2.57);
g.set_repair_time(Line(11, 36), 3.19);
g.set_repair_time(Line(11, 57), 1.15);
g.set_repair_time(Line(12, 29), 3.41);
g.set_repair_time(Line(12, 47), 1.32);
g.set_repair_time(Line(13, 39), 4.8);
g.set_repair_time(Line(14, 26), 1.21);
g.set_repair_time(Line(14, 46), 4.28);
g.set_repair_time(Line(15, 29), 2.51);
g.set_repair_time(Line(17, 44), 1.04);
g.set_repair_time(Line(18, 46), 4.75);
g.set_repair_time(Line(18, 54), 2.29);
g.set_repair_time(Line(19, 37), 1.7);
g.set_repair_time(Line(19, 55), 4.76);
g.set_repair_time(Line(22, 27), 3.54);
g.set_repair_time(Line(23, 41), 1.17);
g.set_repair_time(Line(26, 48), 4.92);
g.set_repair_time(Line(28, 35), 3.85);
g.set_repair_time(Line(28, 52), 1.02);
g.set_repair_time(Line(30, 33), 1.9);
g.set_repair_time(Line(31, 34), 3.06);
g.set_repair_time(Line(32, 33), 2.57);
g.set_repair_time(Line(33, 51), 4.03);
g.set_repair_time(Line(34, 49), 2.01);
g.set_repair_time(Line(35, 43), 4.99);
g.set_repair_time(Line(35, 50), 3.46);
g.set_repair_time(Line(38, 58), 4.92);
g.set_repair_time(Line(39, 50), 1.4);
g.set_repair_time(Line(40, 45), 1.06);
g.set_repair_time(Line(41, 47), 2.74);
g.set_repair_time(Line(42, 50), 4.68);
g.set_repair_time(Line(42, 59), 1.91);
g.set_repair_time(Line(46, 51), 2.54);
g.set_repair_time(Line(48, 50), 1.95);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 36.35}, {2, 9.1}, {3, 26.0625}, {4, 25.1625}, {5, 17.475}, {6, 11.5125}, {7, 29.775}, {8, 27.6625}, {9, 35.475}, {10, 26.9875}, {11, 35.6125}, {12, 31.7625}, {13, 30.45}, {14, 26.7375}, {15, 39.75}, {16, 14.3}, {17, 36.925}, {18, 24.375}, {19, 9.05}, {20, 27.95}, {21, 21.55}, {22, 29.425}, {23, 32.5375}, {24, 16.6625}, {25, 29.6625}, {26, 33.5625}, {27, 35.7875}, {28, 38.0125}, {29, 36.9875}, {30, 20.2625}, {31, 25.5}, {32, 34.925}, {33, 25.1625}, {34, 30.8}, {35, 35.5125}, {36, 32.825}, {37, 14.05}, {38, 27.8}, {39, 33.2375}, {40, 37.0375}, {41, 30.0375}, {42, 36.6125}, {43, 37.3375}, {44, 30.5625}, {45, 39.0375}, {46, 16.0625}, {47, 25.0375}, {48, 23.5625}, {49, 33.3}, {50, 27.5125}, {51, 21.2125}, {52, 37.85}, {53, 39.3125}, {54, 28.325}, {55, 1.7625}, {56, 27.475}, {57, 33.725}, {58, 33.3875}, {59, 35.6125}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 36.35}, {1, 0}, {2, 36.1875}, {3, 15.2875}, {4, 25.025}, {5, 27.8125}, {6, 24.8375}, {7, 28.4}, {8, 14.625}, {9, 15.9}, {10, 27.2}, {11, 34.9375}, {12, 42.925}, {13, 17.4125}, {14, 12.8625}, {15, 33.4375}, {16, 22.05}, {17, 26.15}, {18, 30.05}, {19, 45.4}, {20, 27.8125}, {21, 38.1625}, {22, 15.2}, {23, 37.1625}, {24, 29.9875}, {25, 29.525}, {26, 2.7875}, {27, 8.8375}, {28, 25.2}, {29, 33.4125}, {30, 25.025}, {31, 31.925}, {32, 26.8875}, {33, 17.125}, {34, 26.625}, {35, 22.7}, {36, 32.15}, {37, 45.6625}, {38, 31.9125}, {39, 20.2}, {40, 32.6625}, {41, 39.6625}, {42, 25.8375}, {43, 27.7}, {44, 19.7875}, {45, 25.1625}, {46, 20.2875}, {47, 38.3625}, {48, 12.7875}, {49, 24.125}, {50, 16.7375}, {51, 21.075}, {52, 27.075}, {53, 20.4}, {54, 34}, {55, 38.1125}, {56, 23.9}, {57, 32.35}, {58, 37.5}, {59, 29.3625}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 9.1}, {1, 36.1875}, {2, 0}, {3, 33.3625}, {4, 21.95}, {5, 8.375}, {6, 20.6125}, {7, 20.675}, {8, 21.5625}, {9, 26.375}, {10, 17.8875}, {11, 30.2125}, {12, 37.4}, {13, 24.35}, {14, 23.325}, {15, 30.675}, {16, 23.4}, {17, 35.975}, {18, 33.475}, {19, 18.15}, {20, 19.1625}, {21, 30.3375}, {22, 23.325}, {23, 35.9375}, {24, 25.7625}, {25, 26.45}, {26, 33.4}, {27, 29.6875}, {28, 32.1375}, {29, 27.8875}, {30, 11.1625}, {31, 34.6}, {32, 28.825}, {33, 19.0625}, {34, 30.4}, {35, 29.6375}, {36, 33}, {37, 23.15}, {38, 36.5875}, {39, 27.1375}, {40, 40.4375}, {41, 38.4375}, {42, 39.3125}, {43, 34.6375}, {44, 37.8625}, {45, 35.625}, {46, 25.1625}, {47, 34.1375}, {48, 32.6625}, {49, 32.9}, {50, 36.6125}, {51, 23.0125}, {52, 36.0875}, {53, 30.875}, {54, 37.425}, {55, 10.8625}, {56, 18.375}, {57, 24.625}, {58, 37.0375}, {59, 35.7875}, 