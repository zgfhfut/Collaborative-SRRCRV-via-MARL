node_num : 60
demand_node_num : 30
edge_num : 90
damaged_edge_num : 54
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 7, 10, 12, 14, 21, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 58, 59,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 12), Line(0, 14), Line(0, 19), Line(0, 31), Line(0, 43), Line(1, 5), Line(1, 51), Line(2, 49), Line(2, 50), Line(2, 52), Line(3, 26), Line(3, 29), Line(3, 58), Line(4, 5), Line(4, 18), Line(5, 46), Line(6, 7), Line(6, 18), Line(6, 56), Line(7, 39), Line(7, 42), Line(7, 45), Line(7, 54), Line(8, 20), Line(8, 29), Line(9, 43), Line(9, 56), Line(10, 28), Line(10, 44), Line(10, 47), Line(11, 25), Line(11, 31), Line(12, 36), Line(12, 50), Line(13, 23), Line(13, 33), Line(13, 52), Line(14, 23), Line(15, 20), Line(15, 39), Line(15, 40), Line(16, 36), Line(16, 41), Line(17, 26), Line(17, 35), Line(19, 21), Line(19, 27), Line(19, 53), Line(21, 43), Line(21, 57), Line(22, 23), Line(22, 26), Line(22, 54), Line(22, 58), Line(23, 30), Line(24, 45), Line(24, 57), Line(25, 29), Line(25, 57), Line(25, 59), Line(27, 35), Line(27, 53), Line(27, 55), Line(28, 29), Line(28, 30), Line(28, 56), Line(32, 35), Line(32, 38), Line(32, 46), Line(33, 38), Line(34, 37), Line(34, 47), Line(35, 48), Line(35, 53), Line(37, 44), Line(37, 56), Line(38, 51), Line(39, 46), Line(40, 48), Line(40, 59), Line(41, 46), Line(41, 57), Line(42, 53), Line(42, 54), Line(45, 46), Line(46, 48), Line(49, 55), Line(50, 51), Line(54, 55), Line(54, 58),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 12), Line(0, 14), Line(0, 43), Line(2, 50), Line(3, 26), Line(3, 58), Line(5, 46), Line(6, 18), Line(6, 56), Line(7, 39), Line(7, 45), Line(8, 20), Line(8, 29), Line(9, 56), Line(10, 44), Line(11, 25), Line(11, 31), Line(12, 50), Line(13, 23), Line(13, 33), Line(14, 23), Line(16, 36), Line(17, 26), Line(19, 21), Line(19, 53), Line(21, 57), Line(22, 23), Line(22, 54), Line(22, 58), Line(24, 45), Line(24, 57), Line(25, 29), Line(25, 59), Line(27, 35), Line(27, 53), Line(27, 55), Line(28, 30), Line(28, 56), Line(32, 35), Line(32, 38), Line(32, 46), Line(34, 37), Line(34, 47), Line(35, 48), Line(35, 53), Line(37, 44), Line(37, 56), Line(38, 51), Line(40, 48), Line(40, 59), Line(42, 53), Line(42, 54), Line(45, 46), Line(46, 48),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 12, 7.28);
g.add_edge(0, 14, 3);
g.add_edge(0, 19, 9.48);
g.add_edge(0, 31, 9.89);
g.add_edge(0, 43, 7.07);
g.add_edge(1, 5, 3.6);
g.add_edge(1, 51, 7.07);
g.add_edge(2, 49, 9.21);
g.add_edge(2, 50, 8.6);
g.add_edge(2, 52, 7);
g.add_edge(3, 26, 3.16);
g.add_edge(3, 29, 8.6);
g.add_edge(3, 58, 8.24);
g.add_edge(4, 5, 11.4);
g.add_edge(4, 18, 5.38);
g.add_edge(5, 46, 7.61);
g.add_edge(6, 7, 4.12);
g.add_edge(6, 18, 5.09);
g.add_edge(6, 56, 5.38);
g.add_edge(7, 39, 8.24);
g.add_edge(7, 42, 9.43);
g.add_edge(7, 45, 5.83);
g.add_edge(7, 54, 9.21);
g.add_edge(8, 20, 7.81);
g.add_edge(8, 29, 3.6);
g.add_edge(9, 43, 8.6);
g.add_edge(9, 56, 4.47);
g.add_edge(10, 28, 2);
g.add_edge(10, 44, 5.38);
g.add_edge(10, 47, 10);
g.add_edge(11, 25, 5.38);
g.add_edge(11, 31, 5.83);
g.add_edge(12, 36, 7.07);
g.add_edge(12, 50, 8.06);
g.add_edge(13, 23, 7.07);
g.add_edge(13, 33, 4.47);
g.add_edge(13, 52, 1);
g.add_edge(14, 23, 2.23);
g.add_edge(15, 20, 7.28);
g.add_edge(15, 39, 7.21);
g.add_edge(15, 40, 2);
g.add_edge(16, 36, 5.83);
g.add_edge(16, 41, 6.7);
g.add_edge(17, 26, 3);
g.add_edge(17, 35, 3);
g.add_edge(19, 21, 2.82);
g.add_edge(19, 27, 2.82);
g.add_edge(19, 53, 5);
g.add_edge(21, 43, 8.48);
g.add_edge(21, 57, 1);
g.add_edge(22, 23, 7);
g.add_edge(22, 26, 6.32);
g.add_edge(22, 54, 6.32);
g.add_edge(22, 58, 7.07);
g.add_edge(23, 30, 7.21);
g.add_edge(24, 45, 4.12);
g.add_edge(24, 57, 3.16);
g.add_edge(25, 29, 6);
g.add_edge(25, 57, 7.61);
g.add_edge(25, 59, 7);
g.add_edge(27, 35, 3.6);
g.add_edge(27, 53, 5.38);
g.add_edge(27, 55, 6.4);
g.add_edge(28, 29, 8.6);
g.add_edge(28, 30, 7.28);
g.add_edge(28, 56, 5);
g.add_edge(32, 35, 5);
g.add_edge(32, 38, 6.08);
g.add_edge(32, 46, 3.16);
g.add_edge(33, 38, 1);
g.add_edge(34, 37, 9.05);
g.add_edge(34, 47, 8);
g.add_edge(35, 48, 2.23);
g.add_edge(35, 53, 2);
g.add_edge(37, 44, 6.4);
g.add_edge(37, 56, 5);
g.add_edge(38, 51, 4);
g.add_edge(39, 46, 6);
g.add_edge(40, 48, 4.47);
g.add_edge(40, 59, 5.83);
g.add_edge(41, 46, 6.32);
g.add_edge(41, 57, 8.06);
g.add_edge(42, 53, 5.83);
g.add_edge(42, 54, 7.21);
g.add_edge(45, 46, 3.16);
g.add_edge(46, 48, 4);
g.add_edge(49, 55, 1.41);
g.add_edge(50, 51, 4.12);
g.add_edge(54, 55, 7.21);
g.add_edge(54, 58, 3.16);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 6.42);
g.set_importance(6, 0);
g.set_importance(7, 8.27);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 8.56);
g.set_importance(11, 0);
g.set_importance(12, 6.39);
g.set_importance(13, 0);
g.set_importance(14, 1.27);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 2.32);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 1.89);
g.set_importance(25, 3.45);
g.set_importance(26, 3.4);
g.set_importance(27, 4.11);
g.set_importance(28, 0);
g.set_importance(29, 6.78);
g.set_importance(30, 8.4);
g.set_importance(31, 7.08);
g.set_importance(32, 0);
g.set_importance(33, 8.51);
g.set_importance(34, 4.91);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 5.78);
g.set_importance(38, 4.98);
g.set_importance(39, 0);
g.set_importance(40, 5.77);
g.set_importance(41, 9.01);
g.set_importance(42, 4.39);
g.set_importance(43, 3.87);
g.set_importance(44, 0);
g.set_importance(45, 5.97);
g.set_importance(46, 9.51);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 5.26);
g.set_importance(50, 9.97);
g.set_importance(51, 1.39);
g.set_importance(52, 9.58);
g.set_importance(53, 2.53);
g.set_importance(54, 0);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 2.81);
g.set_importance(59, 1.14);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 12), 1.14);
g.set_repair_time(Line(0, 14), 4.85);
g.set_repair_time(Line(0, 43), 1.19);
g.set_repair_time(Line(2, 50), 2.46);
g.set_repair_time(Line(3, 26), 1.59);
g.set_repair_time(Line(3, 58), 4.57);
g.set_repair_time(Line(5, 46), 3.07);
g.set_repair_time(Line(6, 18), 4.14);
g.set_repair_time(Line(6, 56), 2.48);
g.set_repair_time(Line(7, 39), 1.09);
g.set_repair_time(Line(7, 45), 3.12);
g.set_repair_time(Line(8, 20), 2.87);
g.set_repair_time(Line(8, 29), 3.4);
g.set_repair_time(Line(9, 56), 1.66);
g.set_repair_time(Line(10, 44), 1.6);
g.set_repair_time(Line(11, 25), 1.02);
g.set_repair_time(Line(11, 31), 3.22);
g.set_repair_time(Line(12, 50), 2.57);
g.set_repair_time(Line(13, 23), 4.11);
g.set_repair_time(Line(13, 33), 3.56);
g.set_repair_time(Line(14, 23), 4.93);
g.set_repair_time(Line(16, 36), 2.66);
g.set_repair_time(Line(17, 26), 1.82);
g.set_repair_time(Line(19, 21), 3.41);
g.set_repair_time(Line(19, 53), 1.99);
g.set_repair_time(Line(21, 57), 3.94);
g.set_repair_time(Line(22, 23), 1.94);
g.set_repair_time(Line(22, 54), 4.77);
g.set_repair_time(Line(22, 58), 4.96);
g.set_repair_time(Line(24, 45), 1);
g.set_repair_time(Line(24, 57), 2.46);
g.set_repair_time(Line(25, 29), 1.17);
g.set_repair_time(Line(25, 59), 4.42);
g.set_repair_time(Line(27, 35), 3.93);
g.set_repair_time(Line(27, 53), 3.22);
g.set_repair_time(Line(27, 55), 2.57);
g.set_repair_time(Line(28, 30), 1.35);
g.set_repair_time(Line(28, 56), 1.48);
g.set_repair_time(Line(32, 35), 2.45);
g.set_repair_time(Line(32, 38), 2.92);
g.set_repair_time(Line(32, 46), 2.88);
g.set_repair_time(Line(34, 37), 1.2);
g.set_repair_time(Line(34, 47), 3.29);
g.set_repair_time(Line(35, 48), 4.27);
g.set_repair_time(Line(35, 53), 2.09);
g.set_repair_time(Line(37, 44), 3.93);
g.set_repair_time(Line(37, 56), 2.68);
g.set_repair_time(Line(38, 51), 4.29);
g.set_repair_time(Line(40, 48), 2.63);
g.set_repair_time(Line(40, 59), 1.14);
g.set_repair_time(Line(42, 53), 2.7);
g.set_repair_time(Line(42, 54), 1.25);
g.set_repair_time(Line(45, 46), 3.31);
g.set_repair_time(Line(46, 48), 1.25);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 33.1625}, {2, 25.375}, {3, 27.1375}, {4, 44.9875}, {5, 37.175}, {6, 31.9}, {7, 33.0125}, {8, 38.1375}, {9, 19.5875}, {10, 27.15}, {11, 19.65}, {12, 9.1}, {13, 15.375}, {14, 3.75}, {15, 30.75}, {16, 25.225}, {17, 23.625}, {18, 38.2625}, {19, 11.85}, {20, 39.85}, {21, 15.375}, {22, 15.2875}, {23, 6.5375}, {24, 20.575}, {25, 26.1375}, {26, 23.1875}, {27, 15.375}, {28, 24.65}, {29, 33.6375}, {30, 15.55}, {31, 12.3625}, {32, 26.125}, {33, 20.9625}, {34, 42.7375}, {35, 19.875}, {36, 17.9375}, {37, 31.425}, {38, 22.2125}, {39, 35.1625}, {40, 28.25}, {41, 26.7}, {42, 25.3875}, {43, 8.8375}, {44, 33.875}, {45, 25.725}, {46, 27.6625}, {47, 39.65}, {48, 22.6625}, {49, 25.1375}, {50, 19.175}, {51, 24.325}, {52, 16.625}, {53, 18.1}, {54, 23.1875}, {55, 23.375}, {56, 25.175}, {57, 16.625}, {58, 24.125}, {59, 34.8875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 33.1625}, {1, 0}, {2, 24.7375}, {3, 33.25}, {4, 18.75}, {5, 4.5}, {6, 30.4}, {7, 25.25}, {8, 45.9625}, {9, 42.7125}, {10, 45.875}, {11, 43.3}, {12, 24.0625}, {13, 20.675}, {14, 32.3}, {15, 27.1}, {16, 30.2875}, {17, 25.55}, {18, 25.475}, {19, 29.825}, {20, 36.2}, {21, 28.3125}, {22, 37.2}, {23, 29.5125}, {24, 23.1125}, {25, 36.575}, {26, 29.3}, {27, 26.3}, {28, 43.375}, {29, 44}, {30, 38.525}, {31, 45.525}, {32, 17.9625}, {33, 15.0875}, {34, 54.6875}, {35, 21.8}, {36, 32.9}, {37, 43.375}, {38, 13.8375}, {39, 21.5125}, {40, 24.6}, {41, 21.9125}, {42, 31.5875}, {43, 38.9125}, {44, 51.375}, {45, 17.9625}, {46, 14.0125}, {47, 58.375}, {48, 19.0125}, {49, 36.0625}, {50, 13.9875}, {51, 8.8375}, {52, 21.925}, {53, 24.3}, {54, 36.7625}, {55, 34.3}, {56, 37.125}, {57, 27.0625}, {58, 40.7125}, {59, 31.8875}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 25.375}, {1, 24.7375}, {2, 0}, {3, 36.5375}, {4, 43.4875}, {5, 29.2375}, {6, 38.95}, {7, 33.8}, {8, 51.0875}, {9, 44.9625}, {10, 39.45}, {11, 45.025}, {12, 20.825}, {13, 10}, {14, 21.625}, {15, 36.65}, {16, 36.95}, {17, 29.525}, {18, 45.3125}, {19, 24.8}, {20, 45.75}, {21, 28.325}, {22, 27.5875}, {23, 18.8375}, {24, 33.525}, {25, 39.0875}, {26, 33.275}, {27, 21.275}, {28, 36.95}, {29, 46.5875}, {30, 27.85}, {31, 37.7375}, {32, 24.4375}, {33, 15.5875}, {34, 60.7625}, {35, 25.775}, {36, 29.6625}, {37, 49.45}, {38, 16.8375}, {39, 35.8875}, {40, 34.15}, {41, 36.2875}, {42, 31.3}, {43, 34.2125}, {44, 46.175}, {45, 32.3375}, {46, 28.3875}, {47, 51.95}, {48, 28.5625}, {49, 11.5125}, {50, 10.75}, {51, 15.9}, {52, 8.75}, {53, 28}, {54, 22.2875}, {55, 13.275}, {56, 43.2}, {57, 29.575}, {58, 26.2375}, {59, 41.4375}, 