node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 9, 10, 12, 15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 73, 74, 77, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 18), Line(0, 26), Line(0, 33), Line(0, 39), Line(0, 76), Line(1, 38), Line(1, 55), Line(1, 60), Line(1, 62), Line(2, 10), Line(2, 69), Line(2, 71), Line(2, 72), Line(3, 5), Line(3, 33), Line(3, 36), Line(3, 52), Line(4, 14), Line(4, 65), Line(4, 73), Line(6, 34), Line(6, 51), Line(6, 69), Line(7, 32), Line(7, 53), Line(7, 75), Line(8, 25), Line(8, 31), Line(8, 43), Line(8, 46), Line(8, 72), Line(9, 21), Line(9, 56), Line(9, 78), Line(10, 19), Line(11, 18), Line(11, 31), Line(12, 24), Line(12, 70), Line(12, 74), Line(13, 34), Line(13, 44), Line(13, 59), Line(14, 65), Line(15, 17), Line(15, 23), Line(16, 40), Line(16, 71), Line(17, 49), Line(19, 68), Line(20, 21), Line(20, 26), Line(20, 57), Line(21, 67), Line(22, 25), Line(22, 32), Line(22, 51), Line(23, 54), Line(23, 76), Line(24, 56), Line(25, 67), Line(26, 66), Line(27, 74), Line(27, 79), Line(28, 52), Line(28, 56), Line(28, 64), Line(29, 33), Line(29, 76), Line(30, 42), Line(30, 48), Line(30, 60), Line(31, 49), Line(32, 50), Line(32, 71), Line(33, 73), Line(35, 45), Line(35, 59), Line(35, 61), Line(36, 57), Line(37, 38), Line(37, 47), Line(37, 66), Line(38, 52), Line(38, 71), Line(39, 65), Line(39, 72), Line(40, 46), Line(41, 46), Line(41, 55), Line(41, 56), Line(41, 62), Line(42, 54), Line(42, 76), Line(43, 78), Line(44, 58), Line(45, 67), Line(45, 74), Line(46, 61), Line(47, 49), Line(47, 69), Line(48, 77), Line(48, 79), Line(50, 62), Line(50, 75), Line(51, 69), Line(52, 57), Line(52, 77), Line(53, 58), Line(54, 62), Line(54, 65), Line(55, 75), Line(59, 63), Line(63, 64), Line(64, 66), Line(65, 78), Line(67, 72), Line(68, 70), Line(72, 74), Line(75, 76),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 18), Line(0, 26), Line(0, 33), Line(0, 39), Line(0, 76), Line(1, 38), Line(1, 60), Line(1, 62), Line(2, 10), Line(2, 71), Line(2, 72), Line(3, 5), Line(3, 52), Line(4, 14), Line(4, 65), Line(6, 34), Line(7, 53), Line(7, 75), Line(8, 31), Line(8, 43), Line(8, 72), Line(9, 21), Line(9, 56), Line(11, 18), Line(11, 31), Line(12, 70), Line(13, 44), Line(13, 59), Line(15, 17), Line(15, 23), Line(16, 40), Line(16, 71), Line(17, 49), Line(19, 68), Line(20, 21), Line(20, 26), Line(20, 57), Line(21, 67), Line(22, 25), Line(22, 32), Line(22, 51), Line(23, 54), Line(23, 76), Line(24, 56), Line(25, 67), Line(26, 66), Line(27, 74), Line(27, 79), Line(28, 52), Line(29, 33), Line(29, 76), Line(30, 42), Line(30, 48), Line(30, 60), Line(31, 49), Line(32, 71), Line(33, 73), Line(35, 45), Line(35, 61), Line(37, 38), Line(37, 66), Line(38, 52), Line(38, 71), Line(39, 65), Line(39, 72), Line(40, 46), Line(41, 55), Line(41, 56), Line(41, 62), Line(42, 54), Line(43, 78), Line(44, 58), Line(46, 61), Line(48, 77), Line(50, 75), Line(52, 57), Line(52, 77), Line(54, 62), Line(54, 65), Line(55, 75), Line(63, 64), Line(65, 78), Line(72, 74), Line(75, 76),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 18, 3.60555);
g.add_edge(0, 26, 6);
g.add_edge(0, 33, 3.16228);
g.add_edge(0, 39, 3.16228);
g.add_edge(0, 76, 1);
g.add_edge(1, 38, 5.09902);
g.add_edge(1, 55, 6.08276);
g.add_edge(1, 60, 10);
g.add_edge(1, 62, 4.47214);
g.add_edge(2, 10, 7.07107);
g.add_edge(2, 69, 2.23607);
g.add_edge(2, 71, 5.09902);
g.add_edge(2, 72, 3.16228);
g.add_edge(3, 5, 3.16228);
g.add_edge(3, 33, 5);
g.add_edge(3, 36, 3.60555);
g.add_edge(3, 52, 5);
g.add_edge(4, 14, 2.23607);
g.add_edge(4, 65, 4);
g.add_edge(4, 73, 5);
g.add_edge(6, 34, 5);
g.add_edge(6, 51, 4.12311);
g.add_edge(6, 69, 9.48683);
g.add_edge(7, 32, 1);
g.add_edge(7, 53, 6.32456);
g.add_edge(7, 75, 3.60555);
g.add_edge(8, 25, 8.06226);
g.add_edge(8, 31, 2.23607);
g.add_edge(8, 43, 2.23607);
g.add_edge(8, 46, 5.83095);
g.add_edge(8, 72, 2.23607);
g.add_edge(9, 21, 6.40312);
g.add_edge(9, 56, 2.82843);
g.add_edge(9, 78, 6.08276);
g.add_edge(10, 19, 1);
g.add_edge(11, 18, 7.07107);
g.add_edge(11, 31, 6);
g.add_edge(12, 24, 6);
g.add_edge(12, 70, 4);
g.add_edge(12, 74, 4.47214);
g.add_edge(13, 34, 2.82843);
g.add_edge(13, 44, 8.24621);
g.add_edge(13, 59, 3);
g.add_edge(14, 65, 3.60555);
g.add_edge(15, 17, 7.61577);
g.add_edge(15, 23, 1.41421);
g.add_edge(16, 40, 4);
g.add_edge(16, 71, 1);
g.add_edge(17, 49, 3.60555);
g.add_edge(19, 68, 7.07107);
g.add_edge(20, 21, 1.41421);
g.add_edge(20, 26, 3);
g.add_edge(20, 57, 7.2111);
g.add_edge(21, 67, 6.7082);
g.add_edge(22, 25, 6.08276);
g.add_edge(22, 32, 5.09902);
g.add_edge(22, 51, 3);
g.add_edge(23, 54, 7.07107);
g.add_edge(23, 76, 4);
g.add_edge(24, 56, 5.65685);
g.add_edge(25, 67, 5);
g.add_edge(26, 66, 1.41421);
g.add_edge(27, 74, 2.23607);
g.add_edge(27, 79, 8.24621);
g.add_edge(28, 52, 8.94427);
g.add_edge(28, 56, 7.07107);
g.add_edge(28, 64, 9.84886);
g.add_edge(29, 33, 6.32456);
g.add_edge(29, 76, 6.40312);
g.add_edge(30, 42, 5.38516);
g.add_edge(30, 48, 2.23607);
g.add_edge(30, 60, 6.32456);
g.add_edge(31, 49, 4.12311);
g.add_edge(32, 50, 4.12311);
g.add_edge(32, 71, 5);
g.add_edge(33, 73, 2.23607);
g.add_edge(35, 45, 4);
g.add_edge(35, 59, 9.43398);
g.add_edge(35, 61, 3.16228);
g.add_edge(36, 57, 6.08276);
g.add_edge(37, 38, 5.38516);
g.add_edge(37, 47, 3.60555);
g.add_edge(37, 66, 5);
g.add_edge(38, 52, 5.83095);
g.add_edge(38, 71, 2.23607);
g.add_edge(39, 65, 4.47214);
g.add_edge(39, 72, 2.23607);
g.add_edge(40, 46, 1.41421);
g.add_edge(41, 46, 6.08276);
g.add_edge(41, 55, 5.09902);
g.add_edge(41, 56, 8.06226);
g.add_edge(41, 62, 4.12311);
g.add_edge(42, 54, 7.61577);
g.add_edge(42, 76, 4.47214);
g.add_edge(43, 78, 5.09902);
g.add_edge(44, 58, 4.24264);
g.add_edge(45, 67, 8.544);
g.add_edge(45, 74, 5);
g.add_edge(46, 61, 6.40312);
g.add_edge(47, 49, 5.83095);
g.add_edge(47, 69, 2);
g.add_edge(48, 77, 4.47214);
g.add_edge(48, 79, 3.16228);
g.add_edge(50, 62, 6.7082);
g.add_edge(50, 75, 2.23607);
g.add_edge(51, 69, 5.38516);
g.add_edge(52, 57, 7.81025);
g.add_edge(52, 77, 4.12311);
g.add_edge(53, 58, 4);
g.add_edge(54, 62, 7.81025);
g.add_edge(54, 65, 6.40312);
g.add_edge(55, 75, 3);
g.add_edge(59, 63, 2.23607);
g.add_edge(63, 64, 9.48683);
g.add_edge(64, 66, 5);
g.add_edge(65, 78, 1);
g.add_edge(67, 72, 5);
g.add_edge(68, 70, 3.16228);
g.add_edge(72, 74, 3.60555);
g.add_edge(75, 76, 3.60555);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 2.61);
g.set_importance(6, 4.94);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 9.51);
g.set_importance(10, 8.99);
g.set_importance(11, 0);
g.set_importance(12, 2.32);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 7.85);
g.set_importance(16, 5.81);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 4.1);
g.set_importance(20, 5.38);
g.set_importance(21, 1.05);
g.set_importance(22, 8.81);
g.set_importance(23, 0);
g.set_importance(24, 3.34);
g.set_importance(25, 3.52);
g.set_importance(26, 8.99);
g.set_importance(27, 8.61);
g.set_importance(28, 0);
g.set_importance(29, 7.49);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 5.39);
g.set_importance(33, 0);
g.set_importance(34, 9.53);
g.set_importance(35, 9.5);
g.set_importance(36, 2.18);
g.set_importance(37, 3.72);
g.set_importance(38, 7.87);
g.set_importance(39, 4.37);
g.set_importance(40, 0);
g.set_importance(41, 0);
g.set_importance(42, 1.66);
g.set_importance(43, 4.72);
g.set_importance(44, 0);
g.set_importance(45, 1.26);
g.set_importance(46, 4.58);
g.set_importance(47, 8.33);
g.set_importance(48, 9.05);
g.set_importance(49, 6.19);
g.set_importance(50, 3.06);
g.set_importance(51, 0);
g.set_importance(52, 3.52);
g.set_importance(53, 0);
g.set_importance(54, 7.76);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 3.53);
g.set_importance(58, 5.04);
g.set_importance(59, 5.8);
g.set_importance(60, 7.06);
g.set_importance(61, 0);
g.set_importance(62, 0);
g.set_importance(63, 5.3);
g.set_importance(64, 9.86);
g.set_importance(65, 9.03);
g.set_importance(66, 4.76);
g.set_importance(67, 0);
g.set_importance(68, 0);
g.set_importance(69, 8.32);
g.set_importance(70, 1.99);
g.set_importance(71, 7.95);
g.set_importance(72, 0);
g.set_importance(73, 9.87);
g.set_importance(74, 2.09);
g.set_importance(75, 0);
g.set_importance(76, 0);
g.set_importance(77, 3.72);
g.set_importance(78, 0);
g.set_importance(79, 6.78);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 18), 3.17);
g.set_repair_time(Line(0, 26), 1.22);
g.set_repair_time(Line(0, 33), 3.49);
g.set_repair_time(Line(0, 39), 3.2);
g.set_repair_time(Line(0, 76), 4.95);
g.set_repair_time(Line(1, 38), 3.03);
g.set_repair_time(Line(1, 60), 4.56);
g.set_repair_time(Line(1, 62), 3.1);
g.set_repair_time(Line(2, 10), 3.57);
g.set_repair_time(Line(2, 71), 4.05);
g.set_repair_time(Line(2, 72), 1.17);
g.set_repair_time(Line(3, 5), 4.67);
g.set_repair_time(Line(3, 52), 2.91);
g.set_repair_time(Line(4, 14), 1.22);
g.set_repair_time(Line(4, 65), 1.93);
g.set_repair_time(Line(6, 34), 4.02);
g.set_repair_time(Line(7, 53), 2.39);
g.set_repair_time(Line(7, 75), 1.52);
g.set_repair_time(Line(8, 31), 3.47);
g.set_repair_time(Line(8, 43), 3.36);
g.set_repair_time(Line(8, 72), 1.5);
g.set_repair_time(Line(9, 21), 3.65);
g.set_repair_time(Line(9, 56), 4.65);
g.set_repair_time(Line(11, 18), 2.58);
g.set_repair_time(Line(11, 31), 4.19);
g.set_repair_time(Line(12, 70), 2.07);
g.set_repair_time(Line(13, 44), 3.13);
g.set_repair_time(Line(13, 59), 4.74);
g.set_repair_time(Line(15, 17), 4.61);
g.set_repair_time(Line(15, 23), 2.07);
g.set_repair_time(Line(16, 40), 4.65);
g.set_repair_time(Line(16, 71), 2.21);
g.set_repair_time(Line(17, 49), 1.99);
g.set_repair_time(Line(19, 68), 4.08);
g.set_repair_time(Line(20, 21), 4.64);
g.set_repair_time(Line(20, 26), 2.06);
g.set_repair_time(Line(20, 57), 3.78);
g.set_repair_time(Line(21, 67), 1.15);
g.set_repair_time(Line(22, 25), 2.62);
g.set_repair_time(Line(22, 32), 2.51);
g.set_repair_time(Line(22, 51), 4.19);
g.set_repair_time(Line(23, 54), 2.14);
g.set_repair_time(Line(23, 76), 4);
g.set_repair_time(Line(24, 56), 1.11);
g.set_repair_time(Line(25, 67), 2.1);
g.set_repair_time(Line(26, 66), 2.17);
g.set_repair_time(Line(27, 74), 2.1);
g.set_repair_time(Line(27, 79), 1.76);
g.set_repair_time(Line(28, 52), 3.1);
g.set_repair_time(Line(29, 33), 4.08);
g.set_repair_time(Line(29, 76), 3.07);
g.set_repair_time(Line(30, 42), 1.27);
g.set_repair_time(Line(30, 48), 1.01);
g.set_repair_time(Line(30, 60), 3);
g.set_repair_time(Line(31, 49), 2.7);
g.set_repair_time(Line(32, 71), 1.2);
g.set_repair_time(Line(33, 73), 1.7);
g.set_repair_time(Line(35, 45), 4.54);
g.set_repair_time(Line(35, 61), 2.89);
g.set_repair_time(Line(37, 38), 4.86);
g.set_repair_time(Line(37, 66), 1.71);
g.set_repair_time(Line(38, 52), 2.25);
g.set_repair_time(Line(38, 71), 1.04);
g.set_repair_time(Line(39, 65), 3.89);
g.set_repair_time(Line(39, 72), 2.44);
g.set_repair_time(Line(40, 46), 3.33);
g.set_repair_time(Line(41, 55), 1.1);
g.set_repair_time(Line(41, 56), 1.47);
g.set_repair_time(Line(41, 62), 3.8);
g.set_repair_time(Line(42, 54), 1.62);
g.set_repair_time(Line(43, 78), 2.41);
g.set_repair_time(Line(44, 58), 2.15);
g.set_repair_time(Line(46, 61), 1.24);
g.set_repair_time(Line(48, 77), 3.72);
g.set_repair_time(Line(50, 75), 4.76);
g.set_repair_time(Line(52, 57), 3.54);
g.set_repair_time(Line(52, 77), 3.57);
g.set_repair_time(Line(54, 62), 1.16);
g.set_repair_time(Line(54, 65), 4.69);
g.set_repair_time(Line(55, 75), 2.65);
g.set_repair_time(Line(63, 64), 4.87);
g.set_repair_time(Line(65, 78), 1.88);
g.set_repair_time(Line(72, 74), 3.98);
g.set_repair_time(Line(75, 76), 3.49);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 17.1104}, {2, 10.7008}, {3, 10.2028}, {4, 12.9979}, {5, 14.1557}, {6, 25.3544}, {7, 10.2639}, {8, 9.54302}, {9, 18.3965}, {10, 19.5396}, {11, 13.3458}, {12, 16.845}, {13, 33.9214}, {14, 14.05}, {15, 8.01777}, {16, 18.3246}, {17, 17.5375}, {18, 4.50694}, {19, 20.7896}, {20, 11.25}, {21, 13.0178}, {22, 17.8877}, {23, 6.25}, {24, 24.345}, {25, 19.2479}, {26, 7.5}, {27, 14.05}, {28, 27.6332}, {29, 9.25391}, {30, 13.5716}, {31, 12.3381}, {32, 11.5139}, {33, 3.95285}, {34, 31.6044}, {35, 22.5049}, {36, 14.7098}, {37, 15.5178}, {38, 19.8696}, {39, 3.95285}, {40, 18.5995}, {41, 15.8807}, {42, 6.84017}, {43, 12.3381}, {44, 28.4729}, {45, 17.5049}, {46, 16.8317}, {47, 15.9959}, {48, 16.3667}, {49, 17.492}, {50, 8.55202}, {51, 20.2273}, {52, 16.4528}, {53, 18.1696}, {54, 15.0888}, {55, 9.50694}, {56, 21.932}, {57, 20.2639}, {58, 23.1696}, {59, 30.1714}, {60, 21.4773}, {61, 24.8356}, {62, 16.9373}, {63, 27.3763}, {64, 15.5178}, {65, 9.54302}, {66, 9.26777}, {67, 12.9979}, {68, 25.7979}, {69, 13.4959}, {70, 21.845}, {71, 17.0746}, {72, 6.74793}, {73, 6.74793}, {74, 11.2549}, {75, 5.75694}, {76, 1.25}, {77, 21.6067}, {78, 10.793}, {79, 20.3196}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 17.1104}, {1, 0}, {2, 15.5426}, {3, 19.9125}, {4, 28.3569}, {5, 23.8653}, {6, 30.1963}, {7, 15.8604}, {8, 22.2906}, {9, 24.3574}, {10, 24.3815}, {11, 30.4562}, {12, 29.5926}, {13, 39.9818}, {14, 27.8638}, {15, 22.6282}, {16, 10.4189}, {17, 29.4078}, {18, 21.6173}, {19, 25.6315}, {20, 24.873}, {21, 26.6408}, {22, 21.7926}, {23, 20.8604}, {24, 27.8929}, {25, 29.3961}, {26, 21.123}, {27, 26.7975}, {28, 24.8428}, {29, 23.8643}, {30, 20.4057}, {31, 25.0857}, {32, 15.4189}, {33, 21.0632}, {34, 36.4463}, {35, 29.1434}, {36, 24.4194}, {37, 13.1052}, {38, 6.37377}, {39, 21.0632}, {40, 15.4189}, {41, 10.7441}, {42, 21.4506}, {43, 25.0857}, {44, 34.0694}, {45, 30.2524}, {46, 17.1866}, {47, 17.6122}, {48, 23.2008}, {49, 24.9009}, {50, 13.9754}, {51, 25.0692}, {52, 13.6625}, {53, 23.7661}, {54, 15.353}, {55, 7.60345}, {56, 20.8219}, {57, 23.4253}, {58, 28.7661}, {59, 40.2589}, {60, 12.5}, {61, 25.1905}, {62, 5.59017}, {63, 37.4638}, {64, 25.6052}, {65, 23.3569}, {66, 19.3552}, {67, 25.7455}, {68, 34.4703}, {69, 18.3377}, {70, 34.5926}, {71, 9.16886}, {72, 19.4955}, {73, 23.8583}, {74, 24.0024}, {75, 11.3535}, {76, 15.8604}, {77, 18.8163}, {78, 24.6069}, {79, 27.1536}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 10.7008}, {1, 15.5426}, {2, 0}, {3, 20.9036}, {4, 17.3381}, {5, 24.8565}, {6, 14.6536}, {7, 13.8738}, {8, 6.74793}, {9, 21.1916}, {10, 8.83883}, {11, 17.043}, {12, 14.05}, {13, 24.4392}, {14, 16.845}, {15, 18.7185}, {16, 7.62377}, {17, 17.0907}, {18, 15.2077}, {19, 10.0888}, {20, 20.3559}, {21, 18.5881}, {22, 13.2765}, {23, 16.9508}, {24, 21.55}, {25, 16.4528}, {26, 17.8198}, {27, 11.2549}, {28, 27.6379}, {29, 19.9547}, {30, 24.2724}, {31, 9.54302}, {32, 12.6238}, {33, 14.6536}, {34, 20.9036}, {35, 19.7098}, {36, 25.4106}, {37, 9.80202}, {38, 9.16886}, {39, 6.74793}, {40, 12.6238}, {41, 21.6401}, {42, 17.5409}, {43, 9.54302}, {44, 32.0828}, {45, 14.7098}, {46, 14.0366}, {47, 5.29508}, {48, 25.5155}, {49, 12.5838}, {50, 17.7777}, {51, 9.52654}, {52, 16.4575}, {53, 21.7795}, {54, 20.342}, {55, 20.2077}, {56, 24.7271}, {57, 26.2204}, {58, 26.7795}, {59, 28.1892}, {60, 28.0426}, {61, 22.0405}, {62, 21.1328}, {63, 30.9842}, {64, 22.302}, {65, 12.3381}, {66, 16.052}, {67, 10.2028}, {68, 18.9277}, {69, 2.79508}, {70, 19.05}, {71, 6.37377}, {72, 3.95285}, {73, 17.4487}, {74, 8.45979}, {75, 16.4577}, {76, 11.9508}, {77, 21.6114}, {78, 13.5881}, {79, 21.5626}, 