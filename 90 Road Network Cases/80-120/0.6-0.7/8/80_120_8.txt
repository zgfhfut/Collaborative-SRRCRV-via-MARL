node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 9, 12, 13, 14, 16, 18, 20, 21, 22, 24, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 68, 69, 71, 72, 76, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 28), Line(0, 42), Line(0, 47), Line(0, 52), Line(0, 73), Line(1, 7), Line(1, 34), Line(1, 41), Line(2, 13), Line(2, 57), Line(3, 18), Line(3, 23), Line(3, 30), Line(3, 78), Line(4, 41), Line(4, 76), Line(5, 11), Line(5, 12), Line(5, 69), Line(6, 35), Line(6, 46), Line(7, 23), Line(7, 70), Line(7, 71), Line(8, 14), Line(8, 64), Line(8, 66), Line(9, 17), Line(9, 28), Line(9, 65), Line(9, 77), Line(10, 12), Line(10, 15), Line(10, 17), Line(11, 78), Line(12, 59), Line(13, 32), Line(13, 36), Line(14, 31), Line(14, 34), Line(14, 58), Line(14, 68), Line(15, 31), Line(15, 58), Line(15, 72), Line(16, 43), Line(16, 77), Line(17, 55), Line(17, 72), Line(18, 53), Line(18, 75), Line(19, 63), Line(19, 74), Line(20, 44), Line(20, 49), Line(21, 47), Line(21, 61), Line(22, 24), Line(22, 61), Line(23, 39), Line(24, 75), Line(24, 76), Line(25, 27), Line(25, 45), Line(25, 68), Line(26, 31), Line(26, 60), Line(26, 69), Line(27, 37), Line(27, 64), Line(28, 48), Line(29, 45), Line(29, 54), Line(30, 50), Line(30, 74), Line(31, 38), Line(31, 55), Line(31, 56), Line(32, 34), Line(32, 52), Line(32, 53), Line(32, 79), Line(33, 44), Line(33, 53), Line(33, 66), Line(33, 67), Line(34, 45), Line(34, 47), Line(34, 74), Line(35, 62), Line(35, 75), Line(36, 40), Line(37, 48), Line(38, 58), Line(38, 71), Line(40, 71), Line(42, 65), Line(43, 51), Line(43, 67), Line(45, 60), Line(45, 64), Line(46, 52), Line(46, 57), Line(48, 52), Line(49, 70), Line(49, 76), Line(50, 56), Line(51, 62), Line(51, 64), Line(51, 67), Line(51, 75), Line(54, 79), Line(55, 77), Line(56, 62), Line(57, 75), Line(59, 79), Line(63, 78), Line(65, 73), Line(70, 78), Line(71, 72),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 28), Line(0, 47), Line(0, 52), Line(0, 73), Line(1, 34), Line(1, 41), Line(3, 18), Line(3, 23), Line(3, 30), Line(4, 41), Line(5, 11), Line(5, 69), Line(6, 35), Line(7, 23), Line(7, 70), Line(8, 14), Line(8, 66), Line(9, 17), Line(9, 28), Line(9, 65), Line(9, 77), Line(10, 12), Line(10, 15), Line(10, 17), Line(11, 78), Line(12, 59), Line(14, 31), Line(14, 34), Line(14, 68), Line(15, 31), Line(15, 72), Line(16, 43), Line(16, 77), Line(17, 55), Line(17, 72), Line(18, 53), Line(19, 63), Line(20, 44), Line(21, 47), Line(22, 24), Line(22, 61), Line(23, 39), Line(24, 75), Line(24, 76), Line(25, 27), Line(25, 68), Line(26, 31), Line(26, 60), Line(26, 69), Line(27, 37), Line(27, 64), Line(28, 48), Line(29, 45), Line(29, 54), Line(30, 50), Line(30, 74), Line(31, 38), Line(31, 55), Line(31, 56), Line(32, 34), Line(32, 52), Line(32, 53), Line(32, 79), Line(33, 53), Line(34, 47), Line(35, 62), Line(35, 75), Line(36, 40), Line(37, 48), Line(38, 58), Line(42, 65), Line(43, 51), Line(45, 60), Line(45, 64), Line(46, 52), Line(46, 57), Line(48, 52), Line(50, 56), Line(51, 62), Line(51, 64), Line(51, 75), Line(56, 62), Line(59, 79), Line(65, 73),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 28, 1.41421);
g.add_edge(0, 42, 8.06226);
g.add_edge(0, 47, 6.32456);
g.add_edge(0, 52, 1.41421);
g.add_edge(0, 73, 8.06226);
g.add_edge(1, 7, 5.38516);
g.add_edge(1, 34, 5.83095);
g.add_edge(1, 41, 5.38516);
g.add_edge(2, 13, 4);
g.add_edge(2, 57, 3.60555);
g.add_edge(3, 18, 9.21954);
g.add_edge(3, 23, 3.60555);
g.add_edge(3, 30, 5.83095);
g.add_edge(3, 78, 3);
g.add_edge(4, 41, 8.544);
g.add_edge(4, 76, 4.47214);
g.add_edge(5, 11, 5.38516);
g.add_edge(5, 12, 5.83095);
g.add_edge(5, 69, 5.09902);
g.add_edge(6, 35, 7.2111);
g.add_edge(6, 46, 9.43398);
g.add_edge(7, 23, 6.32456);
g.add_edge(7, 70, 4);
g.add_edge(7, 71, 8.06226);
g.add_edge(8, 14, 7.81025);
g.add_edge(8, 64, 3.16228);
g.add_edge(8, 66, 8.94427);
g.add_edge(9, 17, 3.16228);
g.add_edge(9, 28, 6.08276);
g.add_edge(9, 65, 7.28011);
g.add_edge(9, 77, 5.09902);
g.add_edge(10, 12, 6.40312);
g.add_edge(10, 15, 3);
g.add_edge(10, 17, 4.47214);
g.add_edge(11, 78, 5.09902);
g.add_edge(12, 59, 5);
g.add_edge(13, 32, 4.12311);
g.add_edge(13, 36, 4.12311);
g.add_edge(14, 31, 5);
g.add_edge(14, 34, 7.28011);
g.add_edge(14, 58, 6.32456);
g.add_edge(14, 68, 7.2111);
g.add_edge(15, 31, 8.60233);
g.add_edge(15, 58, 7.81025);
g.add_edge(15, 72, 5);
g.add_edge(16, 43, 4.12311);
g.add_edge(16, 77, 6.32456);
g.add_edge(17, 55, 3.60555);
g.add_edge(17, 72, 3.16228);
g.add_edge(18, 53, 8.24621);
g.add_edge(18, 75, 9.21954);
g.add_edge(19, 63, 5.38516);
g.add_edge(19, 74, 5);
g.add_edge(20, 44, 8);
g.add_edge(20, 49, 8);
g.add_edge(21, 47, 3);
g.add_edge(21, 61, 6.08276);
g.add_edge(22, 24, 3);
g.add_edge(22, 61, 7.07107);
g.add_edge(23, 39, 9.21954);
g.add_edge(24, 75, 7);
g.add_edge(24, 76, 7.81025);
g.add_edge(25, 27, 1);
g.add_edge(25, 45, 4.47214);
g.add_edge(25, 68, 7.28011);
g.add_edge(26, 31, 6.40312);
g.add_edge(26, 60, 1.41421);
g.add_edge(26, 69, 2.23607);
g.add_edge(27, 37, 2.23607);
g.add_edge(27, 64, 6.40312);
g.add_edge(28, 48, 4.47214);
g.add_edge(29, 45, 5.83095);
g.add_edge(29, 54, 6.40312);
g.add_edge(30, 50, 5.65685);
g.add_edge(30, 74, 7.2111);
g.add_edge(31, 38, 5.83095);
g.add_edge(31, 55, 2.82843);
g.add_edge(31, 56, 7.61577);
g.add_edge(32, 34, 3.60555);
g.add_edge(32, 52, 2.23607);
g.add_edge(32, 53, 4.47214);
g.add_edge(32, 79, 6.7082);
g.add_edge(33, 44, 6.08276);
g.add_edge(33, 53, 6.08276);
g.add_edge(33, 66, 6);
g.add_edge(33, 67, 3);
g.add_edge(34, 45, 5.09902);
g.add_edge(34, 47, 4);
g.add_edge(34, 74, 7.07107);
g.add_edge(35, 62, 3.60555);
g.add_edge(35, 75, 5.09902);
g.add_edge(36, 40, 4.47214);
g.add_edge(37, 48, 2);
g.add_edge(38, 58, 6.08276);
g.add_edge(38, 71, 6.32456);
g.add_edge(40, 71, 5);
g.add_edge(42, 65, 9.21954);
g.add_edge(43, 51, 2.23607);
g.add_edge(43, 67, 1);
g.add_edge(45, 60, 5);
g.add_edge(45, 64, 6.32456);
g.add_edge(46, 52, 6.7082);
g.add_edge(46, 57, 3.16228);
g.add_edge(48, 52, 4);
g.add_edge(49, 70, 7.2111);
g.add_edge(49, 76, 6.7082);
g.add_edge(50, 56, 5.83095);
g.add_edge(51, 62, 6);
g.add_edge(51, 64, 6.08276);
g.add_edge(51, 67, 2.82843);
g.add_edge(51, 75, 8.06226);
g.add_edge(54, 79, 6.08276);
g.add_edge(55, 77, 6.40312);
g.add_edge(56, 62, 3.60555);
g.add_edge(57, 75, 4.12311);
g.add_edge(59, 79, 7);
g.add_edge(63, 78, 3);
g.add_edge(65, 73, 8.06226);
g.add_edge(70, 78, 1.41421);
g.add_edge(71, 72, 5.38516);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 7.63);
g.set_importance(6, 7.27);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 2.06);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 6.17);
g.set_importance(13, 3.62);
g.set_importance(14, 7.67);
g.set_importance(15, 0);
g.set_importance(16, 9.84);
g.set_importance(17, 0);
g.set_importance(18, 9.93);
g.set_importance(19, 0);
g.set_importance(20, 6.39);
g.set_importance(21, 3.64);
g.set_importance(22, 2.9);
g.set_importance(23, 0);
g.set_importance(24, 3.95);
g.set_importance(25, 0);
g.set_importance(26, 7.73);
g.set_importance(27, 5.91);
g.set_importance(28, 5.6);
g.set_importance(29, 0);
g.set_importance(30, 4.04);
g.set_importance(31, 5.05);
g.set_importance(32, 9.19);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 6.08);
g.set_importance(36, 3.97);
g.set_importance(37, 3.23);
g.set_importance(38, 6.28);
g.set_importance(39, 4.24);
g.set_importance(40, 0);
g.set_importance(41, 4.18);
g.set_importance(42, 8.44);
g.set_importance(43, 5.23);
g.set_importance(44, 0);
g.set_importance(45, 3.9);
g.set_importance(46, 4.62);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 1.18);
g.set_importance(51, 1.67);
g.set_importance(52, 0);
g.set_importance(53, 7.91);
g.set_importance(54, 5.89);
g.set_importance(55, 5.25);
g.set_importance(56, 5.64);
g.set_importance(57, 7.44);
g.set_importance(58, 0);
g.set_importance(59, 0);
g.set_importance(60, 1.01);
g.set_importance(61, 7.99);
g.set_importance(62, 4.4);
g.set_importance(63, 0);
g.set_importance(64, 7.03);
g.set_importance(65, 1.25);
g.set_importance(66, 5.51);
g.set_importance(67, 0);
g.set_importance(68, 1.7);
g.set_importance(69, 8.8);
g.set_importance(70, 0);
g.set_importance(71, 4.81);
g.set_importance(72, 7.67);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 0);
g.set_importance(76, 3.08);
g.set_importance(77, 0);
g.set_importance(78, 6.98);
g.set_importance(79, 8.36);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 28), 2.66);
g.set_repair_time(Line(0, 47), 2.66);
g.set_repair_time(Line(0, 52), 3.02);
g.set_repair_time(Line(0, 73), 1.89);
g.set_repair_time(Line(1, 34), 2.1);
g.set_repair_time(Line(1, 41), 1.98);
g.set_repair_time(Line(3, 18), 4.82);
g.set_repair_time(Line(3, 23), 1.76);
g.set_repair_time(Line(3, 30), 3.94);
g.set_repair_time(Line(4, 41), 4.71);
g.set_repair_time(Line(5, 11), 2.22);
g.set_repair_time(Line(5, 69), 3.03);
g.set_repair_time(Line(6, 35), 4.82);
g.set_repair_time(Line(7, 23), 2.44);
g.set_repair_time(Line(7, 70), 3.14);
g.set_repair_time(Line(8, 14), 1.2);
g.set_repair_time(Line(8, 66), 3.25);
g.set_repair_time(Line(9, 17), 3.19);
g.set_repair_time(Line(9, 28), 3.57);
g.set_repair_time(Line(9, 65), 3.54);
g.set_repair_time(Line(9, 77), 1.44);
g.set_repair_time(Line(10, 12), 2.76);
g.set_repair_time(Line(10, 15), 4.91);
g.set_repair_time(Line(10, 17), 3.36);
g.set_repair_time(Line(11, 78), 2.6);
g.set_repair_time(Line(12, 59), 3.45);
g.set_repair_time(Line(14, 31), 3.66);
g.set_repair_time(Line(14, 34), 4.9);
g.set_repair_time(Line(14, 68), 1.58);
g.set_repair_time(Line(15, 31), 4.45);
g.set_repair_time(Line(15, 72), 4.33);
g.set_repair_time(Line(16, 43), 1.63);
g.set_repair_time(Line(16, 77), 4.39);
g.set_repair_time(Line(17, 55), 1.2);
g.set_repair_time(Line(17, 72), 1.08);
g.set_repair_time(Line(18, 53), 4.05);
g.set_repair_time(Line(19, 63), 1.14);
g.set_repair_time(Line(20, 44), 3.34);
g.set_repair_time(Line(21, 47), 2.47);
g.set_repair_time(Line(22, 24), 1.96);
g.set_repair_time(Line(22, 61), 4.83);
g.set_repair_time(Line(23, 39), 4.3);
g.set_repair_time(Line(24, 75), 2.61);
g.set_repair_time(Line(24, 76), 2.92);
g.set_repair_time(Line(25, 27), 4);
g.set_repair_time(Line(25, 68), 3.12);
g.set_repair_time(Line(26, 31), 2.52);
g.set_repair_time(Line(26, 60), 1.71);
g.set_repair_time(Line(26, 69), 1.63);
g.set_repair_time(Line(27, 37), 3.96);
g.set_repair_time(Line(27, 64), 2.21);
g.set_repair_time(Line(28, 48), 1.81);
g.set_repair_time(Line(29, 45), 2.8);
g.set_repair_time(Line(29, 54), 3.85);
g.set_repair_time(Line(30, 50), 2.13);
g.set_repair_time(Line(30, 74), 1.15);
g.set_repair_time(Line(31, 38), 1.94);
g.set_repair_time(Line(31, 55), 1.91);
g.set_repair_time(Line(31, 56), 4.48);
g.set_repair_time(Line(32, 34), 2.24);
g.set_repair_time(Line(32, 52), 2.32);
g.set_repair_time(Line(32, 53), 4.89);
g.set_repair_time(Line(32, 79), 1.63);
g.set_repair_time(Line(33, 53), 3.45);
g.set_repair_time(Line(34, 47), 1.67);
g.set_repair_time(Line(35, 62), 4.16);
g.set_repair_time(Line(35, 75), 4.32);
g.set_repair_time(Line(36, 40), 1.28);
g.set_repair_time(Line(37, 48), 1.82);
g.set_repair_time(Line(38, 58), 2.22);
g.set_repair_time(Line(42, 65), 4.61);
g.set_repair_time(Line(43, 51), 3.05);
g.set_repair_time(Line(45, 60), 3.37);
g.set_repair_time(Line(45, 64), 3.81);
g.set_repair_time(Line(46, 52), 2.62);
g.set_repair_time(Line(46, 57), 3.3);
g.set_repair_time(Line(48, 52), 4.5);
g.set_repair_time(Line(50, 56), 2.16);
g.set_repair_time(Line(51, 62), 4.16);
g.set_repair_time(Line(51, 64), 2.79);
g.set_repair_time(Line(51, 75), 2);
g.set_repair_time(Line(56, 62), 1.03);
g.set_repair_time(Line(59, 79), 4.91);
g.set_repair_time(Line(65, 73), 4.01);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 16.3585}, {2, 14.7167}, {3, 31.9852}, {4, 33.7699}, {5, 32.6302}, {6, 21.9455}, {7, 23.0899}, {8, 24.0196}, {9, 9.37122}, {10, 18.9142}, {11, 36.2315}, {12, 26.9181}, {13, 9.71673}, {14, 18.1699}, {15, 22.6642}, {16, 23.6507}, {17, 13.3241}, {18, 20.4608}, {19, 24.1586}, {20, 35.3599}, {21, 11.6557}, {22, 28.098}, {23, 30.9956}, {24, 28.0098}, {25, 13.3129}, {26, 23.4613}, {27, 12.0629}, {28, 1.76777}, {29, 22.7323}, {30, 26.9225}, {31, 21.3665}, {32, 4.56285}, {33, 17.7565}, {34, 9.06979}, {35, 25.6335}, {36, 14.8706}, {37, 9.26777}, {38, 28.6552}, {39, 42.5201}, {40, 20.4608}, {41, 23.0899}, {42, 10.0778}, {43, 22.7565}, {44, 25.3599}, {45, 15.4436}, {46, 10.153}, {47, 7.90569}, {48, 6.76777}, {49, 37.1038}, {50, 33.9936}, {51, 25.042}, {52, 1.76777}, {53, 10.153}, {54, 20.5516}, {55, 17.831}, {56, 30.8863}, {57, 14.1059}, {58, 26.0756}, {59, 21.6981}, {60, 21.6936}, {61, 19.2591}, {62, 30.1405}, {63, 30.8901}, {64, 20.0668}, {65, 18.4714}, {66, 25.2565}, {67, 21.5065}, {68, 22.413}, {69, 26.2564}, {70, 28.0899}, {71, 24.0084}, {72, 17.2769}, {73, 10.0778}, {74, 17.9086}, {75, 19.2598}, {76, 37.7726}, {77, 15.745}, {78, 29.8577}, {79, 12.9481}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 16.3585}, {1, 0}, {2, 21.9495}, {3, 17.2492}, {4, 17.4115}, {5, 26.6045}, {6, 34.7684}, {7, 6.73146}, {8, 25.521}, {9, 25.7297}, {10, 33.0838}, {11, 19.873}, {12, 33.8931}, {13, 16.9495}, {14, 16.3888}, {15, 29.7907}, {16, 35.1431}, {17, 27.4936}, {18, 27.6936}, {19, 22.3775}, {20, 30.7453}, {21, 16.0387}, {22, 32.481}, {23, 14.6372}, {24, 32.7644}, {25, 19.2526}, {26, 21.6802}, {27, 20.5026}, {28, 18.1262}, {29, 20.9512}, {30, 24.5379}, {31, 22.6388}, {32, 11.7956}, {33, 24.9893}, {34, 7.28869}, {35, 37.9841}, {36, 22.1034}, {37, 22.0907}, {38, 24.715}, {39, 26.1616}, {40, 23.0593}, {41, 6.73146}, {42, 26.4363}, {43, 29.9893}, {44, 32.5927}, {45, 13.6625}, {46, 22.976}, {47, 12.2887}, {48, 19.5907}, {49, 20.7453}, {50, 31.609}, {51, 29.1716}, {52, 14.5907}, {53, 17.3858}, {54, 27.7843}, {55, 26.1744}, {56, 32.1585}, {57, 26.4565}, {58, 24.2945}, {59, 28.9309}, {60, 19.9125}, {61, 23.6421}, {62, 36.6655}, {63, 17.2492}, {64, 21.5682}, {65, 34.8298}, {66, 32.4893}, {67, 28.7393}, {68, 25.4027}, {69, 24.4753}, {70, 11.7315}, {71, 16.8093}, {72, 23.5407}, {73, 26.4363}, {74, 16.1275}, {75, 31.6103}, {76, 23.0016}, {77, 32.1035}, {78, 13.4992}, {79, 20.1809}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 14.7167}, {1, 21.9495}, {2, 0}, {3, 32.7097}, {4, 33.7638}, {5, 38.2212}, {6, 20.2523}, {7, 28.681}, {8, 31.2949}, {9, 24.088}, {10, 33.631}, {11, 41.8225}, {12, 33.5391}, {13, 5}, {14, 23.761}, {15, 34.9755}, {16, 27.6876}, {17, 28.0408}, {18, 21.1853}, {19, 29.7497}, {20, 40.951}, {21, 23.4108}, {22, 22.1608}, {23, 36.5867}, {24, 18.4108}, {25, 24.4941}, {26, 29.0524}, {27, 23.2441}, {28, 16.4845}, {29, 28.3233}, {30, 32.5135}, {31, 30.011}, {32, 10.1539}, {33, 23.3475}, {34, 14.6608}, {35, 16.0346}, {36, 10.1539}, {37, 20.449}, {38, 29.8997}, {39, 48.1111}, {40, 15.7441}, {41, 28.681}, {42, 24.7946}, {43, 22.5337}, {44, 30.951}, {45, 21.0346}, {46, 8.45979}, {47, 19.6608}, {48, 17.949}, {49, 36.5589}, {50, 32.3372}, {51, 19.7386}, {52, 12.949}, {53, 15.7441}, {54, 26.1426}, {55, 32.5477}, {56, 25.0485}, {57, 4.50694}, {58, 31.6667}, {59, 27.2891}, {60, 27.2846}, {61, 30.9997}, {62, 20.5415}, {63, 36.4811}, {64, 27.3421}, {65, 33.1881}, {66, 30.8475}, {67, 23.2742}, {68, 32.7748}, {69, 31.8474}, {70, 33.681}, {71, 21.9941}, {72, 28.7255}, {73, 24.7946}, {74, 23.4997}, {75, 9.66082}, {76, 28.1736}, {77, 30.4617}, {78, 35.4487}, {79, 18.5391}, 