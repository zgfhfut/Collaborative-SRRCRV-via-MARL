node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 23, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 62, 63, 65, 67, 68, 71, 72, 73, 75, 77, 78,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 10), Line(0, 36), Line(0, 40), Line(0, 53), Line(1, 16), Line(1, 48), Line(1, 69), Line(2, 25), Line(2, 30), Line(2, 49), Line(3, 15), Line(3, 42), Line(3, 69), Line(4, 18), Line(4, 33), Line(4, 34), Line(4, 45), Line(4, 63), Line(5, 24), Line(5, 59), Line(5, 61), Line(6, 30), Line(6, 40), Line(6, 77), Line(7, 51), Line(7, 64), Line(7, 68), Line(8, 14), Line(8, 26), Line(9, 38), Line(9, 55), Line(10, 27), Line(10, 28), Line(10, 37), Line(10, 67), Line(11, 59), Line(11, 65), Line(12, 56), Line(12, 79), Line(13, 21), Line(13, 78), Line(14, 15), Line(14, 70), Line(16, 28), Line(16, 77), Line(17, 19), Line(17, 20), Line(17, 63), Line(17, 77), Line(18, 40), Line(18, 69), Line(18, 77), Line(19, 57), Line(19, 68), Line(20, 54), Line(21, 56), Line(22, 52), Line(22, 72), Line(22, 73), Line(23, 38), Line(23, 67), Line(23, 76), Line(24, 31), Line(24, 44), Line(24, 67), Line(25, 66), Line(26, 62), Line(27, 47), Line(27, 63), Line(27, 79), Line(28, 42), Line(28, 43), Line(29, 32), Line(29, 51), Line(30, 46), Line(31, 47), Line(31, 70), Line(32, 33), Line(32, 69), Line(34, 46), Line(34, 58), Line(34, 71), Line(35, 36), Line(35, 50), Line(35, 56), Line(37, 47), Line(37, 60), Line(38, 49), Line(39, 44), Line(39, 65), Line(41, 70), Line(41, 71), Line(42, 78), Line(43, 47), Line(43, 50), Line(44, 74), Line(45, 57), Line(46, 64), Line(47, 71), Line(48, 54), Line(48, 73), Line(51, 68), Line(51, 74), Line(52, 72), Line(52, 76), Line(54, 76), Line(55, 58), Line(56, 61), Line(57, 60), Line(59, 69), Line(60, 62), Line(61, 77), Line(62, 75), Line(63, 74), Line(64, 68), Line(64, 77), Line(66, 73), Line(70, 77), Line(72, 73), Line(75, 78),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 10), Line(0, 36), Line(1, 48), Line(2, 25), Line(2, 49), Line(4, 33), Line(4, 45), Line(5, 24), Line(5, 59), Line(5, 61), Line(6, 30), Line(6, 40), Line(7, 51), Line(7, 64), Line(7, 68), Line(8, 14), Line(8, 26), Line(9, 38), Line(9, 55), Line(10, 27), Line(10, 37), Line(10, 67), Line(11, 59), Line(11, 65), Line(12, 56), Line(13, 21), Line(13, 78), Line(14, 15), Line(16, 28), Line(16, 77), Line(17, 19), Line(17, 20), Line(17, 63), Line(17, 77), Line(18, 40), Line(18, 69), Line(19, 57), Line(19, 68), Line(21, 56), Line(22, 52), Line(23, 38), Line(23, 67), Line(23, 76), Line(24, 31), Line(24, 44), Line(24, 67), Line(26, 62), Line(27, 47), Line(27, 79), Line(28, 42), Line(29, 32), Line(31, 70), Line(32, 33), Line(34, 46), Line(34, 58), Line(35, 36), Line(35, 56), Line(37, 60), Line(41, 70), Line(41, 71), Line(42, 78), Line(43, 47), Line(43, 50), Line(45, 57), Line(46, 64), Line(48, 54), Line(48, 73), Line(51, 68), Line(51, 74), Line(52, 72), Line(52, 76), Line(54, 76), Line(55, 58), Line(56, 61), Line(59, 69), Line(60, 62), Line(61, 77), Line(62, 75), Line(63, 74), Line(64, 77), Line(66, 73), Line(70, 77), Line(72, 73), Line(75, 78),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 10, 4.12311);
g.add_edge(0, 36, 7.28011);
g.add_edge(0, 40, 2.82843);
g.add_edge(0, 53, 2.23607);
g.add_edge(1, 16, 7.28011);
g.add_edge(1, 48, 8.06226);
g.add_edge(1, 69, 4.12311);
g.add_edge(2, 25, 3.60555);
g.add_edge(2, 30, 7.81025);
g.add_edge(2, 49, 6.7082);
g.add_edge(3, 15, 8.06226);
g.add_edge(3, 42, 2.23607);
g.add_edge(3, 69, 3.16228);
g.add_edge(4, 18, 2.82843);
g.add_edge(4, 33, 4.24264);
g.add_edge(4, 34, 4);
g.add_edge(4, 45, 1.41421);
g.add_edge(4, 63, 9.21954);
g.add_edge(5, 24, 5.09902);
g.add_edge(5, 59, 6.7082);
g.add_edge(5, 61, 5.38516);
g.add_edge(6, 30, 5);
g.add_edge(6, 40, 4.12311);
g.add_edge(6, 77, 3);
g.add_edge(7, 51, 3);
g.add_edge(7, 64, 5.38516);
g.add_edge(7, 68, 5.38516);
g.add_edge(8, 14, 10.2956);
g.add_edge(8, 26, 9.21954);
g.add_edge(9, 38, 5);
g.add_edge(9, 55, 1.41421);
g.add_edge(10, 27, 2.23607);
g.add_edge(10, 28, 6.32456);
g.add_edge(10, 37, 3.60555);
g.add_edge(10, 67, 7.81025);
g.add_edge(11, 59, 7.28011);
g.add_edge(11, 65, 8);
g.add_edge(12, 56, 4.47214);
g.add_edge(12, 79, 6.7082);
g.add_edge(13, 21, 7);
g.add_edge(13, 78, 7.07107);
g.add_edge(14, 15, 3.16228);
g.add_edge(14, 70, 3.16228);
g.add_edge(16, 28, 2.82843);
g.add_edge(16, 77, 6.7082);
g.add_edge(17, 19, 3);
g.add_edge(17, 20, 8.94427);
g.add_edge(17, 63, 9.43398);
g.add_edge(17, 77, 8.24621);
g.add_edge(18, 40, 2);
g.add_edge(18, 69, 4.12311);
g.add_edge(18, 77, 5.65685);
g.add_edge(19, 57, 2);
g.add_edge(19, 68, 5);
g.add_edge(20, 54, 8);
g.add_edge(21, 56, 5.38516);
g.add_edge(22, 52, 6);
g.add_edge(22, 72, 8.06226);
g.add_edge(22, 73, 8.60233);
g.add_edge(23, 38, 2.23607);
g.add_edge(23, 67, 8.544);
g.add_edge(23, 76, 2.23607);
g.add_edge(24, 31, 3.16228);
g.add_edge(24, 44, 3);
g.add_edge(24, 67, 8.06226);
g.add_edge(25, 66, 6.7082);
g.add_edge(26, 62, 5.09902);
g.add_edge(27, 47, 8.544);
g.add_edge(27, 63, 5);
g.add_edge(27, 79, 1.41421);
g.add_edge(28, 42, 9.84886);
g.add_edge(28, 43, 7.2111);
g.add_edge(29, 32, 5.09902);
g.add_edge(29, 51, 2);
g.add_edge(30, 46, 4.12311);
g.add_edge(31, 47, 5.65685);
g.add_edge(31, 70, 2.23607);
g.add_edge(32, 33, 4.24264);
g.add_edge(32, 69, 5);
g.add_edge(34, 46, 3.60555);
g.add_edge(34, 58, 5.38516);
g.add_edge(34, 71, 7.07107);
g.add_edge(35, 36, 7.81025);
g.add_edge(35, 50, 2.82843);
g.add_edge(35, 56, 4.12311);
g.add_edge(37, 47, 10.8167);
g.add_edge(37, 60, 7.61577);
g.add_edge(38, 49, 3.16228);
g.add_edge(39, 44, 8.48528);
g.add_edge(39, 65, 7);
g.add_edge(41, 70, 8.48528);
g.add_edge(41, 71, 2.82843);
g.add_edge(42, 78, 7.28011);
g.add_edge(43, 47, 6.32456);
g.add_edge(43, 50, 5);
g.add_edge(44, 74, 3.60555);
g.add_edge(45, 57, 5);
g.add_edge(46, 64, 7.28011);
g.add_edge(47, 71, 7.28011);
g.add_edge(48, 54, 6.08276);
g.add_edge(48, 73, 7.61577);
g.add_edge(51, 68, 2.82843);
g.add_edge(51, 74, 2.23607);
g.add_edge(52, 72, 10.6301);
g.add_edge(52, 76, 3.60555);
g.add_edge(54, 76, 4.47214);
g.add_edge(55, 58, 6.32456);
g.add_edge(56, 61, 3.60555);
g.add_edge(57, 60, 1);
g.add_edge(59, 69, 5);
g.add_edge(60, 62, 4.12311);
g.add_edge(61, 77, 7.2111);
g.add_edge(62, 75, 5.09902);
g.add_edge(63, 74, 4);
g.add_edge(64, 68, 4);
g.add_edge(64, 77, 3.16228);
g.add_edge(66, 73, 2);
g.add_edge(70, 77, 7.07107);
g.add_edge(72, 73, 8.544);
g.add_edge(75, 78, 1.41421);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 9.29);
g.set_importance(6, 2.42);
g.set_importance(7, 4.03);
g.set_importance(8, 9.77);
g.set_importance(9, 6.62);
g.set_importance(10, 3.14);
g.set_importance(11, 6.83);
g.set_importance(12, 3.82);
g.set_importance(13, 0);
g.set_importance(14, 6.96);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 9.33);
g.set_importance(18, 5.38);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 1.11);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 9.12);
g.set_importance(29, 3.98);
g.set_importance(30, 2.52);
g.set_importance(31, 8.6);
g.set_importance(32, 9.41);
g.set_importance(33, 0);
g.set_importance(34, 4.87);
g.set_importance(35, 5.18);
g.set_importance(36, 2.01);
g.set_importance(37, 9.72);
g.set_importance(38, 6.2);
g.set_importance(39, 1.3);
g.set_importance(40, 0);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 6.33);
g.set_importance(44, 9.33);
g.set_importance(45, 1.08);
g.set_importance(46, 1.49);
g.set_importance(47, 5.17);
g.set_importance(48, 0);
g.set_importance(49, 6.13);
g.set_importance(50, 8.46);
g.set_importance(51, 8.37);
g.set_importance(52, 1.28);
g.set_importance(53, 6.83);
g.set_importance(54, 0);
g.set_importance(55, 5.06);
g.set_importance(56, 1.35);
g.set_importance(57, 0);
g.set_importance(58, 9.89);
g.set_importance(59, 6.68);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 3.38);
g.set_importance(63, 9.59);
g.set_importance(64, 0);
g.set_importance(65, 1.47);
g.set_importance(66, 0);
g.set_importance(67, 6.15);
g.set_importance(68, 1.04);
g.set_importance(69, 0);
g.set_importance(70, 0);
g.set_importance(71, 3.21);
g.set_importance(72, 3.19);
g.set_importance(73, 1.46);
g.set_importance(74, 0);
g.set_importance(75, 3.11);
g.set_importance(76, 0);
g.set_importance(77, 4.56);
g.set_importance(78, 3.5);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 10), 1.98);
g.set_repair_time(Line(0, 36), 3.21);
g.set_repair_time(Line(1, 48), 4.56);
g.set_repair_time(Line(2, 25), 3.12);
g.set_repair_time(Line(2, 49), 1.44);
g.set_repair_time(Line(4, 33), 3.5);
g.set_repair_time(Line(4, 45), 4.79);
g.set_repair_time(Line(5, 24), 2.16);
g.set_repair_time(Line(5, 59), 4.38);
g.set_repair_time(Line(5, 61), 1.43);
g.set_repair_time(Line(6, 30), 1.51);
g.set_repair_time(Line(6, 40), 1.04);
g.set_repair_time(Line(7, 51), 2.14);
g.set_repair_time(Line(7, 64), 4.64);
g.set_repair_time(Line(7, 68), 2.01);
g.set_repair_time(Line(8, 14), 1.84);
g.set_repair_time(Line(8, 26), 1.41);
g.set_repair_time(Line(9, 38), 1.13);
g.set_repair_time(Line(9, 55), 4.44);
g.set_repair_time(Line(10, 27), 4.87);
g.set_repair_time(Line(10, 37), 3.87);
g.set_repair_time(Line(10, 67), 3.58);
g.set_repair_time(Line(11, 59), 3.26);
g.set_repair_time(Line(11, 65), 2.58);
g.set_repair_time(Line(12, 56), 4.84);
g.set_repair_time(Line(13, 21), 4.77);
g.set_repair_time(Line(13, 78), 4.71);
g.set_repair_time(Line(14, 15), 4.12);
g.set_repair_time(Line(16, 28), 3.04);
g.set_repair_time(Line(16, 77), 3.3);
g.set_repair_time(Line(17, 19), 2.05);
g.set_repair_time(Line(17, 20), 3.05);
g.set_repair_time(Line(17, 63), 4.9);
g.set_repair_time(Line(17, 77), 3.49);
g.set_repair_time(Line(18, 40), 2.62);
g.set_repair_time(Line(18, 69), 4.33);
g.set_repair_time(Line(19, 57), 2.95);
g.set_repair_time(Line(19, 68), 2.05);
g.set_repair_time(Line(21, 56), 4.18);
g.set_repair_time(Line(22, 52), 1.88);
g.set_repair_time(Line(23, 38), 3.89);
g.set_repair_time(Line(23, 67), 3.92);
g.set_repair_time(Line(23, 76), 3.69);
g.set_repair_time(Line(24, 31), 2.63);
g.set_repair_time(Line(24, 44), 3.83);
g.set_repair_time(Line(24, 67), 2.46);
g.set_repair_time(Line(26, 62), 4.23);
g.set_repair_time(Line(27, 47), 3.8);
g.set_repair_time(Line(27, 79), 1.77);
g.set_repair_time(Line(28, 42), 3.81);
g.set_repair_time(Line(29, 32), 1.07);
g.set_repair_time(Line(31, 70), 3);
g.set_repair_time(Line(32, 33), 3.44);
g.set_repair_time(Line(34, 46), 4.57);
g.set_repair_time(Line(34, 58), 4.06);
g.set_repair_time(Line(35, 36), 3.81);
g.set_repair_time(Line(35, 56), 2.16);
g.set_repair_time(Line(37, 60), 3.74);
g.set_repair_time(Line(41, 70), 3.28);
g.set_repair_time(Line(41, 71), 1.71);
g.set_repair_time(Line(42, 78), 3.51);
g.set_repair_time(Line(43, 47), 2.37);
g.set_repair_time(Line(43, 50), 2.54);
g.set_repair_time(Line(45, 57), 2.71);
g.set_repair_time(Line(46, 64), 3.06);
g.set_repair_time(Line(48, 54), 1.05);
g.set_repair_time(Line(48, 73), 2.23);
g.set_repair_time(Line(51, 68), 2.66);
g.set_repair_time(Line(51, 74), 3.04);
g.set_repair_time(Line(52, 72), 2.78);
g.set_repair_time(Line(52, 76), 3.97);
g.set_repair_time(Line(54, 76), 3.67);
g.set_repair_time(Line(55, 58), 2.45);
g.set_repair_time(Line(56, 61), 3.11);
g.set_repair_time(Line(59, 69), 2.32);
g.set_repair_time(Line(60, 62), 1.02);
g.set_repair_time(Line(61, 77), 1.82);
g.set_repair_time(Line(62, 75), 4.58);
g.set_repair_time(Line(63, 74), 2.46);
g.set_repair_time(Line(64, 77), 3.55);
g.set_repair_time(Line(66, 73), 3.72);
g.set_repair_time(Line(70, 77), 4.15);
g.set_repair_time(Line(72, 73), 1.57);
g.set_repair_time(Line(75, 78), 3.95);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 16.3433}, {2, 24.7022}, {3, 15.1423}, {4, 9.57107}, {5, 25.8247}, {6, 8.68942}, {7, 23.1237}, {8, 38.1006}, {9, 30.976}, {10, 5.15388}, {11, 26.5396}, {12, 18.102}, {13, 35.8763}, {14, 25.2311}, {15, 25.2201}, {16, 16.5951}, {17, 22.7472}, {18, 6.03553}, {19, 20.0888}, {20, 33.9275}, {21, 30.4236}, {22, 40.3987}, {23, 25.5967}, {24, 24.9945}, {25, 29.2092}, {26, 30.3665}, {27, 7.94897}, {28, 13.0596}, {29, 23.8132}, {30, 14.9394}, {31, 24.0733}, {32, 17.4394}, {33, 14.8744}, {34, 14.5711}, {35, 18.8629}, {36, 9.10014}, {37, 9.66082}, {38, 28.3918}, {39, 34.3125}, {40, 3.53553}, {41, 26.9454}, {42, 17.9373}, {43, 22.0735}, {44, 23.7059}, {45, 11.3388}, {46, 19.078}, {47, 18.629}, {48, 26.4211}, {49, 32.3446}, {50, 22.3985}, {51, 21.9941}, {52, 32.8987}, {53, 2.79508}, {54, 33.982}, {55, 29.2082}, {56, 23.6922}, {57, 17.5888}, {58, 21.3025}, {59, 17.4394}, {60, 18.8388}, {61, 21.4533}, {62, 23.9927}, {63, 14.199}, {64, 16.3923}, {65, 36.5396}, {66, 37.5944}, {67, 14.9167}, {68, 21.3923}, {69, 11.1894}, {70, 21.2783}, {71, 23.4099}, {72, 46.1864}, {73, 35.9408}, {74, 19.199}, {75, 28.8053}, {76, 28.3918}, {77, 12.4394}, {78, 27.0375}, {79, 9.71673}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 16.3433}, {1, 0}, {2, 33.9745}, {3, 9.10673}, {4, 13.8433}, {5, 19.7891}, {6, 17.9616}, {7, 24.0277}, {8, 36.0069}, {9, 35.1116}, {10, 20.5414}, {11, 20.504}, {12, 33.4895}, {13, 29.8408}, {14, 23.1374}, {15, 19.1846}, {16, 9.10014}, {17, 27.6866}, {18, 10.3078}, {19, 24.3611}, {20, 27.6813}, {21, 37.6311}, {22, 30.3504}, {23, 26.0665}, {24, 26.1629}, {25, 30.4828}, {26, 34.6387}, {27, 23.3365}, {28, 12.6357}, {29, 17.7777}, {30, 24.2116}, {31, 29.0128}, {32, 11.4039}, {33, 16.7072}, {34, 18.8433}, {35, 31.4351}, {36, 25.4434}, {37, 25.0483}, {38, 28.8616}, {39, 38.1863}, {40, 12.8078}, {41, 31.2177}, {42, 11.9018}, {43, 21.6495}, {44, 27.5797}, {45, 15.6111}, {46, 23.3502}, {47, 29.5552}, {48, 10.0778}, {49, 32.8145}, {50, 27.8995}, {51, 20.2777}, {52, 27.7784}, {53, 19.1384}, {54, 17.6813}, {55, 33.4804}, {56, 30.8996}, {57, 21.8611}, {58, 25.5748}, {59, 11.4039}, {60, 23.1111}, {61, 26.3927}, {62, 28.2649}, {63, 25.3677}, {64, 21.3317}, {65, 30.504}, {66, 22.0975}, {67, 30.3042}, {68, 23.8132}, {69, 5.15388}, {70, 26.2177}, {71, 27.6821}, {72, 30.2775}, {73, 19.5975}, {74, 23.0727}, {75, 22.7697}, {76, 23.2714}, {77, 17.3788}, {78, 21.002}, {79, 25.1042}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 24.7022}, {1, 33.9745}, {2, 0}, {3, 32.7734}, {4, 24.4236}, {5, 35.5081}, {6, 16.0128}, {7, 30.4471}, {8, 45.424}, {9, 18.5881}, {10, 29.8561}, {11, 44.1707}, {12, 38.8738}, {13, 48.7651}, {14, 32.5545}, {15, 36.5073}, {16, 28.1481}, {17, 30.0706}, {18, 23.6667}, {19, 33.8206}, {20, 33.5184}, {21, 40.0151}, {22, 26.1451}, {23, 15.1332}, {24, 35.3496}, {25, 4.50694}, {26, 45.2191}, {27, 32.6512}, {28, 31.6836}, {29, 34.7512}, {30, 9.76281}, {31, 31.3967}, {32, 35.0302}, {33, 29.7269}, {34, 19.4236}, {35, 38.4375}, {36, 33.8024}, {37, 34.363}, {38, 12.3381}, {39, 49.7062}, {40, 21.1667}, {41, 31.798}, {42, 35.5685}, {43, 40.6975}, {44, 39.0996}, {45, 26.1914}, {46, 14.9167}, {47, 37.3626}, {48, 24.9119}, {49, 8.38525}, {50, 41.973}, {51, 32.2512}, {52, 22.4352}, {53, 27.4973}, {54, 23.5184}, {55, 20.3559}, {56, 33.2836}, {57, 32.4414}, {58, 26.1551}, {59, 35.0706}, {60, 33.6914}, {61, 28.7767}, {62, 38.8453}, {63, 35.9481}, {64, 23.7157}, {65, 54.1707}, {66, 12.8922}, {67, 25.8132}, {68, 28.7157}, {69, 28.8206}, {70, 28.6016}, {71, 28.2625}, {72, 26.0722}, {73, 15.3922}, {74, 35.0463}, {75, 45.2191}, {76, 17.9283}, {77, 19.7628}, {78, 44.6686}, {79, 34.419}, 