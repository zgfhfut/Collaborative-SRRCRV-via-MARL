node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 19, 22, 24, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 43, 44, 46, 47, 50, 51, 53, 55, 56, 58, 59, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 12), Line(0, 18), Line(0, 40), Line(0, 47), Line(0, 66), Line(1, 15), Line(1, 57), Line(1, 64), Line(2, 55), Line(3, 37), Line(3, 73), Line(4, 35), Line(4, 68), Line(4, 70), Line(5, 20), Line(5, 29), Line(5, 49), Line(5, 51), Line(5, 58), Line(6, 15), Line(6, 24), Line(6, 55), Line(6, 59), Line(7, 17), Line(7, 26), Line(7, 52), Line(8, 35), Line(8, 49), Line(8, 55), Line(8, 58), Line(8, 72), Line(9, 11), Line(9, 52), Line(9, 53), Line(10, 52), Line(10, 70), Line(11, 29), Line(11, 69), Line(11, 75), Line(12, 24), Line(12, 61), Line(12, 67), Line(13, 25), Line(13, 30), Line(13, 65), Line(13, 79), Line(14, 40), Line(14, 66), Line(15, 16), Line(16, 56), Line(16, 76), Line(17, 48), Line(17, 65), Line(18, 46), Line(18, 58), Line(18, 66), Line(19, 41), Line(19, 57), Line(19, 78), Line(20, 63), Line(21, 25), Line(21, 79), Line(22, 49), Line(22, 77), Line(23, 28), Line(23, 68), Line(25, 32), Line(26, 30), Line(26, 61), Line(27, 43), Line(27, 57), Line(27, 67), Line(28, 29), Line(28, 40), Line(28, 54), Line(29, 71), Line(30, 75), Line(31, 56), Line(31, 73), Line(32, 39), Line(32, 44), Line(33, 65), Line(33, 69), Line(34, 38), Line(34, 50), Line(35, 41), Line(35, 63), Line(36, 43), Line(36, 55), Line(36, 71), Line(36, 76), Line(36, 79), Line(37, 45), Line(37, 72), Line(38, 59), Line(39, 62), Line(40, 69), Line(42, 44), Line(42, 51), Line(42, 62), Line(42, 71), Line(43, 59), Line(44, 46), Line(44, 75), Line(45, 60), Line(45, 68), Line(46, 61), Line(47, 62), Line(48, 79), Line(50, 55), Line(50, 63), Line(52, 67), Line(53, 55), Line(54, 74), Line(54, 77), Line(57, 65), Line(58, 74), Line(60, 78), Line(64, 66), Line(74, 78),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 47), Line(0, 66), Line(1, 57), Line(1, 64), Line(2, 55), Line(3, 37), Line(3, 73), Line(4, 68), Line(4, 70), Line(5, 20), Line(5, 49), Line(5, 58), Line(6, 15), Line(6, 24), Line(6, 55), Line(6, 59), Line(7, 17), Line(7, 26), Line(7, 52), Line(8, 58), Line(8, 72), Line(10, 52), Line(10, 70), Line(11, 29), Line(11, 69), Line(11, 75), Line(12, 24), Line(12, 61), Line(13, 25), Line(13, 30), Line(13, 65), Line(13, 79), Line(14, 66), Line(16, 76), Line(17, 65), Line(18, 46), Line(18, 58), Line(18, 66), Line(19, 41), Line(19, 57), Line(19, 78), Line(20, 63), Line(21, 25), Line(21, 79), Line(23, 68), Line(26, 30), Line(26, 61), Line(27, 43), Line(27, 67), Line(28, 29), Line(28, 40), Line(28, 54), Line(29, 71), Line(30, 75), Line(31, 56), Line(31, 73), Line(32, 44), Line(33, 65), Line(33, 69), Line(34, 38), Line(35, 41), Line(35, 63), Line(36, 43), Line(36, 55), Line(36, 76), Line(36, 79), Line(37, 45), Line(37, 72), Line(38, 59), Line(40, 69), Line(42, 44), Line(42, 71), Line(43, 59), Line(44, 46), Line(44, 75), Line(45, 60), Line(46, 61), Line(50, 55), Line(52, 67), Line(54, 77), Line(57, 65), Line(60, 78), Line(64, 66), Line(74, 78),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 12, 6.08276);
g.add_edge(0, 18, 1);
g.add_edge(0, 40, 5.09902);
g.add_edge(0, 47, 6.7082);
g.add_edge(0, 66, 10.8167);
g.add_edge(1, 15, 2.82843);
g.add_edge(1, 57, 4.12311);
g.add_edge(1, 64, 1.41421);
g.add_edge(2, 55, 5.83095);
g.add_edge(3, 37, 1);
g.add_edge(3, 73, 8.06226);
g.add_edge(4, 35, 8.48528);
g.add_edge(4, 68, 5.83095);
g.add_edge(4, 70, 6.7082);
g.add_edge(5, 20, 6.40312);
g.add_edge(5, 29, 1);
g.add_edge(5, 49, 2.23607);
g.add_edge(5, 51, 1);
g.add_edge(5, 58, 5.65685);
g.add_edge(6, 15, 5.09902);
g.add_edge(6, 24, 3.16228);
g.add_edge(6, 55, 3);
g.add_edge(6, 59, 6.7082);
g.add_edge(7, 17, 3.60555);
g.add_edge(7, 26, 1);
g.add_edge(7, 52, 6.7082);
g.add_edge(8, 35, 12.0416);
g.add_edge(8, 49, 5.65685);
g.add_edge(8, 55, 8.06226);
g.add_edge(8, 58, 10.8167);
g.add_edge(8, 72, 5);
g.add_edge(9, 11, 3);
g.add_edge(9, 52, 1);
g.add_edge(9, 53, 5.65685);
g.add_edge(10, 52, 2);
g.add_edge(10, 70, 8.06226);
g.add_edge(11, 29, 6.7082);
g.add_edge(11, 69, 7.07107);
g.add_edge(11, 75, 7.07107);
g.add_edge(12, 24, 8.94427);
g.add_edge(12, 61, 9.05539);
g.add_edge(12, 67, 6.08276);
g.add_edge(13, 25, 4.47214);
g.add_edge(13, 30, 7);
g.add_edge(13, 65, 1.41421);
g.add_edge(13, 79, 3.60555);
g.add_edge(14, 40, 7.07107);
g.add_edge(14, 66, 12.0416);
g.add_edge(15, 16, 7.07107);
g.add_edge(16, 56, 3.60555);
g.add_edge(16, 76, 2);
g.add_edge(17, 48, 5.38516);
g.add_edge(17, 65, 6);
g.add_edge(18, 46, 7.07107);
g.add_edge(18, 58, 5);
g.add_edge(18, 66, 11.4018);
g.add_edge(19, 41, 6.08276);
g.add_edge(19, 57, 9.21954);
g.add_edge(19, 78, 3.60555);
g.add_edge(20, 63, 9.48683);
g.add_edge(21, 25, 8.06226);
g.add_edge(21, 79, 4.47214);
g.add_edge(22, 49, 2.23607);
g.add_edge(22, 77, 2.23607);
g.add_edge(23, 28, 9.43398);
g.add_edge(23, 68, 7.61577);
g.add_edge(25, 32, 8.06226);
g.add_edge(26, 30, 6.40312);
g.add_edge(26, 61, 8.06226);
g.add_edge(27, 43, 9.84886);
g.add_edge(27, 57, 9.05539);
g.add_edge(27, 67, 5.83095);
g.add_edge(28, 29, 2.82843);
g.add_edge(28, 40, 7.28011);
g.add_edge(28, 54, 6.40312);
g.add_edge(29, 71, 5.65685);
g.add_edge(30, 75, 7.28011);
g.add_edge(31, 56, 5.38516);
g.add_edge(31, 73, 7);
g.add_edge(32, 39, 6.7082);
g.add_edge(32, 44, 2.23607);
g.add_edge(33, 65, 7.81025);
g.add_edge(33, 69, 9.21954);
g.add_edge(34, 38, 7);
g.add_edge(34, 50, 8.94427);
g.add_edge(35, 41, 4.24264);
g.add_edge(35, 63, 5);
g.add_edge(36, 43, 7.81025);
g.add_edge(36, 55, 5.83095);
g.add_edge(36, 71, 8.06226);
g.add_edge(36, 76, 5.38516);
g.add_edge(36, 79, 6.08276);
g.add_edge(37, 45, 7.07107);
g.add_edge(37, 72, 4.24264);
g.add_edge(38, 59, 6.40312);
g.add_edge(39, 62, 4.24264);
g.add_edge(40, 69, 8);
g.add_edge(42, 44, 8.48528);
g.add_edge(42, 51, 5.38516);
g.add_edge(42, 62, 4.47214);
g.add_edge(42, 71, 9.43398);
g.add_edge(43, 59, 4.12311);
g.add_edge(44, 46, 6.40312);
g.add_edge(44, 75, 6);
g.add_edge(45, 60, 1.41421);
g.add_edge(45, 68, 7.07107);
g.add_edge(46, 61, 5.83095);
g.add_edge(47, 62, 4.12311);
g.add_edge(48, 79, 6.32456);
g.add_edge(50, 55, 8.24621);
g.add_edge(50, 63, 5);
g.add_edge(52, 67, 4);
g.add_edge(53, 55, 6.08276);
g.add_edge(54, 74, 4.24264);
g.add_edge(54, 77, 1);
g.add_edge(57, 65, 8);
g.add_edge(58, 74, 4.47214);
g.add_edge(60, 78, 4.47214);
g.add_edge(64, 66, 5.83095);
g.add_edge(74, 78, 7.61577);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 7.8);
g.set_importance(6, 3.6);
g.set_importance(7, 5.2);
g.set_importance(8, 1.87);
g.set_importance(9, 0);
g.set_importance(10, 5.33);
g.set_importance(11, 5.02);
g.set_importance(12, 9.97);
g.set_importance(13, 0);
g.set_importance(14, 5.72);
g.set_importance(15, 8.88);
g.set_importance(16, 5.97);
g.set_importance(17, 7.02);
g.set_importance(18, 0);
g.set_importance(19, 9.39);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 2.51);
g.set_importance(23, 0);
g.set_importance(24, 9.97);
g.set_importance(25, 0);
g.set_importance(26, 6.2);
g.set_importance(27, 7.76);
g.set_importance(28, 0);
g.set_importance(29, 9.92);
g.set_importance(30, 3.63);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 5.39);
g.set_importance(34, 3.47);
g.set_importance(35, 3.15);
g.set_importance(36, 8.49);
g.set_importance(37, 3.73);
g.set_importance(38, 8.91);
g.set_importance(39, 0);
g.set_importance(40, 1.02);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 5.64);
g.set_importance(44, 9.18);
g.set_importance(45, 0);
g.set_importance(46, 5.62);
g.set_importance(47, 8.72);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 6.74);
g.set_importance(51, 3.9);
g.set_importance(52, 0);
g.set_importance(53, 1.95);
g.set_importance(54, 0);
g.set_importance(55, 9.47);
g.set_importance(56, 5.38);
g.set_importance(57, 0);
g.set_importance(58, 7.97);
g.set_importance(59, 9.38);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 0);
g.set_importance(63, 2.36);
g.set_importance(64, 9.82);
g.set_importance(65, 8.77);
g.set_importance(66, 0);
g.set_importance(67, 8.82);
g.set_importance(68, 5.64);
g.set_importance(69, 1.47);
g.set_importance(70, 0);
g.set_importance(71, 0);
g.set_importance(72, 0);
g.set_importance(73, 7.56);
g.set_importance(74, 3.36);
g.set_importance(75, 5.27);
g.set_importance(76, 2.1);
g.set_importance(77, 6.42);
g.set_importance(78, 0);
g.set_importance(79, 9.12);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 47), 1.9);
g.set_repair_time(Line(0, 66), 3.1);
g.set_repair_time(Line(1, 57), 4.9);
g.set_repair_time(Line(1, 64), 4.42);
g.set_repair_time(Line(2, 55), 2.1);
g.set_repair_time(Line(3, 37), 1.14);
g.set_repair_time(Line(3, 73), 3.73);
g.set_repair_time(Line(4, 68), 3.78);
g.set_repair_time(Line(4, 70), 2.44);
g.set_repair_time(Line(5, 20), 4.23);
g.set_repair_time(Line(5, 49), 4.19);
g.set_repair_time(Line(5, 58), 3.69);
g.set_repair_time(Line(6, 15), 2.26);
g.set_repair_time(Line(6, 24), 2.45);
g.set_repair_time(Line(6, 55), 1.13);
g.set_repair_time(Line(6, 59), 3.36);
g.set_repair_time(Line(7, 17), 3.12);
g.set_repair_time(Line(7, 26), 1.61);
g.set_repair_time(Line(7, 52), 4.44);
g.set_repair_time(Line(8, 58), 3.76);
g.set_repair_time(Line(8, 72), 2.78);
g.set_repair_time(Line(10, 52), 4.57);
g.set_repair_time(Line(10, 70), 2.96);
g.set_repair_time(Line(11, 29), 1.48);
g.set_repair_time(Line(11, 69), 3.82);
g.set_repair_time(Line(11, 75), 2.02);
g.set_repair_time(Line(12, 24), 1.73);
g.set_repair_time(Line(12, 61), 2.43);
g.set_repair_time(Line(13, 25), 3.98);
g.set_repair_time(Line(13, 30), 1.44);
g.set_repair_time(Line(13, 65), 1.95);
g.set_repair_time(Line(13, 79), 4.62);
g.set_repair_time(Line(14, 66), 4.34);
g.set_repair_time(Line(16, 76), 4.19);
g.set_repair_time(Line(17, 65), 4.85);
g.set_repair_time(Line(18, 46), 2.15);
g.set_repair_time(Line(18, 58), 2.44);
g.set_repair_time(Line(18, 66), 3.89);
g.set_repair_time(Line(19, 41), 4.24);
g.set_repair_time(Line(19, 57), 4.17);
g.set_repair_time(Line(19, 78), 2.49);
g.set_repair_time(Line(20, 63), 1.47);
g.set_repair_time(Line(21, 25), 4.53);
g.set_repair_time(Line(21, 79), 4.11);
g.set_repair_time(Line(23, 68), 1.98);
g.set_repair_time(Line(26, 30), 3.22);
g.set_repair_time(Line(26, 61), 3.56);
g.set_repair_time(Line(27, 43), 4.03);
g.set_repair_time(Line(27, 67), 3.2);
g.set_repair_time(Line(28, 29), 3.86);
g.set_repair_time(Line(28, 40), 2.99);
g.set_repair_time(Line(28, 54), 4.04);
g.set_repair_time(Line(29, 71), 4.06);
g.set_repair_time(Line(30, 75), 4.3);
g.set_repair_time(Line(31, 56), 2.58);
g.set_repair_time(Line(31, 73), 1.78);
g.set_repair_time(Line(32, 44), 4.16);
g.set_repair_time(Line(33, 65), 3.36);
g.set_repair_time(Line(33, 69), 2.5);
g.set_repair_time(Line(34, 38), 2.44);
g.set_repair_time(Line(35, 41), 4.86);
g.set_repair_time(Line(35, 63), 4.24);
g.set_repair_time(Line(36, 43), 5);
g.set_repair_time(Line(36, 55), 3.86);
g.set_repair_time(Line(36, 76), 3.36);
g.set_repair_time(Line(36, 79), 3.24);
g.set_repair_time(Line(37, 45), 2.07);
g.set_repair_time(Line(37, 72), 4.41);
g.set_repair_time(Line(38, 59), 4.24);
g.set_repair_time(Line(40, 69), 2.52);
g.set_repair_time(Line(42, 44), 3.82);
g.set_repair_time(Line(42, 71), 4.71);
g.set_repair_time(Line(43, 59), 2.58);
g.set_repair_time(Line(44, 46), 1.19);
g.set_repair_time(Line(44, 75), 3.06);
g.set_repair_time(Line(45, 60), 4.65);
g.set_repair_time(Line(46, 61), 1.67);
g.set_repair_time(Line(50, 55), 1.37);
g.set_repair_time(Line(52, 67), 4.52);
g.set_repair_time(Line(54, 77), 2.24);
g.set_repair_time(Line(57, 65), 1.54);
g.set_repair_time(Line(60, 78), 4.22);
g.set_repair_time(Line(64, 66), 3.67);
g.set_repair_time(Line(74, 78), 3.56);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 22.5773}, {2, 33.7753}, {3, 33.8241}, {4, 41.17}, {5, 14.5711}, {6, 22.7366}, {7, 28.5922}, {8, 21.0208}, {9, 21.4569}, {10, 22.7069}, {11, 24.2063}, {12, 7.60345}, {13, 36.5558}, {14, 15.2126}, {15, 26.1128}, {16, 34.9516}, {17, 33.0991}, {18, 1.25}, {19, 27.1168}, {20, 22.575}, {21, 41.0435}, {22, 20.1612}, {23, 27.2664}, {24, 18.7838}, {25, 30.9656}, {26, 27.4553}, {27, 22.4956}, {28, 15.4739}, {29, 15.8211}, {30, 34.6929}, {31, 46.19}, {32, 20.8878}, {33, 27.8982}, {34, 47.8758}, {35, 36.0728}, {36, 32.97}, {37, 32.5741}, {38, 39.1258}, {39, 18.8424}, {40, 6.37377}, {41, 34.7203}, {42, 19.1293}, {43, 34.8067}, {44, 18.0927}, {45, 29.9678}, {46, 10.0888}, {47, 8.38525}, {48, 39.8306}, {49, 17.3662}, {50, 36.7944}, {51, 15.8211}, {52, 20.2069}, {53, 28.528}, {54, 18.3935}, {55, 26.4866}, {56, 39.4586}, {57, 27.7312}, {58, 7.5}, {59, 31.1219}, {60, 28.2001}, {61, 17.3775}, {62, 13.5391}, {63, 34.4335}, {64, 20.8095}, {65, 37.661}, {66, 13.5208}, {67, 15.2069}, {68, 36.7861}, {69, 16.3738}, {70, 32.7847}, {71, 22.8921}, {72, 27.2708}, {73, 43.9019}, {74, 13.0902}, {75, 25.5927}, {76, 37.4516}, {77, 19.6435}, {78, 22.6099}, {79, 40.5734}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 22.5773}, {1, 0}, {2, 20.948}, {3, 36.5404}, {4, 40.1917}, {5, 33.6033}, {6, 9.90931}, {7, 27.1608}, {8, 23.7371}, {9, 28.3338}, {10, 31.2618}, {11, 32.0838}, {12, 25.0425}, {13, 16.9216}, {14, 24.1085}, {15, 3.53553}, {16, 12.3744}, {17, 22.6539}, {18, 23.3086}, {19, 16.6783}, {20, 41.6072}, {21, 27.0188}, {22, 33.6033}, {23, 46.9017}, {24, 13.8622}, {25, 22.5118}, {26, 28.4108}, {27, 16.4731}, {28, 38.0512}, {29, 34.8533}, {30, 25.6716}, {31, 23.6128}, {32, 32.5896}, {33, 24.9167}, {34, 35.0485}, {35, 29.5851}, {36, 20.948}, {37, 35.2904}, {38, 26.2985}, {39, 40.9749}, {40, 28.951}, {41, 24.2818}, {42, 41.5847}, {43, 23.4484}, {44, 35.3847}, {45, 28.5432}, {46, 32.1475}, {47, 30.9625}, {48, 29.3343}, {49, 30.8082}, {50, 23.9671}, {51, 34.8533}, {52, 28.7618}, {53, 21.2628}, {54, 36.0083}, {55, 13.6593}, {56, 16.8813}, {57, 5.15388}, {58, 29.5586}, {59, 18.2946}, {60, 26.7754}, {61, 36.3617}, {62, 36.1164}, {63, 30.2171}, {64, 1.76777}, {65, 15.1539}, {66, 9.05646}, {67, 23.7618}, {68, 37.382}, {69, 36.4411}, {70, 41.3396}, {71, 31.0258}, {72, 29.9871}, {73, 32.3628}, {74, 30.705}, {75, 34.7718}, {76, 14.8744}, {77, 36.3984}, {78, 21.1853}, {79, 21.4286}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 33.7753}, {1, 20.948}, {2, 0}, {3, 30.1698}, {4, 40.7031}, {5, 27.2327}, {6, 11.0387}, {7, 31.5985}, {8, 17.3665}, {9, 21.9632}, {10, 25.7132}, {11, 25.7132}, {12, 26.1719}, {13, 26.6878}, {14, 45.0564}, {15, 17.4125}, {16, 23.8088}, {17, 35.9555}, {18, 35.0253}, {19, 37.6263}, {20, 35.2366}, {21, 27.771}, {22, 27.2327}, {23, 43.8107}, {24, 14.9915}, {25, 32.2779}, {26, 32.8485}, {27, 35.5019}, {28, 32.0182}, {29, 28.4827}, {30, 35.4378}, {31, 35.0472}, {32, 42.3558}, {33, 38.2184}, {34, 28.7768}, {35, 30.0965}, {36, 14.5774}, {37, 28.9198}, {38, 27.4279}, {39, 46.1076}, {40, 40.1491}, {41, 35.3998}, {42, 35.2141}, {43, 24.3402}, {44, 42.052}, {45, 37.7586}, {46, 43.8642}, {47, 42.1606}, {48, 30.0865}, {49, 24.4376}, {50, 17.5965}, {51, 28.4827}, {52, 23.2132}, {53, 14.8921}, {54, 31.2777}, {55, 7.28869}, {56, 28.3158}, {57, 26.1019}, {58, 30.8873}, {59, 19.4239}, {60, 39.5264}, {61, 37.4911}, {62, 40.8043}, {63, 23.8465}, {64, 22.7158}, {65, 28.4555}, {66, 30.0045}, {67, 28.2132}, {68, 46.5975}, {69, 34.552}, {70, 35.791}, {71, 24.6552}, {72, 23.6165}, {73, 40.2476}, {74, 36.4775}, {75, 34.552}, {76, 21.3088}, {77, 30.0277}, {78, 42.1332}, {79, 22.1808}, 