node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 8, 9, 10, 12, 13, 14, 16, 17, 20, 21, 23, 25, 27, 30, 32, 34, 36, 37, 39, 40, 41, 43, 44, 46, 48, 49, 50, 51, 53, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 13), Line(0, 22), Line(0, 23), Line(0, 31), Line(1, 10), Line(1, 26), Line(1, 65), Line(2, 45), Line(2, 77), Line(3, 15), Line(3, 40), Line(4, 19), Line(4, 37), Line(4, 71), Line(5, 16), Line(5, 67), Line(6, 42), Line(6, 70), Line(7, 20), Line(7, 64), Line(8, 18), Line(8, 26), Line(8, 49), Line(8, 78), Line(9, 11), Line(9, 39), Line(10, 59), Line(11, 32), Line(11, 64), Line(11, 70), Line(12, 21), Line(12, 24), Line(12, 63), Line(13, 57), Line(13, 79), Line(14, 17), Line(14, 21), Line(14, 58), Line(15, 19), Line(15, 38), Line(15, 64), Line(16, 56), Line(16, 75), Line(16, 76), Line(17, 21), Line(17, 39), Line(18, 27), Line(18, 53), Line(19, 34), Line(19, 36), Line(20, 36), Line(20, 43), Line(21, 72), Line(22, 65), Line(23, 53), Line(24, 46), Line(24, 62), Line(24, 64), Line(25, 27), Line(25, 71), Line(25, 76), Line(27, 50), Line(28, 34), Line(28, 47), Line(28, 57), Line(29, 35), Line(29, 49), Line(30, 51), Line(30, 74), Line(31, 55), Line(31, 70), Line(32, 34), Line(32, 57), Line(32, 67), Line(33, 48), Line(33, 51), Line(33, 62), Line(34, 50), Line(35, 42), Line(35, 49), Line(36, 37), Line(36, 44), Line(36, 72), Line(37, 66), Line(37, 72), Line(38, 75), Line(40, 56), Line(40, 61), Line(41, 47), Line(41, 58), Line(41, 60), Line(41, 73), Line(43, 76), Line(44, 68), Line(44, 78), Line(45, 48), Line(45, 50), Line(45, 55), Line(46, 52), Line(47, 60), Line(47, 71), Line(47, 76), Line(48, 69), Line(48, 78), Line(50, 59), Line(51, 58), Line(51, 63), Line(52, 55), Line(52, 66), Line(54, 68), Line(54, 73), Line(55, 78), Line(56, 61), Line(58, 63), Line(61, 65), Line(61, 68), Line(65, 77), Line(69, 70), Line(69, 74), Line(74, 79),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 22), Line(0, 23), Line(1, 26), Line(2, 45), Line(3, 40), Line(4, 37), Line(4, 71), Line(5, 67), Line(6, 70), Line(7, 20), Line(7, 64), Line(8, 18), Line(8, 78), Line(9, 11), Line(9, 39), Line(10, 59), Line(11, 32), Line(11, 64), Line(11, 70), Line(12, 21), Line(12, 24), Line(12, 63), Line(13, 57), Line(13, 79), Line(14, 17), Line(14, 21), Line(15, 19), Line(15, 38), Line(15, 64), Line(16, 56), Line(17, 21), Line(17, 39), Line(18, 27), Line(18, 53), Line(19, 34), Line(19, 36), Line(22, 65), Line(23, 53), Line(24, 62), Line(24, 64), Line(25, 27), Line(25, 71), Line(25, 76), Line(28, 47), Line(28, 57), Line(29, 49), Line(30, 51), Line(30, 74), Line(31, 55), Line(31, 70), Line(32, 34), Line(32, 57), Line(32, 67), Line(33, 48), Line(33, 51), Line(33, 62), Line(34, 50), Line(36, 44), Line(37, 72), Line(40, 56), Line(40, 61), Line(41, 47), Line(41, 60), Line(41, 73), Line(43, 76), Line(44, 68), Line(44, 78), Line(45, 48), Line(45, 50), Line(45, 55), Line(47, 60), Line(47, 71), Line(48, 69), Line(48, 78), Line(50, 59), Line(51, 63), Line(52, 55), Line(54, 68), Line(54, 73), Line(55, 78), Line(56, 61), Line(61, 65), Line(65, 77), Line(69, 74),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 13, 7.61577);
g.add_edge(0, 22, 7.28011);
g.add_edge(0, 23, 6);
g.add_edge(0, 31, 7.61577);
g.add_edge(1, 10, 3.16228);
g.add_edge(1, 26, 2);
g.add_edge(1, 65, 7.61577);
g.add_edge(2, 45, 3.60555);
g.add_edge(2, 77, 4.47214);
g.add_edge(3, 15, 5.09902);
g.add_edge(3, 40, 7.07107);
g.add_edge(4, 19, 7.2111);
g.add_edge(4, 37, 3.60555);
g.add_edge(4, 71, 7.81025);
g.add_edge(5, 16, 3.16228);
g.add_edge(5, 67, 1.41421);
g.add_edge(6, 42, 5);
g.add_edge(6, 70, 2.23607);
g.add_edge(7, 20, 7.81025);
g.add_edge(7, 64, 1);
g.add_edge(8, 18, 2.23607);
g.add_edge(8, 26, 6.08276);
g.add_edge(8, 49, 5);
g.add_edge(8, 78, 2.23607);
g.add_edge(9, 11, 6.32456);
g.add_edge(9, 39, 8.06226);
g.add_edge(10, 59, 2.23607);
g.add_edge(11, 32, 2.23607);
g.add_edge(11, 64, 6.40312);
g.add_edge(11, 70, 1);
g.add_edge(12, 21, 8.24621);
g.add_edge(12, 24, 4.47214);
g.add_edge(12, 63, 10);
g.add_edge(13, 57, 5);
g.add_edge(13, 79, 3);
g.add_edge(14, 17, 7.2111);
g.add_edge(14, 21, 3);
g.add_edge(14, 58, 8.06226);
g.add_edge(15, 19, 2);
g.add_edge(15, 38, 7);
g.add_edge(15, 64, 6.32456);
g.add_edge(16, 56, 2.82843);
g.add_edge(16, 75, 3);
g.add_edge(16, 76, 5.09902);
g.add_edge(17, 21, 6.08276);
g.add_edge(17, 39, 9.05539);
g.add_edge(18, 27, 1);
g.add_edge(18, 53, 6.7082);
g.add_edge(19, 34, 3.60555);
g.add_edge(19, 36, 2.23607);
g.add_edge(20, 36, 5);
g.add_edge(20, 43, 3);
g.add_edge(21, 72, 9.05539);
g.add_edge(22, 65, 10.2956);
g.add_edge(23, 53, 11.4018);
g.add_edge(24, 46, 9.21954);
g.add_edge(24, 62, 3);
g.add_edge(24, 64, 8.544);
g.add_edge(25, 27, 5);
g.add_edge(25, 71, 3.60555);
g.add_edge(25, 76, 2.23607);
g.add_edge(27, 50, 6.32456);
g.add_edge(28, 34, 2.23607);
g.add_edge(28, 47, 7.81025);
g.add_edge(28, 57, 4.47214);
g.add_edge(29, 35, 3.60555);
g.add_edge(29, 49, 1);
g.add_edge(30, 51, 2.23607);
g.add_edge(30, 74, 4.47214);
g.add_edge(31, 55, 6.08276);
g.add_edge(31, 70, 3);
g.add_edge(32, 34, 7.28011);
g.add_edge(32, 57, 2.82843);
g.add_edge(32, 67, 4.12311);
g.add_edge(33, 48, 4.12311);
g.add_edge(33, 51, 8.48528);
g.add_edge(33, 62, 3.60555);
g.add_edge(34, 50, 3.16228);
g.add_edge(35, 42, 7.07107);
g.add_edge(35, 49, 3.16228);
g.add_edge(36, 37, 5.09902);
g.add_edge(36, 44, 4);
g.add_edge(36, 72, 6.32456);
g.add_edge(37, 66, 3.16228);
g.add_edge(37, 72, 8.60233);
g.add_edge(38, 75, 6.08276);
g.add_edge(40, 56, 5.38516);
g.add_edge(40, 61, 3.60555);
g.add_edge(41, 47, 6.7082);
g.add_edge(41, 58, 7);
g.add_edge(41, 60, 5.83095);
g.add_edge(41, 73, 7.28011);
g.add_edge(43, 76, 3.16228);
g.add_edge(44, 68, 7.81025);
g.add_edge(44, 78, 8.06226);
g.add_edge(45, 48, 6.08276);
g.add_edge(45, 50, 6.32456);
g.add_edge(45, 55, 2.23607);
g.add_edge(46, 52, 3);
g.add_edge(47, 60, 1);
g.add_edge(47, 71, 5.09902);
g.add_edge(47, 76, 6);
g.add_edge(48, 69, 3.16228);
g.add_edge(48, 78, 4.47214);
g.add_edge(50, 59, 7.61577);
g.add_edge(51, 58, 7.07107);
g.add_edge(51, 63, 2);
g.add_edge(52, 55, 6.40312);
g.add_edge(52, 66, 4.47214);
g.add_edge(54, 68, 8.06226);
g.add_edge(54, 73, 8);
g.add_edge(55, 78, 7.07107);
g.add_edge(56, 61, 8);
g.add_edge(58, 63, 7.07107);
g.add_edge(61, 65, 8.06226);
g.add_edge(61, 68, 3.60555);
g.add_edge(65, 77, 1.41421);
g.add_edge(69, 70, 5.83095);
g.add_edge(69, 74, 9.48683);
g.add_edge(74, 79, 4);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 4.95);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 1.22);
g.set_importance(9, 5.76);
g.set_importance(10, 3.67);
g.set_importance(11, 0);
g.set_importance(12, 7.96);
g.set_importance(13, 6.67);
g.set_importance(14, 3.75);
g.set_importance(15, 0);
g.set_importance(16, 1.66);
g.set_importance(17, 8.62);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 1.07);
g.set_importance(21, 3.65);
g.set_importance(22, 0);
g.set_importance(23, 6.61);
g.set_importance(24, 0);
g.set_importance(25, 2.37);
g.set_importance(26, 0);
g.set_importance(27, 6.96);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 6.59);
g.set_importance(31, 0);
g.set_importance(32, 3.88);
g.set_importance(33, 0);
g.set_importance(34, 3.21);
g.set_importance(35, 0);
g.set_importance(36, 1.73);
g.set_importance(37, 3.73);
g.set_importance(38, 0);
g.set_importance(39, 1.66);
g.set_importance(40, 3.67);
g.set_importance(41, 1.34);
g.set_importance(42, 0);
g.set_importance(43, 2.97);
g.set_importance(44, 9.44);
g.set_importance(45, 0);
g.set_importance(46, 9.94);
g.set_importance(47, 0);
g.set_importance(48, 4.6);
g.set_importance(49, 2.28);
g.set_importance(50, 7.66);
g.set_importance(51, 5.84);
g.set_importance(52, 0);
g.set_importance(53, 3.98);
g.set_importance(54, 0);
g.set_importance(55, 0);
g.set_importance(56, 2.9);
g.set_importance(57, 0);
g.set_importance(58, 2.12);
g.set_importance(59, 9.44);
g.set_importance(60, 3.03);
g.set_importance(61, 0);
g.set_importance(62, 3.41);
g.set_importance(63, 0);
g.set_importance(64, 9.28);
g.set_importance(65, 5.84);
g.set_importance(66, 4.52);
g.set_importance(67, 4.21);
g.set_importance(68, 3.24);
g.set_importance(69, 9.03);
g.set_importance(70, 4.97);
g.set_importance(71, 0);
g.set_importance(72, 0);
g.set_importance(73, 0);
g.set_importance(74, 7.41);
g.set_importance(75, 1.88);
g.set_importance(76, 2.13);
g.set_importance(77, 1.42);
g.set_importance(78, 3.04);
g.set_importance(79, 7.89);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 22), 3.31);
g.set_repair_time(Line(0, 23), 3.23);
g.set_repair_time(Line(1, 26), 2.25);
g.set_repair_time(Line(2, 45), 3.51);
g.set_repair_time(Line(3, 40), 3.67);
g.set_repair_time(Line(4, 37), 4.7);
g.set_repair_time(Line(4, 71), 1.85);
g.set_repair_time(Line(5, 67), 2.07);
g.set_repair_time(Line(6, 70), 4.13);
g.set_repair_time(Line(7, 20), 4.96);
g.set_repair_time(Line(7, 64), 1.71);
g.set_repair_time(Line(8, 18), 1.17);
g.set_repair_time(Line(8, 78), 3.11);
g.set_repair_time(Line(9, 11), 1.24);
g.set_repair_time(Line(9, 39), 4.34);
g.set_repair_time(Line(10, 59), 2.9);
g.set_repair_time(Line(11, 32), 2.41);
g.set_repair_time(Line(11, 64), 1.24);
g.set_repair_time(Line(11, 70), 4.71);
g.set_repair_time(Line(12, 21), 3.81);
g.set_repair_time(Line(12, 24), 3.91);
g.set_repair_time(Line(12, 63), 3.97);
g.set_repair_time(Line(13, 57), 2.32);
g.set_repair_time(Line(13, 79), 4.16);
g.set_repair_time(Line(14, 17), 1.18);
g.set_repair_time(Line(14, 21), 3.36);
g.set_repair_time(Line(15, 19), 2.08);
g.set_repair_time(Line(15, 38), 2.48);
g.set_repair_time(Line(15, 64), 3.2);
g.set_repair_time(Line(16, 56), 3.49);
g.set_repair_time(Line(17, 21), 1.63);
g.set_repair_time(Line(17, 39), 2.34);
g.set_repair_time(Line(18, 27), 1.22);
g.set_repair_time(Line(18, 53), 4.72);
g.set_repair_time(Line(19, 34), 1.83);
g.set_repair_time(Line(19, 36), 2.71);
g.set_repair_time(Line(22, 65), 2.33);
g.set_repair_time(Line(23, 53), 2.6);
g.set_repair_time(Line(24, 62), 4.34);
g.set_repair_time(Line(24, 64), 3.75);
g.set_repair_time(Line(25, 27), 2.09);
g.set_repair_time(Line(25, 71), 4.84);
g.set_repair_time(Line(25, 76), 1.93);
g.set_repair_time(Line(28, 47), 1.11);
g.set_repair_time(Line(28, 57), 3.7);
g.set_repair_time(Line(29, 49), 1.37);
g.set_repair_time(Line(30, 51), 3.53);
g.set_repair_time(Line(30, 74), 2.8);
g.set_repair_time(Line(31, 55), 1.84);
g.set_repair_time(Line(31, 70), 3.68);
g.set_repair_time(Line(32, 34), 4.55);
g.set_repair_time(Line(32, 57), 2.76);
g.set_repair_time(Line(32, 67), 3.85);
g.set_repair_time(Line(33, 48), 4.44);
g.set_repair_time(Line(33, 51), 3.7);
g.set_repair_time(Line(33, 62), 3.6);
g.set_repair_time(Line(34, 50), 4.5);
g.set_repair_time(Line(36, 44), 4.83);
g.set_repair_time(Line(37, 72), 4.56);
g.set_repair_time(Line(40, 56), 4.16);
g.set_repair_time(Line(40, 61), 1.56);
g.set_repair_time(Line(41, 47), 4.04);
g.set_repair_time(Line(41, 60), 1.01);
g.set_repair_time(Line(41, 73), 4.91);
g.set_repair_time(Line(43, 76), 1.35);
g.set_repair_time(Line(44, 68), 2.03);
g.set_repair_time(Line(44, 78), 4.55);
g.set_repair_time(Line(45, 48), 3.12);
g.set_repair_time(Line(45, 50), 3.79);
g.set_repair_time(Line(45, 55), 1.16);
g.set_repair_time(Line(47, 60), 1.16);
g.set_repair_time(Line(47, 71), 2.06);
g.set_repair_time(Line(48, 69), 3.49);
g.set_repair_time(Line(48, 78), 2.12);
g.set_repair_time(Line(50, 59), 4.68);
g.set_repair_time(Line(51, 63), 3.22);
g.set_repair_time(Line(52, 55), 4.59);
g.set_repair_time(Line(54, 68), 4.66);
g.set_repair_time(Line(54, 73), 3.35);
g.set_repair_time(Line(55, 78), 1.45);
g.set_repair_time(Line(56, 61), 3.33);
g.set_repair_time(Line(61, 65), 2.14);
g.set_repair_time(Line(65, 77), 3.43);
g.set_repair_time(Line(69, 74), 3.49);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 31.4894}, {2, 24.4252}, {3, 36.8031}, {4, 37.6758}, {5, 24.2365}, {6, 16.0648}, {7, 23.7736}, {8, 28.7571}, {9, 22.4254}, {10, 35.4422}, {11, 14.5197}, {12, 38.7938}, {13, 9.51972}, {14, 45.5716}, {15, 30.4293}, {16, 28.1893}, {17, 43.8225}, {18, 30.1374}, {19, 28.6619}, {20, 33.5364}, {21, 49.1016}, {22, 9.10014}, {23, 7.5}, {24, 33.2036}, {25, 37.3582}, {26, 33.9894}, {27, 31.3874}, {28, 21.3599}, {29, 35.6606}, {30, 23.8599}, {31, 9.51972}, {32, 17.3148}, {33, 29.6651}, {34, 24.155}, {35, 31.1536}, {36, 31.457}, {37, 34.6701}, {38, 39.1793}, {39, 32.5032}, {40, 36.5544}, {41, 39.508}, {42, 22.3148}, {43, 37.2864}, {44, 36.0398}, {45, 19.9183}, {46, 28.8771}, {47, 31.1227}, {48, 24.5113}, {49, 35.0071}, {50, 27.8239}, {51, 26.655}, {52, 25.1271}, {53, 21.7522}, {54, 46.6323}, {55, 17.1232}, {56, 31.7248}, {57, 15.7697}, {58, 35.4938}, {59, 37.3437}, {60, 32.3727}, {61, 32.0475}, {62, 34.1721}, {63, 29.155}, {64, 22.5236}, {65, 21.9697}, {66, 30.7172}, {67, 22.4687}, {68, 36.5544}, {69, 20.5584}, {70, 13.2697}, {71, 37.4965}, {72, 39.3627}, {73, 48.6081}, {74, 18.2697}, {75, 31.9393}, {76, 34.5631}, {77, 23.7374}, {78, 25.962}, {79, 13.2697}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 31.4894}, {1, 0}, {2, 16.8777}, {3, 32.9433}, {4, 33.7413}, {5, 33.5202}, {6, 32.5253}, {7, 36.3831}, {8, 10.1035}, {9, 38.8859}, {10, 3.95285}, {11, 30.9802}, {12, 37.4897}, {13, 34.8558}, {14, 50.4974}, {15, 27.2274}, {16, 29.5674}, {17, 54.3509}, {18, 12.8985}, {19, 24.7274}, {20, 30.8965}, {21, 46.7474}, {22, 22.3893}, {23, 35.536}, {24, 31.8995}, {25, 20.3985}, {26, 2.5}, {27, 14.1485}, {28, 23.0156}, {29, 17.6035}, {30, 37.0443}, {31, 29.3408}, {32, 29.3206}, {33, 23.6426}, {34, 20.2205}, {35, 20.3063}, {36, 27.5225}, {37, 33.8963}, {38, 35.9774}, {39, 48.9638}, {40, 24.1045}, {41, 39.0789}, {42, 29.1451}, {43, 27.1465}, {44, 22.9764}, {45, 21.3846}, {46, 33.4913}, {47, 30.6936}, {48, 18.4887}, {49, 16.3535}, {50, 16.2676}, {51, 34.2492}, {52, 29.7413}, {53, 21.2838}, {54, 34.1823}, {55, 21.7374}, {56, 29.5975}, {57, 28.6058}, {58, 43.088}, {59, 6.74793}, {60, 31.9436}, {61, 19.5975}, {62, 28.1495}, {63, 36.7492}, {64, 35.1331}, {65, 9.51972}, {66, 35.3314}, {67, 34.4745}, {68, 24.1045}, {69, 22.4416}, {70, 29.7302}, {71, 24.9055}, {72, 35.4282}, {73, 44.1823}, {74, 34.3001}, {75, 33.3174}, {76, 23.1936}, {77, 11.2875}, {78, 12.8985}, {79, 38.6058}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 24.4252}, {1, 16.8777}, {2, 0}, {3, 29.7462}, {4, 29.3559}, {5, 29.6222}, {6, 21.4506}, {7, 29.1594}, {8, 18.9359}, {9, 27.8112}, {10, 20.8305}, {11, 19.9055}, {12, 31.1114}, {13, 31.0007}, {14, 45.1691}, {15, 23.3724}, {16, 30.9713}, {17, 49.0226}, {18, 21.5683}, {19, 20.8724}, {20, 29.9175}, {21, 41.4191}, {22, 20.2275}, {23, 31.9252}, {24, 25.5212}, {25, 26.5683}, {26, 19.3777}, {27, 20.3183}, {28, 19.1606}, {29, 26.4359}, {30, 30.666}, {31, 14.9055}, {32, 22.7006}, {33, 17.2643}, {34, 16.3655}, {35, 29.1388}, {36, 23.6675}, {37, 24.8489}, {38, 32.1224}, {39, 37.889}, {40, 21.9427}, {41, 37.3086}, {42, 27.7006}, {43, 33.3163}, {44, 26.2187}, {45, 4.50694}, {46, 19.0559}, {47, 28.9234}, {48, 12.1104}, {49, 25.1859}, {50, 12.4126}, {51, 27.8709}, {52, 15.3059}, {53, 29.9536}, {54, 32.0205}, {55, 7.30202}, {56, 27.4358}, {57, 24.7507}, {58, 36.7097}, {59, 21.9323}, {60, 30.1734}, {61, 17.4358}, {62, 21.7712}, {63, 30.3709}, {64, 27.9094}, {65, 7.35794}, {66, 20.8961}, {67, 27.8544}, {68, 21.9427}, {69, 16.0632}, {70, 18.6555}, {71, 31.0753}, {72, 31.5732}, {73, 42.0205}, {74, 27.9218}, {75, 34.7213}, {76, 29.3634}, {77, 5.59017}, {78, 16.1409}, {79, 32.9218}, 