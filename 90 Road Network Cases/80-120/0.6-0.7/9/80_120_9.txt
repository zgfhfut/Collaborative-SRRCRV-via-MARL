node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 22, 24, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 45, 46, 47, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 72, 75, 76, 77,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 7), Line(0, 47), Line(0, 48), Line(0, 67), Line(1, 12), Line(1, 74), Line(2, 32), Line(2, 33), Line(2, 44), Line(2, 53), Line(2, 57), Line(3, 25), Line(3, 60), Line(3, 63), Line(4, 65), Line(4, 79), Line(5, 65), Line(5, 77), Line(6, 46), Line(6, 64), Line(7, 15), Line(7, 36), Line(8, 46), Line(8, 48), Line(9, 10), Line(9, 32), Line(9, 53), Line(10, 27), Line(10, 32), Line(10, 66), Line(11, 32), Line(11, 53), Line(11, 66), Line(12, 14), Line(12, 53), Line(12, 72), Line(13, 20), Line(13, 35), Line(13, 43), Line(13, 52), Line(14, 72), Line(15, 41), Line(16, 27), Line(16, 33), Line(16, 42), Line(17, 27), Line(17, 42), Line(17, 43), Line(17, 56), Line(17, 64), Line(18, 24), Line(18, 26), Line(18, 41), Line(18, 57), Line(18, 76), Line(19, 49), Line(19, 67), Line(20, 48), Line(21, 25), Line(21, 31), Line(21, 61), Line(22, 43), Line(22, 70), Line(23, 40), Line(23, 58), Line(23, 61), Line(24, 36), Line(25, 36), Line(25, 54), Line(25, 61), Line(26, 39), Line(26, 76), Line(28, 45), Line(28, 71), Line(28, 75), Line(29, 31), Line(29, 74), Line(30, 47), Line(30, 59), Line(32, 66), Line(33, 34), Line(34, 78), Line(35, 71), Line(36, 56), Line(37, 53), Line(37, 59), Line(37, 77), Line(38, 52), Line(38, 78), Line(39, 49), Line(40, 53), Line(40, 63), Line(40, 67), Line(40, 73), Line(42, 47), Line(42, 69), Line(43, 57), Line(44, 68), Line(44, 76), Line(45, 52), Line(45, 61), Line(47, 48), Line(48, 59), Line(50, 62), Line(50, 64), Line(51, 54), Line(51, 55), Line(51, 64), Line(53, 68), Line(55, 79), Line(56, 58), Line(57, 63), Line(57, 75), Line(58, 59), Line(60, 73), Line(62, 76), Line(63, 64), Line(63, 67), Line(68, 72), Line(69, 70),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 47), Line(0, 48), Line(1, 12), Line(1, 74), Line(2, 32), Line(2, 33), Line(2, 44), Line(2, 57), Line(3, 60), Line(3, 63), Line(4, 79), Line(5, 65), Line(5, 77), Line(6, 46), Line(7, 15), Line(7, 36), Line(9, 10), Line(9, 32), Line(9, 53), Line(10, 27), Line(10, 32), Line(10, 66), Line(11, 32), Line(11, 53), Line(11, 66), Line(12, 14), Line(12, 53), Line(12, 72), Line(13, 35), Line(13, 43), Line(13, 52), Line(14, 72), Line(15, 41), Line(16, 27), Line(16, 33), Line(16, 42), Line(17, 27), Line(17, 42), Line(17, 64), Line(18, 24), Line(18, 26), Line(18, 41), Line(18, 57), Line(18, 76), Line(19, 67), Line(21, 25), Line(23, 40), Line(23, 58), Line(23, 61), Line(24, 36), Line(25, 36), Line(25, 61), Line(26, 39), Line(26, 76), Line(28, 45), Line(28, 75), Line(29, 31), Line(30, 47), Line(30, 59), Line(32, 66), Line(33, 34), Line(34, 78), Line(39, 49), Line(40, 53), Line(40, 67), Line(40, 73), Line(42, 47), Line(43, 57), Line(44, 68), Line(45, 52), Line(45, 61), Line(47, 48), Line(48, 59), Line(50, 62), Line(50, 64), Line(51, 54), Line(53, 68), Line(56, 58), Line(57, 63), Line(57, 75), Line(58, 59), Line(62, 76), Line(63, 67), Line(69, 70),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 7, 6.7082);
g.add_edge(0, 47, 4);
g.add_edge(0, 48, 8.94427);
g.add_edge(0, 67, 2.23607);
g.add_edge(1, 12, 9.21954);
g.add_edge(1, 74, 5.38516);
g.add_edge(2, 32, 3.16228);
g.add_edge(2, 33, 6.40312);
g.add_edge(2, 44, 5.09902);
g.add_edge(2, 53, 8.60233);
g.add_edge(2, 57, 2.23607);
g.add_edge(3, 25, 3);
g.add_edge(3, 60, 5.83095);
g.add_edge(3, 63, 5);
g.add_edge(4, 65, 6);
g.add_edge(4, 79, 4.47214);
g.add_edge(5, 65, 9.43398);
g.add_edge(5, 77, 7.07107);
g.add_edge(6, 46, 10.8167);
g.add_edge(6, 64, 2);
g.add_edge(7, 15, 7.2111);
g.add_edge(7, 36, 1);
g.add_edge(8, 46, 3.60555);
g.add_edge(8, 48, 3.60555);
g.add_edge(9, 10, 5);
g.add_edge(9, 32, 5.65685);
g.add_edge(9, 53, 2.82843);
g.add_edge(10, 27, 2);
g.add_edge(10, 32, 4.12311);
g.add_edge(10, 66, 6.7082);
g.add_edge(11, 32, 5.65685);
g.add_edge(11, 53, 6.32456);
g.add_edge(11, 66, 6);
g.add_edge(12, 14, 4.24264);
g.add_edge(12, 53, 4.12311);
g.add_edge(12, 72, 7.07107);
g.add_edge(13, 20, 2.82843);
g.add_edge(13, 35, 7.28011);
g.add_edge(13, 43, 5.09902);
g.add_edge(13, 52, 4.12311);
g.add_edge(14, 72, 5.65685);
g.add_edge(15, 41, 6.7082);
g.add_edge(16, 27, 6.32456);
g.add_edge(16, 33, 4);
g.add_edge(16, 42, 3.16228);
g.add_edge(17, 27, 2.23607);
g.add_edge(17, 42, 4.12311);
g.add_edge(17, 43, 3.60555);
g.add_edge(17, 56, 5);
g.add_edge(17, 64, 3.60555);
g.add_edge(18, 24, 3);
g.add_edge(18, 26, 3.16228);
g.add_edge(18, 41, 4.47214);
g.add_edge(18, 57, 4.12311);
g.add_edge(18, 76, 2.23607);
g.add_edge(19, 49, 2.23607);
g.add_edge(19, 67, 1);
g.add_edge(20, 48, 6.08276);
g.add_edge(21, 25, 7.07107);
g.add_edge(21, 31, 9.05539);
g.add_edge(21, 61, 7.61577);
g.add_edge(22, 43, 1);
g.add_edge(22, 70, 6.40312);
g.add_edge(23, 40, 8.06226);
g.add_edge(23, 58, 3.60555);
g.add_edge(23, 61, 4.47214);
g.add_edge(24, 36, 5);
g.add_edge(25, 36, 5.83095);
g.add_edge(25, 54, 5.09902);
g.add_edge(25, 61, 2.82843);
g.add_edge(26, 39, 8.24621);
g.add_edge(26, 76, 2.23607);
g.add_edge(28, 45, 1.41421);
g.add_edge(28, 71, 7.2111);
g.add_edge(28, 75, 4.47214);
g.add_edge(29, 31, 5);
g.add_edge(29, 74, 3.16228);
g.add_edge(30, 47, 3.16228);
g.add_edge(30, 59, 1);
g.add_edge(32, 66, 4.47214);
g.add_edge(33, 34, 5.09902);
g.add_edge(34, 78, 1);
g.add_edge(35, 71, 6.7082);
g.add_edge(36, 56, 3.60555);
g.add_edge(37, 53, 3.16228);
g.add_edge(37, 59, 4.12311);
g.add_edge(37, 77, 7.07107);
g.add_edge(38, 52, 5);
g.add_edge(38, 78, 9.21954);
g.add_edge(39, 49, 3.60555);
g.add_edge(40, 53, 8.544);
g.add_edge(40, 63, 3);
g.add_edge(40, 67, 4.47214);
g.add_edge(40, 73, 4.12311);
g.add_edge(42, 47, 3.60555);
g.add_edge(42, 69, 1.41421);
g.add_edge(43, 57, 8.48528);
g.add_edge(44, 68, 1.41421);
g.add_edge(44, 76, 5.38516);
g.add_edge(45, 52, 5.38516);
g.add_edge(45, 61, 2.23607);
g.add_edge(47, 48, 5.65685);
g.add_edge(48, 59, 7.81025);
g.add_edge(50, 62, 2);
g.add_edge(50, 64, 6.32456);
g.add_edge(51, 54, 4.12311);
g.add_edge(51, 55, 7.81025);
g.add_edge(51, 64, 1.41421);
g.add_edge(53, 68, 7.07107);
g.add_edge(55, 79, 9.21954);
g.add_edge(56, 58, 4.24264);
g.add_edge(57, 63, 8.06226);
g.add_edge(57, 75, 10.2956);
g.add_edge(58, 59, 2);
g.add_edge(60, 73, 8.06226);
g.add_edge(62, 76, 5.83095);
g.add_edge(63, 64, 7.28011);
g.add_edge(63, 67, 4.12311);
g.add_edge(68, 72, 7.28011);
g.add_edge(69, 70, 7.61577);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 4.73);
g.set_importance(6, 2.01);
g.set_importance(7, 1.6);
g.set_importance(8, 0);
g.set_importance(9, 4.86);
g.set_importance(10, 8.89);
g.set_importance(11, 7.14);
g.set_importance(12, 5.04);
g.set_importance(13, 3.54);
g.set_importance(14, 3.88);
g.set_importance(15, 1.84);
g.set_importance(16, 0);
g.set_importance(17, 8.52);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 1.63);
g.set_importance(21, 0);
g.set_importance(22, 1.17);
g.set_importance(23, 0);
g.set_importance(24, 5.29);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 6.98);
g.set_importance(29, 3.86);
g.set_importance(30, 4.62);
g.set_importance(31, 6.45);
g.set_importance(32, 7.4);
g.set_importance(33, 6.04);
g.set_importance(34, 4.08);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 6.09);
g.set_importance(38, 0);
g.set_importance(39, 7.17);
g.set_importance(40, 7.25);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 8);
g.set_importance(46, 5.37);
g.set_importance(47, 2.37);
g.set_importance(48, 0);
g.set_importance(49, 1.78);
g.set_importance(50, 2.54);
g.set_importance(51, 7.6);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 8.69);
g.set_importance(55, 7.65);
g.set_importance(56, 2.96);
g.set_importance(57, 0);
g.set_importance(58, 8.04);
g.set_importance(59, 3.18);
g.set_importance(60, 7.92);
g.set_importance(61, 8.01);
g.set_importance(62, 0);
g.set_importance(63, 2.13);
g.set_importance(64, 4.2);
g.set_importance(65, 1.96);
g.set_importance(66, 0);
g.set_importance(67, 8.04);
g.set_importance(68, 0);
g.set_importance(69, 4.5);
g.set_importance(70, 5.95);
g.set_importance(71, 5.36);
g.set_importance(72, 8.12);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 2.04);
g.set_importance(76, 1.79);
g.set_importance(77, 9.01);
g.set_importance(78, 0);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 47), 4.43);
g.set_repair_time(Line(0, 48), 3.51);
g.set_repair_time(Line(1, 12), 3.27);
g.set_repair_time(Line(1, 74), 3.05);
g.set_repair_time(Line(2, 32), 3.66);
g.set_repair_time(Line(2, 33), 2.36);
g.set_repair_time(Line(2, 44), 4.45);
g.set_repair_time(Line(2, 57), 1.72);
g.set_repair_time(Line(3, 60), 2.26);
g.set_repair_time(Line(3, 63), 3.38);
g.set_repair_time(Line(4, 79), 3.17);
g.set_repair_time(Line(5, 65), 2.92);
g.set_repair_time(Line(5, 77), 1.72);
g.set_repair_time(Line(6, 46), 4.05);
g.set_repair_time(Line(7, 15), 4.12);
g.set_repair_time(Line(7, 36), 3.13);
g.set_repair_time(Line(9, 10), 3.85);
g.set_repair_time(Line(9, 32), 3.85);
g.set_repair_time(Line(9, 53), 3.87);
g.set_repair_time(Line(10, 27), 3.23);
g.set_repair_time(Line(10, 32), 3.31);
g.set_repair_time(Line(10, 66), 2.51);
g.set_repair_time(Line(11, 32), 1.99);
g.set_repair_time(Line(11, 53), 4.75);
g.set_repair_time(Line(11, 66), 1.16);
g.set_repair_time(Line(12, 14), 3.99);
g.set_repair_time(Line(12, 53), 4.9);
g.set_repair_time(Line(12, 72), 1.17);
g.set_repair_time(Line(13, 35), 3.21);
g.set_repair_time(Line(13, 43), 4.88);
g.set_repair_time(Line(13, 52), 3.31);
g.set_repair_time(Line(14, 72), 3.13);
g.set_repair_time(Line(15, 41), 3.78);
g.set_repair_time(Line(16, 27), 4.26);
g.set_repair_time(Line(16, 33), 1.16);
g.set_repair_time(Line(16, 42), 4.69);
g.set_repair_time(Line(17, 27), 3.17);
g.set_repair_time(Line(17, 42), 1.95);
g.set_repair_time(Line(17, 64), 3.33);
g.set_repair_time(Line(18, 24), 4.63);
g.set_repair_time(Line(18, 26), 4.4);
g.set_repair_time(Line(18, 41), 2.11);
g.set_repair_time(Line(18, 57), 3.41);
g.set_repair_time(Line(18, 76), 3.08);
g.set_repair_time(Line(19, 67), 4.56);
g.set_repair_time(Line(21, 25), 1.49);
g.set_repair_time(Line(23, 40), 2.7);
g.set_repair_time(Line(23, 58), 1.09);
g.set_repair_time(Line(23, 61), 3.45);
g.set_repair_time(Line(24, 36), 2.79);
g.set_repair_time(Line(25, 36), 3.69);
g.set_repair_time(Line(25, 61), 1.26);
g.set_repair_time(Line(26, 39), 1.57);
g.set_repair_time(Line(26, 76), 3.94);
g.set_repair_time(Line(28, 45), 2.87);
g.set_repair_time(Line(28, 75), 1.15);
g.set_repair_time(Line(29, 31), 1.45);
g.set_repair_time(Line(30, 47), 3.34);
g.set_repair_time(Line(30, 59), 2.72);
g.set_repair_time(Line(32, 66), 1.24);
g.set_repair_time(Line(33, 34), 1.07);
g.set_repair_time(Line(34, 78), 1.06);
g.set_repair_time(Line(39, 49), 1.93);
g.set_repair_time(Line(40, 53), 1.33);
g.set_repair_time(Line(40, 67), 2.97);
g.set_repair_time(Line(40, 73), 1.16);
g.set_repair_time(Line(42, 47), 3.76);
g.set_repair_time(Line(43, 57), 3.52);
g.set_repair_time(Line(44, 68), 4.25);
g.set_repair_time(Line(45, 52), 2.97);
g.set_repair_time(Line(45, 61), 4.07);
g.set_repair_time(Line(47, 48), 1.72);
g.set_repair_time(Line(48, 59), 4.24);
g.set_repair_time(Line(50, 62), 1.94);
g.set_repair_time(Line(50, 64), 3.8);
g.set_repair_time(Line(51, 54), 2.86);
g.set_repair_time(Line(53, 68), 1.17);
g.set_repair_time(Line(56, 58), 4.3);
g.set_repair_time(Line(57, 63), 3.76);
g.set_repair_time(Line(57, 75), 1.72);
g.set_repair_time(Line(58, 59), 1.12);
g.set_repair_time(Line(62, 76), 4.41);
g.set_repair_time(Line(63, 67), 2.89);
g.set_repair_time(Line(69, 70), 3.22);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 35.7436}, {2, 20.8219}, {3, 14.199}, {4, 45.6943}, {5, 33.0344}, {6, 19.5491}, {7, 8.38525}, {8, 15.6873}, {9, 22.6008}, {10, 19.9559}, {11, 26.971}, {12, 24.2191}, {13, 22.3193}, {14, 29.5224}, {15, 17.3991}, {16, 13.4598}, {17, 14.6608}, {18, 19.6353}, {19, 4.04508}, {20, 18.7838}, {21, 25.7628}, {22, 20.4178}, {23, 17.2098}, {24, 15.8853}, {25, 16.9239}, {26, 21.6549}, {27, 17.4559}, {28, 25.0223}, {29, 43.332}, {30, 8.95285}, {31, 37.082}, {32, 24.7747}, {33, 18.4598}, {34, 24.8336}, {35, 31.4195}, {36, 9.63525}, {37, 15.3567}, {38, 33.7232}, {39, 11.3471}, {40, 8.38525}, {41, 25.2254}, {42, 9.50694}, {43, 19.1678}, {44, 27.1956}, {45, 23.2546}, {46, 20.1942}, {47, 5}, {48, 11.1803}, {49, 6.84017}, {50, 24.9548}, {51, 18.8169}, {52, 27.4732}, {53, 19.0653}, {54, 23.2977}, {55, 28.5797}, {56, 14.1422}, {57, 18.0268}, {58, 12.7028}, {59, 10.2028}, {60, 21.4877}, {61, 20.4595}, {62, 27.4548}, {63, 7.94897}, {64, 17.0491}, {65, 44.8269}, {66, 28.3412}, {67, 2.79508}, {68, 27.9041}, {69, 11.2747}, {70, 20.7944}, {71, 34.0362}, {72, 33.058}, {73, 13.5391}, {74, 42.475}, {75, 30.6125}, {76, 22.4303}, {77, 24.1956}, {78, 26.0836}, {79, 40.1041}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 35.7436}, {1, 0}, {2, 27.4312}, {3, 37.3583}, {4, 57.6013}, {5, 38.3088}, {6, 38.7659}, {7, 39.3453}, {8, 40.0548}, {9, 20.2138}, {10, 26.4638}, {11, 24.584}, {12, 11.5244}, {13, 42.6396}, {14, 16.8277}, {15, 48.3592}, {16, 36.8695}, {17, 31.7589}, {18, 35.3802}, {19, 34.1985}, {20, 43.1513}, {21, 28.2535}, {22, 37.5159}, {23, 32.792}, {24, 39.1302}, {25, 37.0924}, {26, 36.8115}, {27, 28.9638}, {28, 42.3361}, {29, 10.6843}, {30, 27.035}, {31, 16.9343}, {32, 27.2849}, {33, 35.4351}, {34, 41.8089}, {35, 51.7398}, {36, 38.0953}, {37, 20.6312}, {38, 53.5498}, {39, 41.5005}, {40, 27.3583}, {41, 40.9704}, {42, 35.4948}, {43, 36.2659}, {44, 27.2849}, {45, 40.5683}, {46, 44.5617}, {47, 30.9879}, {48, 35.5479}, {49, 36.9936}, {50, 43.8051}, {51, 38.0336}, {52, 47.2998}, {53, 16.6783}, {54, 43.1875}, {55, 47.7964}, {56, 33.5883}, {57, 30.2263}, {58, 28.285}, {59, 25.785}, {60, 42.59}, {61, 37.7733}, {62, 41.3051}, {63, 31.1083}, {64, 36.2659}, {65, 50.1013}, {66, 32.084}, {67, 32.9485}, {68, 25.5171}, {69, 37.2626}, {70, 45.5198}, {71, 51.35}, {72, 20.3633}, {73, 32.5122}, {74, 6.73146}, {75, 43.0958}, {76, 34.0164}, {77, 29.47}, {78, 43.0589}, {79, 59.3209}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 20.8219}, {1, 27.4312}, {2, 0}, {3, 19.1229}, {4, 47.5539}, {5, 32.3834}, {6, 21.4088}, {7, 19.199}, {8, 33.0417}, {9, 11.0239}, {10, 9.10673}, {11, 11.0239}, {12, 15.9068}, {13, 19.7755}, {14, 21.2101}, {15, 21.9244}, {16, 13.0039}, {17, 14.4018}, {18, 7.94897}, {19, 19.2768}, {20, 23.311}, {21, 31.7117}, {22, 14.6517}, {23, 26.7007}, {24, 11.699}, {25, 22.8729}, {26, 11.9018}, {27, 11.6067}, {28, 21.2548}, {29, 38.1155}, {30, 21.1096}, {31, 43.031}, {32, 3.95285}, {33, 8.00391}, {34, 14.3777}, {35, 28.8756}, {36, 17.949}, {37, 14.7058}, {38, 27.1521}, {39, 22.2096}, {40, 16.6229}, {41, 13.5391}, {42, 16.9568}, {43, 13.4017}, {44, 6.37377}, {45, 23.0226}, {46, 34.9296}, {47, 21.4637}, {48, 28.5348}, {49, 22.0719}, {50, 20.5327}, {51, 20.6765}, {52, 24.9293}, {53, 10.7529}, {54, 25.8304}, {55, 30.4393}, {56, 20.6518}, {57, 2.79508}, {58, 22.3596}, {59, 19.8596}, {60, 26.4116}, {61, 25.8176}, {62, 18.0327}, {63, 12.8729}, {64, 18.9088}, {65, 44.1759}, {66, 9.54302}, {67, 18.0268}, {68, 8.14154}, {69, 18.7245}, {70, 22.6556}, {71, 30.2687}, {72, 17.2417}, {73, 21.7768}, {74, 34.1627}, {75, 15.6646}, {76, 10.7441}, {77, 23.5446}, {78, 15.6277}, {79, 41.9638}, 