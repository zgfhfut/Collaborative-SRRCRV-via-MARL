node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 8, 9, 13, 16, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 44, 46, 47, 48, 50, 51, 52, 55, 56, 57, 59, 62, 63, 64, 65, 66, 68, 70, 71, 73, 75, 76, 77, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 40), Line(0, 66), Line(0, 74), Line(1, 13), Line(1, 19), Line(1, 27), Line(1, 52), Line(1, 53), Line(1, 73), Line(2, 51), Line(2, 73), Line(3, 17), Line(3, 56), Line(3, 67), Line(3, 70), Line(4, 28), Line(4, 57), Line(4, 64), Line(5, 14), Line(5, 34), Line(5, 48), Line(6, 35), Line(6, 50), Line(6, 65), Line(7, 38), Line(7, 44), Line(8, 21), Line(8, 78), Line(9, 40), Line(9, 49), Line(10, 36), Line(10, 59), Line(11, 16), Line(11, 23), Line(11, 38), Line(11, 54), Line(12, 35), Line(12, 63), Line(13, 39), Line(13, 48), Line(13, 67), Line(14, 45), Line(14, 70), Line(15, 52), Line(15, 68), Line(15, 75), Line(16, 60), Line(16, 61), Line(17, 19), Line(18, 31), Line(18, 48), Line(19, 20), Line(19, 42), Line(19, 55), Line(19, 60), Line(20, 22), Line(20, 26), Line(20, 30), Line(20, 33), Line(21, 79), Line(22, 37), Line(22, 79), Line(23, 33), Line(24, 47), Line(24, 52), Line(25, 70), Line(25, 76), Line(26, 28), Line(26, 51), Line(26, 68), Line(27, 28), Line(27, 48), Line(27, 57), Line(29, 37), Line(29, 51), Line(29, 74), Line(30, 32), Line(30, 70), Line(30, 77), Line(31, 61), Line(31, 64), Line(32, 39), Line(32, 58), Line(32, 78), Line(33, 66), Line(34, 78), Line(35, 77), Line(36, 41), Line(36, 44), Line(37, 64), Line(38, 74), Line(38, 75), Line(39, 71), Line(41, 44), Line(41, 67), Line(42, 72), Line(43, 46), Line(43, 47), Line(43, 49), Line(45, 68), Line(46, 54), Line(46, 67), Line(49, 62), Line(50, 53), Line(51, 75), Line(52, 62), Line(54, 61), Line(54, 69), Line(55, 56), Line(55, 62), Line(56, 75), Line(58, 69), Line(59, 72), Line(60, 77), Line(61, 65), Line(62, 73), Line(63, 76), Line(65, 71), Line(67, 69), Line(68, 79),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 40), Line(0, 66), Line(0, 74), Line(1, 13), Line(1, 19), Line(1, 27), Line(1, 53), Line(1, 73), Line(2, 51), Line(2, 73), Line(3, 17), Line(3, 56), Line(3, 70), Line(4, 57), Line(5, 14), Line(5, 34), Line(5, 48), Line(6, 50), Line(6, 65), Line(7, 38), Line(7, 44), Line(8, 21), Line(9, 40), Line(9, 49), Line(10, 59), Line(11, 16), Line(11, 23), Line(11, 38), Line(11, 54), Line(12, 63), Line(13, 39), Line(14, 45), Line(14, 70), Line(15, 75), Line(16, 60), Line(16, 61), Line(18, 31), Line(18, 48), Line(19, 20), Line(19, 42), Line(19, 60), Line(20, 33), Line(22, 37), Line(22, 79), Line(23, 33), Line(24, 47), Line(25, 70), Line(25, 76), Line(26, 51), Line(26, 68), Line(27, 28), Line(27, 48), Line(27, 57), Line(29, 74), Line(30, 77), Line(31, 64), Line(32, 39), Line(32, 58), Line(32, 78), Line(34, 78), Line(36, 41), Line(37, 64), Line(39, 71), Line(41, 44), Line(43, 46), Line(43, 49), Line(46, 67), Line(49, 62), Line(50, 53), Line(51, 75), Line(52, 62), Line(54, 61), Line(54, 69), Line(55, 56), Line(55, 62), Line(56, 75), Line(58, 69), Line(59, 72), Line(61, 65), Line(62, 73), Line(63, 76), Line(65, 71), Line(67, 69), Line(68, 79),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 40, 5.38516);
g.add_edge(0, 66, 5);
g.add_edge(0, 74, 4.12311);
g.add_edge(1, 13, 7.81025);
g.add_edge(1, 19, 9.43398);
g.add_edge(1, 27, 2);
g.add_edge(1, 52, 5);
g.add_edge(1, 53, 7.61577);
g.add_edge(1, 73, 7.28011);
g.add_edge(2, 51, 4.12311);
g.add_edge(2, 73, 6.32456);
g.add_edge(3, 17, 3);
g.add_edge(3, 56, 11.3137);
g.add_edge(3, 67, 5.83095);
g.add_edge(3, 70, 6.7082);
g.add_edge(4, 28, 1);
g.add_edge(4, 57, 4.24264);
g.add_edge(4, 64, 2);
g.add_edge(5, 14, 3.60555);
g.add_edge(5, 34, 10.8167);
g.add_edge(5, 48, 6.40312);
g.add_edge(6, 35, 4.12311);
g.add_edge(6, 50, 6);
g.add_edge(6, 65, 1.41421);
g.add_edge(7, 38, 3.16228);
g.add_edge(7, 44, 3.60555);
g.add_edge(8, 21, 9.43398);
g.add_edge(8, 78, 3.16228);
g.add_edge(9, 40, 6.40312);
g.add_edge(9, 49, 1.41421);
g.add_edge(10, 36, 6.08276);
g.add_edge(10, 59, 4.12311);
g.add_edge(11, 16, 6);
g.add_edge(11, 23, 7.81025);
g.add_edge(11, 38, 2.23607);
g.add_edge(11, 54, 5.09902);
g.add_edge(12, 35, 7.2111);
g.add_edge(12, 63, 9.21954);
g.add_edge(13, 39, 6);
g.add_edge(13, 48, 6.08276);
g.add_edge(13, 67, 3.60555);
g.add_edge(14, 45, 9.05539);
g.add_edge(14, 70, 6.7082);
g.add_edge(15, 52, 3.16228);
g.add_edge(15, 68, 5.38516);
g.add_edge(15, 75, 5.38516);
g.add_edge(16, 60, 2);
g.add_edge(16, 61, 6.32456);
g.add_edge(17, 19, 2);
g.add_edge(18, 31, 5.83095);
g.add_edge(18, 48, 3.16228);
g.add_edge(19, 20, 7.61577);
g.add_edge(19, 42, 4);
g.add_edge(19, 55, 6.32456);
g.add_edge(19, 60, 7.28011);
g.add_edge(20, 22, 5.83095);
g.add_edge(20, 26, 1.41421);
g.add_edge(20, 30, 5.09902);
g.add_edge(20, 33, 4);
g.add_edge(21, 79, 11.4018);
g.add_edge(22, 37, 4);
g.add_edge(22, 79, 4);
g.add_edge(23, 33, 7.2111);
g.add_edge(24, 47, 5);
g.add_edge(24, 52, 1);
g.add_edge(25, 70, 3.16228);
g.add_edge(25, 76, 6.08276);
g.add_edge(26, 28, 8.06226);
g.add_edge(26, 51, 1);
g.add_edge(26, 68, 6.7082);
g.add_edge(27, 28, 5.09902);
g.add_edge(27, 48, 2);
g.add_edge(27, 57, 2.23607);
g.add_edge(29, 37, 7.07107);
g.add_edge(29, 51, 6.08276);
g.add_edge(29, 74, 5);
g.add_edge(30, 32, 4.12311);
g.add_edge(30, 70, 1.41421);
g.add_edge(30, 77, 3);
g.add_edge(31, 61, 1.41421);
g.add_edge(31, 64, 4.12311);
g.add_edge(32, 39, 8.06226);
g.add_edge(32, 58, 7.28011);
g.add_edge(32, 78, 6.32456);
g.add_edge(33, 66, 5);
g.add_edge(34, 78, 3.16228);
g.add_edge(35, 77, 6.7082);
g.add_edge(36, 41, 4.12311);
g.add_edge(36, 44, 2.23607);
g.add_edge(37, 64, 3.16228);
g.add_edge(38, 74, 4.12311);
g.add_edge(38, 75, 6.08276);
g.add_edge(39, 71, 6.40312);
g.add_edge(41, 44, 3.16228);
g.add_edge(41, 67, 1.41421);
g.add_edge(42, 72, 4.47214);
g.add_edge(43, 46, 7);
g.add_edge(43, 47, 6.32456);
g.add_edge(43, 49, 5.83095);
g.add_edge(45, 68, 10.2956);
g.add_edge(46, 54, 6.32456);
g.add_edge(46, 67, 4.24264);
g.add_edge(49, 62, 5.09902);
g.add_edge(50, 53, 8.94427);
g.add_edge(51, 75, 5.83095);
g.add_edge(52, 62, 3.16228);
g.add_edge(54, 61, 5.83095);
g.add_edge(54, 69, 2.23607);
g.add_edge(55, 56, 6.08276);
g.add_edge(55, 62, 5.09902);
g.add_edge(56, 75, 3.16228);
g.add_edge(58, 69, 5.83095);
g.add_edge(59, 72, 4.47214);
g.add_edge(60, 77, 7.07107);
g.add_edge(61, 65, 5.09902);
g.add_edge(62, 73, 2);
g.add_edge(63, 76, 1.41421);
g.add_edge(65, 71, 5.83095);
g.add_edge(67, 69, 1);
g.add_edge(68, 79, 10.8167);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 5.3);
g.set_importance(6, 1.29);
g.set_importance(7, 6.65);
g.set_importance(8, 8.91);
g.set_importance(9, 6.29);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 1.95);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 8.56);
g.set_importance(17, 0);
g.set_importance(18, 7.49);
g.set_importance(19, 2);
g.set_importance(20, 0);
g.set_importance(21, 6.32);
g.set_importance(22, 0);
g.set_importance(23, 8.64);
g.set_importance(24, 2.25);
g.set_importance(25, 4.54);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 8.31);
g.set_importance(29, 3.87);
g.set_importance(30, 7.12);
g.set_importance(31, 1.18);
g.set_importance(32, 2.84);
g.set_importance(33, 4.07);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 2.34);
g.set_importance(37, 6.22);
g.set_importance(38, 4.7);
g.set_importance(39, 5.08);
g.set_importance(40, 0);
g.set_importance(41, 5.97);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 7.45);
g.set_importance(45, 0);
g.set_importance(46, 2.65);
g.set_importance(47, 1.42);
g.set_importance(48, 7);
g.set_importance(49, 0);
g.set_importance(50, 4.45);
g.set_importance(51, 5.4);
g.set_importance(52, 2.56);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 6.87);
g.set_importance(56, 3.4);
g.set_importance(57, 5.33);
g.set_importance(58, 0);
g.set_importance(59, 3.42);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 6.5);
g.set_importance(63, 5.85);
g.set_importance(64, 1.92);
g.set_importance(65, 3.97);
g.set_importance(66, 9.57);
g.set_importance(67, 0);
g.set_importance(68, 9.87);
g.set_importance(69, 0);
g.set_importance(70, 2.49);
g.set_importance(71, 9.18);
g.set_importance(72, 0);
g.set_importance(73, 9.09);
g.set_importance(74, 0);
g.set_importance(75, 8.15);
g.set_importance(76, 4.79);
g.set_importance(77, 2.26);
g.set_importance(78, 0);
g.set_importance(79, 4.91);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 40), 1.19);
g.set_repair_time(Line(0, 66), 3.14);
g.set_repair_time(Line(0, 74), 2.49);
g.set_repair_time(Line(1, 13), 3.14);
g.set_repair_time(Line(1, 19), 4.9);
g.set_repair_time(Line(1, 27), 1.85);
g.set_repair_time(Line(1, 53), 1.85);
g.set_repair_time(Line(1, 73), 2.38);
g.set_repair_time(Line(2, 51), 2.16);
g.set_repair_time(Line(2, 73), 3.93);
g.set_repair_time(Line(3, 17), 1.32);
g.set_repair_time(Line(3, 56), 4.31);
g.set_repair_time(Line(3, 70), 4.96);
g.set_repair_time(Line(4, 57), 3.78);
g.set_repair_time(Line(5, 14), 4.3);
g.set_repair_time(Line(5, 34), 2.29);
g.set_repair_time(Line(5, 48), 4.41);
g.set_repair_time(Line(6, 50), 4.55);
g.set_repair_time(Line(6, 65), 2.81);
g.set_repair_time(Line(7, 38), 3.06);
g.set_repair_time(Line(7, 44), 3.51);
g.set_repair_time(Line(8, 21), 4.88);
g.set_repair_time(Line(9, 40), 1.71);
g.set_repair_time(Line(9, 49), 2.61);
g.set_repair_time(Line(10, 59), 2.59);
g.set_repair_time(Line(11, 16), 3.86);
g.set_repair_time(Line(11, 23), 4.1);
g.set_repair_time(Line(11, 38), 3.52);
g.set_repair_time(Line(11, 54), 3.59);
g.set_repair_time(Line(12, 63), 1.99);
g.set_repair_time(Line(13, 39), 3.21);
g.set_repair_time(Line(14, 45), 3.43);
g.set_repair_time(Line(14, 70), 1.65);
g.set_repair_time(Line(15, 75), 4.57);
g.set_repair_time(Line(16, 60), 1.33);
g.set_repair_time(Line(16, 61), 4.87);
g.set_repair_time(Line(18, 31), 3.59);
g.set_repair_time(Line(18, 48), 3.93);
g.set_repair_time(Line(19, 20), 1.39);
g.set_repair_time(Line(19, 42), 2.18);
g.set_repair_time(Line(19, 60), 3.33);
g.set_repair_time(Line(20, 33), 3.27);
g.set_repair_time(Line(22, 37), 1.77);
g.set_repair_time(Line(22, 79), 2.28);
g.set_repair_time(Line(23, 33), 4.88);
g.set_repair_time(Line(24, 47), 4.35);
g.set_repair_time(Line(25, 70), 1.91);
g.set_repair_time(Line(25, 76), 4.84);
g.set_repair_time(Line(26, 51), 3.49);
g.set_repair_time(Line(26, 68), 3.11);
g.set_repair_time(Line(27, 28), 1.99);
g.set_repair_time(Line(27, 48), 4.54);
g.set_repair_time(Line(27, 57), 1.12);
g.set_repair_time(Line(29, 74), 4.38);
g.set_repair_time(Line(30, 77), 3.17);
g.set_repair_time(Line(31, 64), 4.37);
g.set_repair_time(Line(32, 39), 1.58);
g.set_repair_time(Line(32, 58), 3.3);
g.set_repair_time(Line(32, 78), 1.25);
g.set_repair_time(Line(34, 78), 3.96);
g.set_repair_time(Line(36, 41), 3.37);
g.set_repair_time(Line(37, 64), 1.88);
g.set_repair_time(Line(39, 71), 4.26);
g.set_repair_time(Line(41, 44), 3.93);
g.set_repair_time(Line(43, 46), 4.26);
g.set_repair_time(Line(43, 49), 1.32);
g.set_repair_time(Line(46, 67), 1.3);
g.set_repair_time(Line(49, 62), 2.76);
g.set_repair_time(Line(50, 53), 2);
g.set_repair_time(Line(51, 75), 2.23);
g.set_repair_time(Line(52, 62), 3.51);
g.set_repair_time(Line(54, 61), 1.84);
g.set_repair_time(Line(54, 69), 3.44);
g.set_repair_time(Line(55, 56), 1.98);
g.set_repair_time(Line(55, 62), 3.09);
g.set_repair_time(Line(56, 75), 4.34);
g.set_repair_time(Line(58, 69), 3.76);
g.set_repair_time(Line(59, 72), 2.46);
g.set_repair_time(Line(61, 65), 3.14);
g.set_repair_time(Line(62, 73), 4.67);
g.set_repair_time(Line(63, 76), 2.64);
g.set_repair_time(Line(65, 71), 1.45);
g.set_repair_time(Line(67, 69), 4.6);
g.set_repair_time(Line(68, 79), 2.88);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 33.0797}, {2, 24.1612}, {3, 30.8104}, {4, 26.6956}, {5, 38.5337}, {6, 34.9069}, {7, 14.2606}, {8, 40.8862}, {9, 14.7354}, {10, 29.1661}, {11, 13.1028}, {12, 45.0229}, {13, 28.0286}, {14, 34.0268}, {15, 24.6427}, {16, 20.6028}, {17, 29.5197}, {18, 35.8218}, {19, 27.0197}, {20, 17.5}, {21, 44.0409}, {22, 24.7887}, {23, 21.5139}, {24, 28.0797}, {25, 29.5944}, {26, 19.2678}, {27, 34.3193}, {28, 27.9456}, {29, 11.4039}, {30, 23.8738}, {31, 28.5331}, {32, 29.0277}, {33, 12.5}, {34, 40.8862}, {35, 36.009}, {36, 21.5626}, {37, 20.2427}, {38, 10.3078}, {39, 35.5286}, {40, 6.73146}, {41, 22.7204}, {42, 32.0197}, {43, 23.7918}, {44, 18.7676}, {45, 40.5226}, {46, 27.3823}, {47, 31.6975}, {48, 35.6321}, {49, 16.5031}, {50, 42.4069}, {51, 19.0073}, {52, 26.8297}, {53, 42.5995}, {54, 19.4766}, {55, 29.2507}, {56, 21.8641}, {57, 31.9989}, {58, 29.5604}, {59, 34.32}, {60, 23.1028}, {61, 26.7653}, {62, 22.8769}, {63, 38.9656}, {64, 24.1956}, {65, 33.1391}, {66, 6.25}, {67, 23.5217}, {68, 27.653}, {69, 22.2717}, {70, 25.6415}, {71, 40.4278}, {72, 37.6099}, {73, 25.3769}, {74, 5.15388}, {75, 17.9112}, {76, 37.1978}, {77, 27.6238}, {78, 36.9334}, {79, 29.7887}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 33.0797}, {1, 0}, {2, 17.0058}, {3, 18.0425}, {4, 10.1238}, {5, 13.0039}, {6, 26.1508}, {7, 24.4973}, {8, 34.4304}, {9, 18.3444}, {10, 28.7949}, {11, 24.6886}, {12, 40.3186}, {13, 9.76281}, {14, 17.5108}, {15, 10.2028}, {16, 23.3926}, {17, 14.2925}, {18, 8.95285}, {19, 11.7925}, {20, 20.7194}, {21, 40.8288}, {22, 21.5766}, {23, 34.4514}, {24, 7.5}, {25, 29.8489}, {26, 18.9516}, {27, 2.5}, {28, 8.87377}, {29, 25.4155}, {30, 27.0931}, {31, 16.2415}, {32, 27.3406}, {33, 25.7194}, {34, 26.5247}, {35, 31.3047}, {36, 21.1914}, {37, 16.5766}, {38, 24.5378}, {39, 17.2628}, {40, 26.3483}, {41, 16.0375}, {42, 16.7925}, {43, 21.6557}, {44, 19.9904}, {45, 28.8301}, {46, 19.5731}, {47, 13.75}, {48, 5}, {49, 16.5766}, {50, 20.7001}, {51, 20.2016}, {52, 6.25}, {53, 9.51972}, {54, 18.3148}, {55, 16.5766}, {56, 20.8872}, {57, 5.29508}, {58, 22.8084}, {59, 27.9728}, {60, 20.8926}, {61, 18.0093}, {62, 10.2028}, {63, 39.2202}, {64, 12.6238}, {65, 24.3831}, {66, 31.9694}, {67, 14.2698}, {68, 16.9343}, {69, 15.5198}, {70, 25.8961}, {71, 25.2667}, {72, 22.3826}, {73, 9.10014}, {74, 29.6916}, {75, 16.9343}, {76, 37.4524}, {77, 29.7314}, {78, 30.4776}, {79, 26.5766}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 24.1612}, {1, 17.0058}, {2, 0}, {3, 23.9414}, {4, 17.7317}, {5, 29.2054}, {6, 31.8346}, {7, 23.9989}, {8, 31.5578}, {9, 18.5472}, {10, 38.9043}, {11, 22.8411}, {12, 35.6946}, {13, 26.7686}, {14, 24.6984}, {15, 18.3114}, {16, 29.2915}, {17, 20.1914}, {18, 25.9587}, {19, 17.6914}, {20, 8.17165}, {21, 34.7125}, {22, 15.4603}, {23, 22.1855}, {24, 15.6085}, {25, 20.266}, {26, 6.40388}, {27, 19.5058}, {28, 16.4817}, {29, 12.7573}, {30, 14.5454}, {31, 25.3856}, {32, 19.6993}, {33, 13.1716}, {34, 31.5578}, {35, 26.6807}, {36, 31.3009}, {37, 20.4603}, {38, 20.046}, {39, 29.7771}, {40, 26.5511}, {41, 32.4587}, {42, 22.6914}, {43, 24.0682}, {44, 28.5058}, {45, 27.6587}, {46, 32.8182}, {47, 21.8585}, {48, 22.0058}, {49, 16.7795}, {50, 37.7059}, {51, 5.15388}, {52, 14.3585}, {53, 26.5255}, {54, 29.2149}, {55, 16.7795}, {56, 16.3954}, {57, 22.3009}, {58, 28.7994}, {59, 33.8717}, {60, 26.7915}, {61, 27.1534}, {62, 10.4057}, {63, 29.6373}, {64, 20.2317}, {65, 33.5271}, {66, 19.4216}, {67, 31.2301}, {68, 14.7891}, {69, 32.01}, {70, 16.3132}, {71, 37.781}, {72, 28.2815}, {73, 7.90569}, {74, 19.0073}, {75, 12.4426}, {76, 27.8695}, {77, 18.2954}, {78, 27.605}, {79, 20.4603}, 