node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 23, 24, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 59, 60, 64, 65, 67, 68, 69, 70, 72, 74, 75, 76, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 27), Line(0, 35), Line(0, 47), Line(1, 25), Line(1, 37), Line(1, 69), Line(2, 36), Line(2, 40), Line(2, 64), Line(3, 20), Line(3, 29), Line(3, 72), Line(4, 18), Line(4, 59), Line(5, 11), Line(5, 19), Line(5, 23), Line(5, 32), Line(5, 48), Line(5, 75), Line(6, 43), Line(6, 53), Line(6, 78), Line(7, 12), Line(7, 50), Line(7, 57), Line(7, 58), Line(8, 26), Line(8, 67), Line(9, 31), Line(9, 73), Line(9, 76), Line(10, 18), Line(10, 67), Line(11, 40), Line(11, 51), Line(11, 78), Line(12, 39), Line(13, 15), Line(13, 16), Line(13, 79), Line(14, 23), Line(14, 58), Line(15, 50), Line(16, 34), Line(16, 37), Line(16, 43), Line(17, 24), Line(17, 35), Line(17, 64), Line(18, 47), Line(19, 37), Line(20, 55), Line(20, 63), Line(21, 22), Line(21, 33), Line(21, 61), Line(21, 79), Line(22, 35), Line(22, 71), Line(23, 28), Line(24, 36), Line(25, 72), Line(26, 68), Line(26, 70), Line(27, 79), Line(28, 62), Line(28, 78), Line(29, 76), Line(30, 37), Line(30, 38), Line(30, 51), Line(31, 49), Line(31, 57), Line(31, 74), Line(32, 36), Line(32, 73), Line(33, 48), Line(33, 49), Line(34, 38), Line(35, 54), Line(37, 57), Line(39, 42), Line(39, 43), Line(41, 43), Line(41, 56), Line(41, 62), Line(42, 60), Line(42, 77), Line(43, 64), Line(44, 45), Line(44, 69), Line(45, 77), Line(46, 54), Line(46, 60), Line(46, 79), Line(47, 51), Line(48, 70), Line(50, 53), Line(50, 65), Line(51, 55), Line(52, 66), Line(52, 74), Line(53, 68), Line(53, 75), Line(54, 55), Line(55, 61), Line(56, 72), Line(56, 74), Line(58, 66), Line(59, 71), Line(61, 70), Line(62, 68), Line(63, 65), Line(64, 73), Line(66, 79), Line(67, 76), Line(71, 78), Line(73, 79), Line(74, 75),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 27), Line(1, 25), Line(1, 37), Line(2, 36), Line(2, 40), Line(3, 20), Line(3, 29), Line(3, 72), Line(4, 59), Line(5, 11), Line(5, 19), Line(5, 23), Line(5, 32), Line(5, 48), Line(6, 43), Line(6, 53), Line(7, 50), Line(7, 57), Line(7, 58), Line(8, 26), Line(8, 67), Line(9, 31), Line(9, 76), Line(10, 18), Line(11, 40), Line(11, 51), Line(11, 78), Line(13, 15), Line(13, 16), Line(14, 23), Line(14, 58), Line(16, 34), Line(16, 43), Line(17, 24), Line(17, 35), Line(17, 64), Line(18, 47), Line(20, 55), Line(20, 63), Line(21, 33), Line(21, 61), Line(21, 79), Line(22, 35), Line(22, 71), Line(24, 36), Line(26, 70), Line(27, 79), Line(28, 62), Line(29, 76), Line(30, 37), Line(30, 38), Line(30, 51), Line(31, 57), Line(31, 74), Line(32, 73), Line(33, 49), Line(34, 38), Line(37, 57), Line(39, 42), Line(39, 43), Line(41, 43), Line(41, 56), Line(41, 62), Line(42, 60), Line(42, 77), Line(43, 64), Line(45, 77), Line(46, 54), Line(46, 60), Line(47, 51), Line(50, 53), Line(50, 65), Line(52, 66), Line(53, 68), Line(55, 61), Line(56, 74), Line(58, 66), Line(59, 71), Line(63, 65), Line(64, 73), Line(66, 79), Line(67, 76), Line(71, 78), Line(73, 79),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 27, 2.82843);
g.add_edge(0, 35, 4.47214);
g.add_edge(0, 47, 4.47214);
g.add_edge(1, 25, 6.40312);
g.add_edge(1, 37, 1.41421);
g.add_edge(1, 69, 6.7082);
g.add_edge(2, 36, 4.12311);
g.add_edge(2, 40, 3);
g.add_edge(2, 64, 5);
g.add_edge(3, 20, 2.82843);
g.add_edge(3, 29, 4.47214);
g.add_edge(3, 72, 7.61577);
g.add_edge(4, 18, 5);
g.add_edge(4, 59, 2.82843);
g.add_edge(5, 11, 4.24264);
g.add_edge(5, 19, 3.16228);
g.add_edge(5, 23, 6.32456);
g.add_edge(5, 32, 1);
g.add_edge(5, 48, 7.28011);
g.add_edge(5, 75, 8.544);
g.add_edge(6, 43, 1.41421);
g.add_edge(6, 53, 6.40312);
g.add_edge(6, 78, 3.16228);
g.add_edge(7, 12, 2.23607);
g.add_edge(7, 50, 7.07107);
g.add_edge(7, 57, 4.12311);
g.add_edge(7, 58, 1);
g.add_edge(8, 26, 3.16228);
g.add_edge(8, 67, 7.07107);
g.add_edge(9, 31, 5.38516);
g.add_edge(9, 73, 4.47214);
g.add_edge(9, 76, 8.06226);
g.add_edge(10, 18, 5.65685);
g.add_edge(10, 67, 5);
g.add_edge(11, 40, 6.32456);
g.add_edge(11, 51, 8.24621);
g.add_edge(11, 78, 1.41421);
g.add_edge(12, 39, 5.83095);
g.add_edge(13, 15, 7.28011);
g.add_edge(13, 16, 1.41421);
g.add_edge(13, 79, 9.43398);
g.add_edge(14, 23, 4);
g.add_edge(14, 58, 1);
g.add_edge(15, 50, 2.23607);
g.add_edge(16, 34, 3.16228);
g.add_edge(16, 37, 4.47214);
g.add_edge(16, 43, 8.94427);
g.add_edge(17, 24, 8.24621);
g.add_edge(17, 35, 9);
g.add_edge(17, 64, 8.544);
g.add_edge(18, 47, 4.12311);
g.add_edge(19, 37, 5.09902);
g.add_edge(20, 55, 4.12311);
g.add_edge(20, 63, 5);
g.add_edge(21, 22, 4.24264);
g.add_edge(21, 33, 6.40312);
g.add_edge(21, 61, 2.23607);
g.add_edge(21, 79, 5.83095);
g.add_edge(22, 35, 6.7082);
g.add_edge(22, 71, 6.40312);
g.add_edge(23, 28, 3.60555);
g.add_edge(24, 36, 3.60555);
g.add_edge(25, 72, 5);
g.add_edge(26, 68, 7.07107);
g.add_edge(26, 70, 8.94427);
g.add_edge(27, 79, 3.60555);
g.add_edge(28, 62, 7.07107);
g.add_edge(28, 78, 5);
g.add_edge(29, 76, 7.07107);
g.add_edge(30, 37, 2.23607);
g.add_edge(30, 38, 2.23607);
g.add_edge(30, 51, 9.43398);
g.add_edge(31, 49, 4.12311);
g.add_edge(31, 57, 5);
g.add_edge(31, 74, 5.83095);
g.add_edge(32, 36, 6.40312);
g.add_edge(32, 73, 6);
g.add_edge(33, 48, 4.12311);
g.add_edge(33, 49, 4.12311);
g.add_edge(34, 38, 6);
g.add_edge(35, 54, 3.16228);
g.add_edge(37, 57, 5);
g.add_edge(39, 42, 7.28011);
g.add_edge(39, 43, 8.06226);
g.add_edge(41, 43, 12.0416);
g.add_edge(41, 56, 7.2111);
g.add_edge(41, 62, 5.65685);
g.add_edge(42, 60, 9.43398);
g.add_edge(42, 77, 7);
g.add_edge(43, 64, 8);
g.add_edge(44, 45, 8.60233);
g.add_edge(44, 69, 7.07107);
g.add_edge(45, 77, 5.09902);
g.add_edge(46, 54, 6.7082);
g.add_edge(46, 60, 9.05539);
g.add_edge(46, 79, 6);
g.add_edge(47, 51, 7.2111);
g.add_edge(48, 70, 2.23607);
g.add_edge(50, 53, 5);
g.add_edge(50, 65, 5);
g.add_edge(51, 55, 4.12311);
g.add_edge(52, 66, 9.43398);
g.add_edge(52, 74, 5);
g.add_edge(53, 68, 2.23607);
g.add_edge(53, 75, 2.82843);
g.add_edge(54, 55, 6.08276);
g.add_edge(55, 61, 3.60555);
g.add_edge(56, 72, 7.81025);
g.add_edge(56, 74, 2.23607);
g.add_edge(58, 66, 5.38516);
g.add_edge(59, 71, 1.41421);
g.add_edge(61, 70, 7.2111);
g.add_edge(62, 68, 2.23607);
g.add_edge(63, 65, 6.32456);
g.add_edge(64, 73, 4.12311);
g.add_edge(66, 79, 7);
g.add_edge(67, 76, 9.89949);
g.add_edge(71, 78, 5.83095);
g.add_edge(73, 79, 7.61577);
g.add_edge(74, 75, 3.60555);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 7.77);
g.set_importance(6, 0);
g.set_importance(7, 5.72);
g.set_importance(8, 6.39);
g.set_importance(9, 4.1);
g.set_importance(10, 0);
g.set_importance(11, 6.81);
g.set_importance(12, 8.49);
g.set_importance(13, 7.73);
g.set_importance(14, 4.4);
g.set_importance(15, 4.22);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 6.89);
g.set_importance(19, 5.14);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 2.32);
g.set_importance(24, 7.27);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 8.03);
g.set_importance(30, 5.35);
g.set_importance(31, 2.18);
g.set_importance(32, 5.59);
g.set_importance(33, 0);
g.set_importance(34, 9.83);
g.set_importance(35, 2.09);
g.set_importance(36, 6.89);
g.set_importance(37, 9.34);
g.set_importance(38, 7.4);
g.set_importance(39, 0);
g.set_importance(40, 7.31);
g.set_importance(41, 5.37);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 8.31);
g.set_importance(45, 0);
g.set_importance(46, 9.09);
g.set_importance(47, 1.52);
g.set_importance(48, 3.5);
g.set_importance(49, 8.02);
g.set_importance(50, 2.2);
g.set_importance(51, 0);
g.set_importance(52, 6.55);
g.set_importance(53, 4.81);
g.set_importance(54, 1.33);
g.set_importance(55, 0);
g.set_importance(56, 3.26);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 6.65);
g.set_importance(60, 6.64);
g.set_importance(61, 0);
g.set_importance(62, 0);
g.set_importance(63, 0);
g.set_importance(64, 9.38);
g.set_importance(65, 9.23);
g.set_importance(66, 0);
g.set_importance(67, 7.35);
g.set_importance(68, 7.89);
g.set_importance(69, 4.69);
g.set_importance(70, 2.48);
g.set_importance(71, 0);
g.set_importance(72, 9.7);
g.set_importance(73, 0);
g.set_importance(74, 2.8);
g.set_importance(75, 1.91);
g.set_importance(76, 9.83);
g.set_importance(77, 0);
g.set_importance(78, 3.92);
g.set_importance(79, 9.26);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 27), 1.46);
g.set_repair_time(Line(1, 25), 1.32);
g.set_repair_time(Line(1, 37), 1.8);
g.set_repair_time(Line(2, 36), 2.13);
g.set_repair_time(Line(2, 40), 3.44);
g.set_repair_time(Line(3, 20), 4.69);
g.set_repair_time(Line(3, 29), 4.4);
g.set_repair_time(Line(3, 72), 2.52);
g.set_repair_time(Line(4, 59), 3.31);
g.set_repair_time(Line(5, 11), 2.09);
g.set_repair_time(Line(5, 19), 3.57);
g.set_repair_time(Line(5, 23), 3.38);
g.set_repair_time(Line(5, 32), 3.94);
g.set_repair_time(Line(5, 48), 4.01);
g.set_repair_time(Line(6, 43), 3.5);
g.set_repair_time(Line(6, 53), 2.25);
g.set_repair_time(Line(7, 50), 3.41);
g.set_repair_time(Line(7, 57), 1.98);
g.set_repair_time(Line(7, 58), 3.42);
g.set_repair_time(Line(8, 26), 4.71);
g.set_repair_time(Line(8, 67), 1.61);
g.set_repair_time(Line(9, 31), 3.69);
g.set_repair_time(Line(9, 76), 1.05);
g.set_repair_time(Line(10, 18), 3.36);
g.set_repair_time(Line(11, 40), 2.85);
g.set_repair_time(Line(11, 51), 1.39);
g.set_repair_time(Line(11, 78), 1.18);
g.set_repair_time(Line(13, 15), 1.03);
g.set_repair_time(Line(13, 16), 1.94);
g.set_repair_time(Line(14, 23), 3.65);
g.set_repair_time(Line(14, 58), 2.44);
g.set_repair_time(Line(16, 34), 3.8);
g.set_repair_time(Line(16, 43), 4.73);
g.set_repair_time(Line(17, 24), 1.65);
g.set_repair_time(Line(17, 35), 1.38);
g.set_repair_time(Line(17, 64), 3.08);
g.set_repair_time(Line(18, 47), 3.17);
g.set_repair_time(Line(20, 55), 1.06);
g.set_repair_time(Line(20, 63), 1.95);
g.set_repair_time(Line(21, 33), 3.89);
g.set_repair_time(Line(21, 61), 1.74);
g.set_repair_time(Line(21, 79), 1.45);
g.set_repair_time(Line(22, 35), 1.42);
g.set_repair_time(Line(22, 71), 1.61);
g.set_repair_time(Line(24, 36), 2.86);
g.set_repair_time(Line(26, 70), 1.87);
g.set_repair_time(Line(27, 79), 4.33);
g.set_repair_time(Line(28, 62), 4.29);
g.set_repair_time(Line(29, 76), 3.35);
g.set_repair_time(Line(30, 37), 2.83);
g.set_repair_time(Line(30, 38), 2.64);
g.set_repair_time(Line(30, 51), 4.66);
g.set_repair_time(Line(31, 57), 4.74);
g.set_repair_time(Line(31, 74), 3.04);
g.set_repair_time(Line(32, 73), 2.37);
g.set_repair_time(Line(33, 49), 3.95);
g.set_repair_time(Line(34, 38), 3.98);
g.set_repair_time(Line(37, 57), 1.91);
g.set_repair_time(Line(39, 42), 2.95);
g.set_repair_time(Line(39, 43), 2.2);
g.set_repair_time(Line(41, 43), 3.62);
g.set_repair_time(Line(41, 56), 2.37);
g.set_repair_time(Line(41, 62), 1.02);
g.set_repair_time(Line(42, 60), 4.52);
g.set_repair_time(Line(42, 77), 2.94);
g.set_repair_time(Line(43, 64), 3.8);
g.set_repair_time(Line(45, 77), 3.45);
g.set_repair_time(Line(46, 54), 1.05);
g.set_repair_time(Line(46, 60), 2.55);
g.set_repair_time(Line(47, 51), 3.42);
g.set_repair_time(Line(50, 53), 1.92);
g.set_repair_time(Line(50, 65), 3.73);
g.set_repair_time(Line(52, 66), 1.59);
g.set_repair_time(Line(53, 68), 1.77);
g.set_repair_time(Line(55, 61), 1.01);
g.set_repair_time(Line(56, 74), 2.65);
g.set_repair_time(Line(58, 66), 4.4);
g.set_repair_time(Line(59, 71), 1.96);
g.set_repair_time(Line(63, 65), 2.22);
g.set_repair_time(Line(64, 73), 3.74);
g.set_repair_time(Line(66, 79), 3.15);
g.set_repair_time(Line(67, 76), 1.85);
g.set_repair_time(Line(71, 78), 1.89);
g.set_repair_time(Line(73, 79), 4.59);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 28.9607}, {2, 28.9661}, {3, 25.8359}, {4, 16.9941}, {5, 26.3122}, {6, 30.6324}, {7, 24.7739}, {8, 32.904}, {9, 23.1524}, {10, 17.8151}, {11, 24.9118}, {12, 27.569}, {13, 19.8349}, {14, 24.7739}, {15, 28.9351}, {16, 21.6027}, {17, 16.8402}, {18, 10.7441}, {19, 30.265}, {20, 22.3004}, {21, 15.3312}, {22, 13.9754}, {23, 29.7739}, {24, 27.1479}, {25, 36.9646}, {26, 36.8568}, {27, 3.53553}, {28, 32.9296}, {29, 31.4261}, {30, 26.3965}, {31, 29.8838}, {32, 25.0622}, {33, 23.3351}, {34, 25.5556}, {35, 5.59017}, {36, 31.6549}, {37, 27.1929}, {38, 29.1916}, {39, 34.8577}, {40, 32.7161}, {41, 46.6439}, {42, 38.6542}, {43, 32.4002}, {44, 46.1847}, {45, 53.778}, {46, 15.5425}, {47, 5.59017}, {48, 28.489}, {49, 28.489}, {50, 31.7302}, {51, 14.604}, {52, 28.5849}, {53, 37.9802}, {54, 9.54302}, {55, 17.1465}, {56, 37.63}, {57, 29.9278}, {58, 23.5239}, {59, 20.5296}, {60, 26.8617}, {61, 18.1262}, {62, 41.7684}, {63, 28.5504}, {64, 22.7161}, {65, 36.456}, {66, 16.7925}, {67, 24.0651}, {68, 40.7753}, {69, 37.3459}, {70, 27.1401}, {71, 21.9793}, {72, 35.3556}, {73, 17.5622}, {74, 34.8349}, {75, 36.9922}, {76, 33.2302}, {77, 47.4042}, {78, 26.6796}, {79, 8.04247}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 28.9607}, {1, 0}, {2, 26.5022}, {3, 23.7736}, {4, 31.7574}, {5, 12.0944}, {6, 20.306}, {7, 13.1716}, {8, 39.1228}, {9, 20.9992}, {10, 37.5942}, {11, 17.3977}, {12, 15.9667}, {13, 9.1257}, {14, 15.6716}, {15, 18.2258}, {16, 7.35794}, {17, 36.163}, {18, 30.5231}, {19, 8.14154}, {20, 26.6631}, {21, 28.2069}, {22, 33.5102}, {23, 20.0001}, {24, 25.8552}, {25, 8.00391}, {26, 35.17}, {27, 25.4251}, {28, 24.507}, {29, 29.3638}, {30, 4.56285}, {31, 14.2678}, {32, 13.3444}, {33, 24.5755}, {34, 11.3108}, {35, 33.0655}, {36, 21.3483}, {37, 1.76777}, {38, 7.35794}, {39, 23.2554}, {40, 25.3034}, {41, 33.0306}, {42, 32.3556}, {43, 18.5383}, {44, 17.2241}, {45, 27.977}, {46, 28.4182}, {47, 25.3692}, {48, 21.1945}, {49, 19.4216}, {50, 21.0209}, {51, 16.3553}, {52, 27.8065}, {53, 26.3099}, {54, 29.1127}, {55, 21.5092}, {56, 24.0167}, {57, 8.01777}, {58, 14.4216}, {59, 28.2219}, {60, 39.7374}, {61, 26.0161}, {62, 31.9001}, {63, 32.9131}, {64, 25.9983}, {65, 27.2709}, {66, 21.1531}, {67, 43.4514}, {68, 29.105}, {69, 8.38525}, {70, 23.9896}, {71, 26.4541}, {72, 14.2539}, {73, 20.8444}, {74, 21.5565}, {75, 22.7744}, {76, 31.077}, {77, 34.3508}, {78, 19.1655}, {79, 20.9182}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 28.9661}, {1, 26.5022}, {2, 0}, {3, 35.8068}, {4, 26.0155}, {5, 14.4078}, {6, 17.3763}, {7, 29.8135}, {8, 40.967}, {9, 16.9941}, {10, 39.3365}, {11, 11.6557}, {12, 32.6086}, {13, 29.1981}, {14, 27.3135}, {15, 34.4253}, {16, 27.4303}, {17, 16.93}, {18, 32.2655}, {19, 18.3606}, {20, 32.2712}, {21, 28.2123}, {22, 28.7161}, {23, 22.3135}, {24, 9.66082}, {25, 34.5061}, {26, 37.0141}, {27, 25.4305}, {28, 19.6735}, {29, 35.9107}, {30, 27.5295}, {31, 23.7255}, {32, 13.1578}, {33, 28.6618}, {34, 31.3832}, {35, 28.18}, {36, 5.15388}, {37, 24.7344}, {38, 30.3246}, {39, 26.3278}, {40, 3.75}, {41, 31.302}, {42, 35.428}, {43, 16.25}, {44, 43.7263}, {45, 50.5517}, {46, 28.4236}, {47, 30.9773}, {48, 23.5079}, {49, 28.8794}, {50, 31.6302}, {51, 21.9635}, {52, 35.8447}, {53, 25.3802}, {54, 32.1329}, {55, 27.1173}, {56, 32.3898}, {57, 29.9755}, {58, 28.5635}, {59, 22.4799}, {60, 39.7428}, {61, 31.0074}, {62, 28.5123}, {63, 38.5212}, {64, 6.25}, {65, 37.8802}, {66, 29.6736}, {67, 39.4462}, {68, 28.1753}, {69, 34.8874}, {70, 26.303}, {71, 20.7122}, {72, 40.7561}, {73, 11.4039}, {74, 29.5947}, {75, 25.0878}, {76, 27.0719}, {77, 44.178}, {78, 13.4235}, {79, 20.9236}, 