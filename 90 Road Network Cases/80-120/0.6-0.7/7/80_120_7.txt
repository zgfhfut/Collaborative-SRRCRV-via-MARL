node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 20, 22, 23, 27, 28, 29, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 51, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 77, 78,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 6), Line(0, 34), Line(0, 53), Line(0, 77), Line(1, 6), Line(1, 25), Line(1, 73), Line(2, 26), Line(2, 38), Line(2, 58), Line(2, 69), Line(3, 43), Line(3, 79), Line(4, 19), Line(4, 26), Line(4, 48), Line(5, 47), Line(5, 64), Line(7, 23), Line(7, 59), Line(8, 21), Line(8, 46), Line(8, 50), Line(8, 56), Line(8, 58), Line(9, 28), Line(9, 71), Line(10, 11), Line(10, 38), Line(10, 62), Line(11, 15), Line(11, 18), Line(11, 33), Line(11, 50), Line(11, 52), Line(12, 24), Line(12, 41), Line(12, 53), Line(12, 66), Line(12, 71), Line(13, 19), Line(13, 22), Line(14, 17), Line(14, 49), Line(15, 70), Line(15, 72), Line(16, 21), Line(16, 76), Line(17, 62), Line(18, 27), Line(18, 50), Line(18, 54), Line(18, 62), Line(19, 23), Line(20, 31), Line(20, 33), Line(20, 39), Line(20, 64), Line(22, 30), Line(24, 30), Line(24, 37), Line(25, 45), Line(25, 61), Line(26, 33), Line(27, 37), Line(28, 55), Line(28, 63), Line(29, 60), Line(29, 65), Line(31, 48), Line(31, 70), Line(32, 42), Line(32, 44), Line(33, 77), Line(33, 78), Line(34, 45), Line(34, 66), Line(34, 69), Line(34, 78), Line(35, 37), Line(35, 39), Line(35, 56), Line(35, 67), Line(36, 50), Line(36, 58), Line(36, 68), Line(39, 74), Line(40, 58), Line(40, 60), Line(40, 62), Line(40, 65), Line(41, 51), Line(41, 74), Line(42, 61), Line(42, 68), Line(43, 48), Line(44, 78), Line(45, 57), Line(45, 79), Line(46, 47), Line(46, 55), Line(46, 68), Line(49, 51), Line(50, 74), Line(51, 53), Line(52, 64), Line(54, 63), Line(56, 72), Line(56, 75), Line(57, 67), Line(57, 77), Line(58, 76), Line(59, 60), Line(59, 66), Line(59, 79), Line(63, 65), Line(63, 67), Line(66, 73), Line(67, 71), Line(68, 75),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 34), Line(1, 6), Line(2, 69), Line(3, 43), Line(4, 19), Line(4, 48), Line(5, 64), Line(7, 23), Line(7, 59), Line(8, 21), Line(8, 46), Line(8, 56), Line(8, 58), Line(9, 28), Line(9, 71), Line(10, 11), Line(10, 38), Line(11, 18), Line(11, 50), Line(12, 41), Line(12, 53), Line(12, 66), Line(12, 71), Line(13, 19), Line(14, 17), Line(15, 70), Line(15, 72), Line(16, 76), Line(17, 62), Line(18, 27), Line(18, 50), Line(20, 64), Line(24, 30), Line(24, 37), Line(25, 45), Line(27, 37), Line(28, 63), Line(29, 60), Line(29, 65), Line(31, 48), Line(31, 70), Line(32, 44), Line(33, 77), Line(33, 78), Line(34, 45), Line(34, 66), Line(34, 69), Line(34, 78), Line(35, 37), Line(35, 39), Line(35, 56), Line(35, 67), Line(36, 50), Line(36, 58), Line(36, 68), Line(39, 74), Line(40, 58), Line(40, 60), Line(40, 62), Line(41, 51), Line(41, 74), Line(42, 61), Line(42, 68), Line(43, 48), Line(44, 78), Line(45, 57), Line(45, 79), Line(46, 47), Line(46, 68), Line(50, 74), Line(51, 53), Line(52, 64), Line(54, 63), Line(56, 75), Line(57, 67), Line(57, 77), Line(59, 60), Line(59, 66), Line(59, 79), Line(63, 65), Line(63, 67), Line(66, 73), Line(67, 71), Line(68, 75),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 6, 3);
g.add_edge(0, 34, 8.94427);
g.add_edge(0, 53, 7.28011);
g.add_edge(0, 77, 6.08276);
g.add_edge(1, 6, 7.81025);
g.add_edge(1, 25, 5.09902);
g.add_edge(1, 73, 3.16228);
g.add_edge(2, 26, 2.23607);
g.add_edge(2, 38, 3.60555);
g.add_edge(2, 58, 6.32456);
g.add_edge(2, 69, 8.60233);
g.add_edge(3, 43, 4.12311);
g.add_edge(3, 79, 1);
g.add_edge(4, 19, 6);
g.add_edge(4, 26, 1);
g.add_edge(4, 48, 9.84886);
g.add_edge(5, 47, 2);
g.add_edge(5, 64, 8);
g.add_edge(7, 23, 7);
g.add_edge(7, 59, 3.16228);
g.add_edge(8, 21, 5);
g.add_edge(8, 46, 6.32456);
g.add_edge(8, 50, 5.65685);
g.add_edge(8, 56, 6.40312);
g.add_edge(8, 58, 6.40312);
g.add_edge(9, 28, 1.41421);
g.add_edge(9, 71, 7.61577);
g.add_edge(10, 11, 4.12311);
g.add_edge(10, 38, 5.65685);
g.add_edge(10, 62, 3.16228);
g.add_edge(11, 15, 5.83095);
g.add_edge(11, 18, 6.32456);
g.add_edge(11, 33, 4.12311);
g.add_edge(11, 50, 5.38516);
g.add_edge(11, 52, 6.7082);
g.add_edge(12, 24, 3.16228);
g.add_edge(12, 41, 1.41421);
g.add_edge(12, 53, 1);
g.add_edge(12, 66, 10.6301);
g.add_edge(12, 71, 9.21954);
g.add_edge(13, 19, 8.06226);
g.add_edge(13, 22, 3.16228);
g.add_edge(14, 17, 1.41421);
g.add_edge(14, 49, 4.47214);
g.add_edge(15, 70, 4.12311);
g.add_edge(15, 72, 4.47214);
g.add_edge(16, 21, 1.41421);
g.add_edge(16, 76, 3);
g.add_edge(17, 62, 3.16228);
g.add_edge(18, 27, 2.82843);
g.add_edge(18, 50, 5);
g.add_edge(18, 54, 2.23607);
g.add_edge(18, 62, 6.08276);
g.add_edge(19, 23, 5.38516);
g.add_edge(20, 31, 1.41421);
g.add_edge(20, 33, 3);
g.add_edge(20, 39, 7.81025);
g.add_edge(20, 64, 3);
g.add_edge(22, 30, 6.32456);
g.add_edge(24, 30, 6.32456);
g.add_edge(24, 37, 3.16228);
g.add_edge(25, 45, 4.47214);
g.add_edge(25, 61, 7.28011);
g.add_edge(26, 33, 7.2111);
g.add_edge(27, 37, 3);
g.add_edge(28, 55, 7.07107);
g.add_edge(28, 63, 4.24264);
g.add_edge(29, 60, 5);
g.add_edge(29, 65, 5.83095);
g.add_edge(31, 48, 5.38516);
g.add_edge(31, 70, 1);
g.add_edge(32, 42, 6.7082);
g.add_edge(32, 44, 3);
g.add_edge(33, 77, 3.60555);
g.add_edge(33, 78, 1.41421);
g.add_edge(34, 45, 10);
g.add_edge(34, 66, 9);
g.add_edge(34, 69, 10.8167);
g.add_edge(34, 78, 7.2111);
g.add_edge(35, 37, 4.47214);
g.add_edge(35, 39, 10.2956);
g.add_edge(35, 56, 9.21954);
g.add_edge(35, 67, 7.28011);
g.add_edge(36, 50, 7.28011);
g.add_edge(36, 58, 8.24621);
g.add_edge(36, 68, 7.07107);
g.add_edge(39, 74, 9.21954);
g.add_edge(40, 58, 7.61577);
g.add_edge(40, 60, 2.82843);
g.add_edge(40, 62, 5);
g.add_edge(40, 65, 2.23607);
g.add_edge(41, 51, 7);
g.add_edge(41, 74, 7.81025);
g.add_edge(42, 61, 3.60555);
g.add_edge(42, 68, 5);
g.add_edge(43, 48, 8.24621);
g.add_edge(44, 78, 2.82843);
g.add_edge(45, 57, 5.65685);
g.add_edge(45, 79, 9.48683);
g.add_edge(46, 47, 7.07107);
g.add_edge(46, 55, 1);
g.add_edge(46, 68, 2.23607);
g.add_edge(49, 51, 2.23607);
g.add_edge(50, 74, 2.23607);
g.add_edge(51, 53, 6);
g.add_edge(52, 64, 7.07107);
g.add_edge(54, 63, 2.23607);
g.add_edge(56, 72, 5.09902);
g.add_edge(56, 75, 5.83095);
g.add_edge(57, 67, 2.23607);
g.add_edge(57, 77, 1);
g.add_edge(58, 76, 9.21954);
g.add_edge(59, 60, 4);
g.add_edge(59, 66, 7.2111);
g.add_edge(59, 79, 5);
g.add_edge(63, 65, 4.12311);
g.add_edge(63, 67, 4.47214);
g.add_edge(66, 73, 3.60555);
g.add_edge(67, 71, 7.07107);
g.add_edge(68, 75, 4.24264);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 4.27);
g.set_importance(7, 4.29);
g.set_importance(8, 0);
g.set_importance(9, 3.58);
g.set_importance(10, 2.7);
g.set_importance(11, 6.74);
g.set_importance(12, 0);
g.set_importance(13, 6.27);
g.set_importance(14, 9.18);
g.set_importance(15, 4.88);
g.set_importance(16, 0);
g.set_importance(17, 2.25);
g.set_importance(18, 7.99);
g.set_importance(19, 0);
g.set_importance(20, 6.17);
g.set_importance(21, 0);
g.set_importance(22, 4.16);
g.set_importance(23, 5.83);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 6.93);
g.set_importance(28, 7.35);
g.set_importance(29, 1.3);
g.set_importance(30, 0);
g.set_importance(31, 8.08);
g.set_importance(32, 5.13);
g.set_importance(33, 0);
g.set_importance(34, 8.48);
g.set_importance(35, 3.15);
g.set_importance(36, 0);
g.set_importance(37, 1.18);
g.set_importance(38, 5.15);
g.set_importance(39, 0);
g.set_importance(40, 2.04);
g.set_importance(41, 5.26);
g.set_importance(42, 6.05);
g.set_importance(43, 1.21);
g.set_importance(44, 6.58);
g.set_importance(45, 9.11);
g.set_importance(46, 6.83);
g.set_importance(47, 3.2);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 0);
g.set_importance(51, 9.44);
g.set_importance(52, 0);
g.set_importance(53, 6.75);
g.set_importance(54, 0);
g.set_importance(55, 5.67);
g.set_importance(56, 9.85);
g.set_importance(57, 9.01);
g.set_importance(58, 0);
g.set_importance(59, 9.27);
g.set_importance(60, 0);
g.set_importance(61, 6.49);
g.set_importance(62, 0);
g.set_importance(63, 4.19);
g.set_importance(64, 3.3);
g.set_importance(65, 9.89);
g.set_importance(66, 8.59);
g.set_importance(67, 6.16);
g.set_importance(68, 7.75);
g.set_importance(69, 0);
g.set_importance(70, 0);
g.set_importance(71, 4.12);
g.set_importance(72, 0);
g.set_importance(73, 7.76);
g.set_importance(74, 2.36);
g.set_importance(75, 0);
g.set_importance(76, 0);
g.set_importance(77, 9.36);
g.set_importance(78, 6.75);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 34), 2.44);
g.set_repair_time(Line(1, 6), 1.4);
g.set_repair_time(Line(2, 69), 4.04);
g.set_repair_time(Line(3, 43), 4.56);
g.set_repair_time(Line(4, 19), 1.09);
g.set_repair_time(Line(4, 48), 3);
g.set_repair_time(Line(5, 64), 4.58);
g.set_repair_time(Line(7, 23), 2.21);
g.set_repair_time(Line(7, 59), 1.92);
g.set_repair_time(Line(8, 21), 3);
g.set_repair_time(Line(8, 46), 4.83);
g.set_repair_time(Line(8, 56), 4.49);
g.set_repair_time(Line(8, 58), 3.53);
g.set_repair_time(Line(9, 28), 3.75);
g.set_repair_time(Line(9, 71), 2.19);
g.set_repair_time(Line(10, 11), 2.27);
g.set_repair_time(Line(10, 38), 3.82);
g.set_repair_time(Line(11, 18), 4.35);
g.set_repair_time(Line(11, 50), 1.35);
g.set_repair_time(Line(12, 41), 3.1);
g.set_repair_time(Line(12, 53), 4.36);
g.set_repair_time(Line(12, 66), 4.42);
g.set_repair_time(Line(12, 71), 2.14);
g.set_repair_time(Line(13, 19), 3.68);
g.set_repair_time(Line(14, 17), 1.53);
g.set_repair_time(Line(15, 70), 2.14);
g.set_repair_time(Line(15, 72), 4.59);
g.set_repair_time(Line(16, 76), 3.65);
g.set_repair_time(Line(17, 62), 4.78);
g.set_repair_time(Line(18, 27), 3.31);
g.set_repair_time(Line(18, 50), 4.7);
g.set_repair_time(Line(20, 64), 3.23);
g.set_repair_time(Line(24, 30), 4.88);
g.set_repair_time(Line(24, 37), 1);
g.set_repair_time(Line(25, 45), 3.13);
g.set_repair_time(Line(27, 37), 3.88);
g.set_repair_time(Line(28, 63), 4.32);
g.set_repair_time(Line(29, 60), 3.29);
g.set_repair_time(Line(29, 65), 1.02);
g.set_repair_time(Line(31, 48), 1.58);
g.set_repair_time(Line(31, 70), 2.05);
g.set_repair_time(Line(32, 44), 3.11);
g.set_repair_time(Line(33, 77), 3.63);
g.set_repair_time(Line(33, 78), 2.4);
g.set_repair_time(Line(34, 45), 2.05);
g.set_repair_time(Line(34, 66), 3.46);
g.set_repair_time(Line(34, 69), 2.96);
g.set_repair_time(Line(34, 78), 3.78);
g.set_repair_time(Line(35, 37), 1.25);
g.set_repair_time(Line(35, 39), 4.19);
g.set_repair_time(Line(35, 56), 4.72);
g.set_repair_time(Line(35, 67), 1.14);
g.set_repair_time(Line(36, 50), 2.77);
g.set_repair_time(Line(36, 58), 3.34);
g.set_repair_time(Line(36, 68), 1.64);
g.set_repair_time(Line(39, 74), 2.75);
g.set_repair_time(Line(40, 58), 1.43);
g.set_repair_time(Line(40, 60), 4.56);
g.set_repair_time(Line(40, 62), 2.06);
g.set_repair_time(Line(41, 51), 1.48);
g.set_repair_time(Line(41, 74), 3.72);
g.set_repair_time(Line(42, 61), 4.27);
g.set_repair_time(Line(42, 68), 4.99);
g.set_repair_time(Line(43, 48), 2.44);
g.set_repair_time(Line(44, 78), 4.39);
g.set_repair_time(Line(45, 57), 2.71);
g.set_repair_time(Line(45, 79), 4.24);
g.set_repair_time(Line(46, 47), 1.04);
g.set_repair_time(Line(46, 68), 4.9);
g.set_repair_time(Line(50, 74), 2.82);
g.set_repair_time(Line(51, 53), 3.89);
g.set_repair_time(Line(52, 64), 4.69);
g.set_repair_time(Line(54, 63), 2.73);
g.set_repair_time(Line(56, 75), 2.1);
g.set_repair_time(Line(57, 67), 1.51);
g.set_repair_time(Line(57, 77), 3.88);
g.set_repair_time(Line(59, 60), 3.45);
g.set_repair_time(Line(59, 66), 1.88);
g.set_repair_time(Line(59, 79), 3.91);
g.set_repair_time(Line(63, 65), 1.57);
g.set_repair_time(Line(63, 67), 2.41);
g.set_repair_time(Line(66, 73), 2.34);
g.set_repair_time(Line(67, 71), 4.64);
g.set_repair_time(Line(68, 75), 4.48);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 13.5128}, {2, 23.9194}, {3, 29.0331}, {4, 22.3743}, {5, 29.6104}, {6, 3.75}, {7, 34.9393}, {8, 31.0668}, {9, 24.3098}, {10, 22.4182}, {11, 17.2643}, {12, 10.3501}, {13, 34.0672}, {14, 24.9854}, {15, 24.032}, {16, 39.0846}, {17, 26.7532}, {18, 22.8289}, {19, 29.8743}, {20, 15.8604}, {21, 37.3168}, {22, 30.1144}, {23, 36.6057}, {24, 14.303}, {25, 19.8866}, {26, 21.1243}, {27, 22.0058}, {28, 22.542}, {29, 29.6813}, {30, 22.2087}, {31, 17.6282}, {32, 21.1637}, {33, 12.1104}, {34, 11.1803}, {35, 20.7487}, {36, 33.0959}, {37, 18.2558}, {38, 28.4263}, {39, 25.6232}, {40, 25.1877}, {41, 12.1179}, {42, 29.5489}, {43, 34.1869}, {44, 17.4137}, {45, 15.9245}, {46, 32.6308}, {47, 32.1104}, {48, 24.3596}, {49, 19.3952}, {50, 23.9957}, {51, 16.6001}, {52, 25.6495}, {53, 9.10014}, {54, 20.0338}, {55, 31.3808}, {56, 32.2731}, {57, 8.85345}, {58, 31.825}, {59, 30.9865}, {60, 28.7232}, {61, 28.9867}, {62, 26.371}, {63, 17.2387}, {64, 19.6104}, {65, 22.3926}, {66, 21.9726}, {67, 11.6485}, {68, 35.4259}, {69, 24.7012}, {70, 18.8782}, {71, 20.4874}, {72, 29.6222}, {73, 17.4657}, {74, 21.8807}, {75, 39.5618}, {76, 42.8346}, {77, 7.60345}, {78, 13.8782}, {79, 27.7831}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 13.5128}, {1, 0}, {2, 36.6009}, {3, 24.9737}, {4, 35.0558}, {5, 40.3648}, {6, 9.76281}, {7, 21.4265}, {8, 36.9316}, {9, 34.4913}, {10, 35.0997}, {11, 29.9458}, {12, 21.7475}, {13, 45.4646}, {14, 37.9798}, {15, 36.7136}, {16, 44.9494}, {17, 36.212}, {18, 33.0104}, {19, 36.908}, {20, 28.542}, {21, 43.1816}, {22, 41.5117}, {23, 30.1765}, {24, 25.7003}, {25, 6.37377}, {26, 33.8058}, {27, 33.4032}, {28, 32.7236}, {29, 28.7237}, {30, 33.606}, {31, 30.3097}, {32, 28.3661}, {33, 24.792}, {34, 19.7098}, {35, 30.9302}, {36, 35.0697}, {37, 29.6532}, {38, 41.1079}, {39, 38.3048}, {40, 26.0092}, {41, 23.5152}, {42, 19.9809}, {43, 30.1275}, {44, 30.0953}, {45, 11.9639}, {46, 29.0259}, {47, 37.8648}, {48, 37.0412}, {49, 32.908}, {50, 36.0731}, {51, 30.1129}, {52, 38.3311}, {53, 22.6129}, {54, 30.2154}, {55, 30.2759}, {56, 38.8228}, {57, 19.035}, {58, 35.5289}, {59, 17.4737}, {60, 22.4737}, {61, 15.4739}, {62, 32.2592}, {63, 27.4203}, {64, 32.292}, {65, 28.8043}, {66, 8.45979}, {67, 21.8301}, {68, 26.2309}, {69, 33.2306}, {70, 31.5597}, {71, 30.6689}, {72, 42.3038}, {73, 3.95285}, {74, 33.278}, {75, 31.5342}, {76, 47.0533}, {77, 20.285}, {78, 26.5597}, {79, 23.7237}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 23.9194}, {1, 36.6009}, {2, 0}, {3, 31.8178}, {4, 4.04508}, {5, 29.309}, {6, 27.6694}, {7, 27.0265}, {8, 15.9096}, {9, 32.4454}, {10, 11.578}, {11, 16.7319}, {12, 34.2695}, {13, 21.6229}, {14, 21.2515}, {15, 23.7306}, {16, 23.1801}, {17, 19.4837}, {18, 23.1343}, {19, 11.5451}, {20, 15.559}, {21, 22.1596}, {22, 25.5758}, {23, 18.2765}, {24, 34.3727}, {25, 30.2271}, {26, 2.79508}, {27, 26.6698}, {28, 30.6777}, {29, 27.2109}, {30, 33.4814}, {31, 17.3267}, {32, 20.8623}, {33, 11.809}, {34, 22.5906}, {35, 29.4611}, {36, 18.2135}, {37, 30.4198}, {38, 4.50694}, {39, 25.3218}, {40, 17.4254}, {41, 35.5386}, {42, 29.2475}, {43, 26.6639}, {44, 17.1123}, {45, 24.637}, {46, 23.8153}, {47, 31.809}, {48, 16.3562}, {49, 26.8416}, {50, 22.9807}, {51, 29.6367}, {52, 25.1171}, {53, 33.0195}, {54, 25.9294}, {55, 25.0653}, {56, 23.9135}, {57, 17.5659}, {58, 7.90569}, {59, 25.9609}, {60, 20.9609}, {61, 33.7545}, {62, 15.5309}, {63, 25.3744}, {64, 19.309}, {65, 20.2205}, {66, 33.8406}, {67, 20.361}, {68, 26.6104}, {69, 10.7529}, {70, 18.5767}, {71, 29.1998}, {72, 29.3208}, {73, 38.3475}, {74, 25.7758}, {75, 31.2022}, {76, 19.4301}, {77, 16.3159}, {78, 13.5767}, {79, 32.2109}, 