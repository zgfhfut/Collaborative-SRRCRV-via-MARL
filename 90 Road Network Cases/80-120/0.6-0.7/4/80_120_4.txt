node_num : 80
demand_node_num : 48
edge_num : 120
damaged_edge_num : 84
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 76, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 1), Line(0, 50), Line(0, 53), Line(0, 56), Line(0, 71), Line(1, 18), Line(1, 23), Line(1, 54), Line(2, 27), Line(2, 31), Line(2, 45), Line(2, 64), Line(2, 68), Line(3, 33), Line(3, 43), Line(3, 70), Line(3, 75), Line(4, 44), Line(4, 48), Line(5, 14), Line(5, 21), Line(5, 29), Line(5, 72), Line(5, 79), Line(6, 19), Line(6, 55), Line(7, 69), Line(7, 73), Line(7, 77), Line(8, 36), Line(8, 43), Line(8, 58), Line(9, 12), Line(9, 24), Line(9, 59), Line(10, 12), Line(10, 46), Line(11, 24), Line(11, 35), Line(12, 37), Line(13, 36), Line(13, 55), Line(13, 72), Line(14, 23), Line(14, 25), Line(14, 29), Line(15, 26), Line(15, 63), Line(16, 67), Line(16, 72), Line(16, 76), Line(17, 64), Line(17, 74), Line(18, 42), Line(18, 45), Line(19, 52), Line(19, 54), Line(20, 52), Line(20, 54), Line(21, 23), Line(21, 43), Line(21, 60), Line(22, 23), Line(22, 33), Line(22, 46), Line(22, 62), Line(23, 74), Line(24, 25), Line(24, 54), Line(25, 31), Line(26, 36), Line(26, 76), Line(27, 28), Line(27, 51), Line(27, 65), Line(28, 32), Line(29, 30), Line(30, 43), Line(31, 35), Line(32, 74), Line(33, 65), Line(33, 75), Line(34, 44), Line(34, 62), Line(35, 50), Line(37, 48), Line(37, 56), Line(37, 57), Line(37, 64), Line(38, 49), Line(38, 50), Line(38, 78), Line(39, 47), Line(39, 54), Line(39, 56), Line(40, 67), Line(40, 69), Line(41, 51), Line(41, 59), Line(41, 66), Line(42, 61), Line(45, 54), Line(45, 75), Line(46, 71), Line(47, 73), Line(48, 53), Line(49, 77), Line(51, 69), Line(52, 56), Line(53, 59), Line(53, 64), Line(55, 56), Line(55, 57), Line(57, 68), Line(58, 61), Line(60, 63), Line(66, 67), Line(66, 68), Line(70, 76), Line(78, 79),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 1), Line(0, 50), Line(0, 56), Line(0, 71), Line(1, 18), Line(1, 54), Line(2, 27), Line(2, 31), Line(2, 45), Line(2, 64), Line(3, 33), Line(4, 48), Line(5, 14), Line(5, 21), Line(5, 29), Line(5, 72), Line(6, 19), Line(6, 55), Line(7, 69), Line(7, 77), Line(9, 12), Line(9, 24), Line(9, 59), Line(11, 35), Line(13, 36), Line(13, 55), Line(13, 72), Line(14, 25), Line(14, 29), Line(15, 26), Line(15, 63), Line(16, 67), Line(16, 72), Line(16, 76), Line(17, 74), Line(18, 42), Line(18, 45), Line(19, 52), Line(19, 54), Line(21, 23), Line(21, 43), Line(21, 60), Line(22, 23), Line(22, 33), Line(22, 46), Line(23, 74), Line(25, 31), Line(26, 36), Line(27, 65), Line(28, 32), Line(29, 30), Line(30, 43), Line(31, 35), Line(32, 74), Line(33, 65), Line(33, 75), Line(34, 44), Line(34, 62), Line(37, 48), Line(37, 64), Line(38, 49), Line(38, 50), Line(38, 78), Line(39, 54), Line(40, 67), Line(40, 69), Line(41, 51), Line(41, 59), Line(42, 61), Line(45, 75), Line(47, 73), Line(49, 77), Line(51, 69), Line(52, 56), Line(53, 59), Line(53, 64), Line(55, 56), Line(55, 57), Line(57, 68), Line(58, 61), Line(66, 67), Line(66, 68), Line(70, 76), Line(78, 79),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 1, 2.23607);
g.add_edge(0, 50, 3);
g.add_edge(0, 53, 8.06226);
g.add_edge(0, 56, 10);
g.add_edge(0, 71, 4.47214);
g.add_edge(1, 18, 7.07107);
g.add_edge(1, 23, 7);
g.add_edge(1, 54, 6.08276);
g.add_edge(2, 27, 3.60555);
g.add_edge(2, 31, 9.21954);
g.add_edge(2, 45, 6.08276);
g.add_edge(2, 64, 5.38516);
g.add_edge(2, 68, 5.09902);
g.add_edge(3, 33, 3);
g.add_edge(3, 43, 7.61577);
g.add_edge(3, 70, 7.81025);
g.add_edge(3, 75, 7.28011);
g.add_edge(4, 44, 3.60555);
g.add_edge(4, 48, 3.60555);
g.add_edge(5, 14, 9.84886);
g.add_edge(5, 21, 5.38516);
g.add_edge(5, 29, 6.7082);
g.add_edge(5, 72, 8);
g.add_edge(5, 79, 9.05539);
g.add_edge(6, 19, 6.7082);
g.add_edge(6, 55, 2);
g.add_edge(7, 69, 4.47214);
g.add_edge(7, 73, 6.32456);
g.add_edge(7, 77, 5);
g.add_edge(8, 36, 1.41421);
g.add_edge(8, 43, 9.84886);
g.add_edge(8, 58, 7.07107);
g.add_edge(9, 12, 2.23607);
g.add_edge(9, 24, 3.60555);
g.add_edge(9, 59, 6.32456);
g.add_edge(10, 12, 4.12311);
g.add_edge(10, 46, 3.16228);
g.add_edge(11, 24, 2);
g.add_edge(11, 35, 2.82843);
g.add_edge(12, 37, 5);
g.add_edge(13, 36, 1);
g.add_edge(13, 55, 4.24264);
g.add_edge(13, 72, 1);
g.add_edge(14, 23, 9.21954);
g.add_edge(14, 25, 2.82843);
g.add_edge(14, 29, 3.16228);
g.add_edge(15, 26, 7.07107);
g.add_edge(15, 63, 9.21954);
g.add_edge(16, 67, 8.06226);
g.add_edge(16, 72, 10.6301);
g.add_edge(16, 76, 7.07107);
g.add_edge(17, 64, 5);
g.add_edge(17, 74, 6.7082);
g.add_edge(18, 42, 8.544);
g.add_edge(18, 45, 4.12311);
g.add_edge(19, 52, 3.16228);
g.add_edge(19, 54, 5.83095);
g.add_edge(20, 52, 8);
g.add_edge(20, 54, 8.94427);
g.add_edge(21, 23, 5);
g.add_edge(21, 43, 4);
g.add_edge(21, 60, 3.16228);
g.add_edge(22, 23, 2.82843);
g.add_edge(22, 33, 2);
g.add_edge(22, 46, 5.38516);
g.add_edge(22, 62, 1.41421);
g.add_edge(23, 74, 4.47214);
g.add_edge(24, 25, 3.60555);
g.add_edge(24, 54, 8);
g.add_edge(25, 31, 7);
g.add_edge(26, 36, 7);
g.add_edge(26, 76, 1.41421);
g.add_edge(27, 28, 8.544);
g.add_edge(27, 51, 4.12311);
g.add_edge(27, 65, 5);
g.add_edge(28, 32, 3.16228);
g.add_edge(29, 30, 2.23607);
g.add_edge(30, 43, 2.23607);
g.add_edge(31, 35, 4);
g.add_edge(32, 74, 6.08276);
g.add_edge(33, 65, 1);
g.add_edge(33, 75, 4.47214);
g.add_edge(34, 44, 5);
g.add_edge(34, 62, 6.40312);
g.add_edge(35, 50, 3.60555);
g.add_edge(37, 48, 8.06226);
g.add_edge(37, 56, 10.6301);
g.add_edge(37, 57, 6.7082);
g.add_edge(37, 64, 8.06226);
g.add_edge(38, 49, 5.65685);
g.add_edge(38, 50, 7.07107);
g.add_edge(38, 78, 8.06226);
g.add_edge(39, 47, 5.83095);
g.add_edge(39, 54, 5);
g.add_edge(39, 56, 3.60555);
g.add_edge(40, 67, 4.12311);
g.add_edge(40, 69, 7.61577);
g.add_edge(41, 51, 8.48528);
g.add_edge(41, 59, 8.60233);
g.add_edge(41, 66, 7.07107);
g.add_edge(42, 61, 5.38516);
g.add_edge(45, 54, 4);
g.add_edge(45, 75, 7.61577);
g.add_edge(46, 71, 3);
g.add_edge(47, 73, 2.82843);
g.add_edge(48, 53, 1);
g.add_edge(49, 77, 4.12311);
g.add_edge(51, 69, 7.61577);
g.add_edge(52, 56, 11.4018);
g.add_edge(53, 59, 1.41421);
g.add_edge(53, 64, 4.12311);
g.add_edge(55, 56, 4.12311);
g.add_edge(55, 57, 1);
g.add_edge(57, 68, 2.23607);
g.add_edge(58, 61, 4.12311);
g.add_edge(60, 63, 9);
g.add_edge(66, 67, 8.544);
g.add_edge(66, 68, 4.24264);
g.add_edge(70, 76, 8.544);
g.add_edge(78, 79, 4.47214);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 1.19);
g.set_importance(6, 1.04);
g.set_importance(7, 8.23);
g.set_importance(8, 8.79);
g.set_importance(9, 1.09);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 7.02);
g.set_importance(17, 6.51);
g.set_importance(18, 7.31);
g.set_importance(19, 7.69);
g.set_importance(20, 1.27);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 5.44);
g.set_importance(24, 0);
g.set_importance(25, 6.24);
g.set_importance(26, 8.74);
g.set_importance(27, 5.87);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 4.64);
g.set_importance(31, 7.92);
g.set_importance(32, 2.46);
g.set_importance(33, 5.79);
g.set_importance(34, 9.21);
g.set_importance(35, 2.19);
g.set_importance(36, 9.55);
g.set_importance(37, 9.04);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 9.51);
g.set_importance(41, 0);
g.set_importance(42, 3.21);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 3.18);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 6.24);
g.set_importance(49, 3.44);
g.set_importance(50, 3.8);
g.set_importance(51, 7.4);
g.set_importance(52, 0);
g.set_importance(53, 6.43);
g.set_importance(54, 9.87);
g.set_importance(55, 0);
g.set_importance(56, 4.14);
g.set_importance(57, 3.21);
g.set_importance(58, 7.69);
g.set_importance(59, 4.6);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 4.31);
g.set_importance(63, 5.63);
g.set_importance(64, 1.41);
g.set_importance(65, 6.96);
g.set_importance(66, 6.33);
g.set_importance(67, 4.9);
g.set_importance(68, 4.93);
g.set_importance(69, 0);
g.set_importance(70, 0);
g.set_importance(71, 2.97);
g.set_importance(72, 0);
g.set_importance(73, 8.88);
g.set_importance(74, 2.68);
g.set_importance(75, 0);
g.set_importance(76, 5.64);
g.set_importance(77, 0);
g.set_importance(78, 3.37);
g.set_importance(79, 4.35);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 1), 3.29);
g.set_repair_time(Line(0, 50), 1.36);
g.set_repair_time(Line(0, 56), 4.48);
g.set_repair_time(Line(0, 71), 4.1);
g.set_repair_time(Line(1, 18), 3.19);
g.set_repair_time(Line(1, 54), 1.24);
g.set_repair_time(Line(2, 27), 4.86);
g.set_repair_time(Line(2, 31), 2.94);
g.set_repair_time(Line(2, 45), 1.14);
g.set_repair_time(Line(2, 64), 3.7);
g.set_repair_time(Line(3, 33), 1.09);
g.set_repair_time(Line(4, 48), 3.14);
g.set_repair_time(Line(5, 14), 2.79);
g.set_repair_time(Line(5, 21), 1.63);
g.set_repair_time(Line(5, 29), 1.37);
g.set_repair_time(Line(5, 72), 1.27);
g.set_repair_time(Line(6, 19), 3.3);
g.set_repair_time(Line(6, 55), 1.28);
g.set_repair_time(Line(7, 69), 3.29);
g.set_repair_time(Line(7, 77), 2.99);
g.set_repair_time(Line(9, 12), 4.48);
g.set_repair_time(Line(9, 24), 1.7);
g.set_repair_time(Line(9, 59), 4.67);
g.set_repair_time(Line(11, 35), 3.03);
g.set_repair_time(Line(13, 36), 2.68);
g.set_repair_time(Line(13, 55), 2.57);
g.set_repair_time(Line(13, 72), 3.51);
g.set_repair_time(Line(14, 25), 4.54);
g.set_repair_time(Line(14, 29), 1.17);
g.set_repair_time(Line(15, 26), 1.78);
g.set_repair_time(Line(15, 63), 4.29);
g.set_repair_time(Line(16, 67), 4);
g.set_repair_time(Line(16, 72), 2.29);
g.set_repair_time(Line(16, 76), 1.01);
g.set_repair_time(Line(17, 74), 4.36);
g.set_repair_time(Line(18, 42), 4.34);
g.set_repair_time(Line(18, 45), 3.65);
g.set_repair_time(Line(19, 52), 1.07);
g.set_repair_time(Line(19, 54), 1.28);
g.set_repair_time(Line(21, 23), 2.53);
g.set_repair_time(Line(21, 43), 3.36);
g.set_repair_time(Line(21, 60), 2.9);
g.set_repair_time(Line(22, 23), 3.08);
g.set_repair_time(Line(22, 33), 2.16);
g.set_repair_time(Line(22, 46), 4.41);
g.set_repair_time(Line(23, 74), 4.22);
g.set_repair_time(Line(25, 31), 1.17);
g.set_repair_time(Line(26, 36), 4.65);
g.set_repair_time(Line(27, 65), 1.11);
g.set_repair_time(Line(28, 32), 2.36);
g.set_repair_time(Line(29, 30), 4.96);
g.set_repair_time(Line(30, 43), 3.42);
g.set_repair_time(Line(31, 35), 1.68);
g.set_repair_time(Line(32, 74), 2.48);
g.set_repair_time(Line(33, 65), 2.33);
g.set_repair_time(Line(33, 75), 4.39);
g.set_repair_time(Line(34, 44), 4.05);
g.set_repair_time(Line(34, 62), 1.24);
g.set_repair_time(Line(37, 48), 4.99);
g.set_repair_time(Line(37, 64), 4.27);
g.set_repair_time(Line(38, 49), 2.22);
g.set_repair_time(Line(38, 50), 2.49);
g.set_repair_time(Line(38, 78), 3.62);
g.set_repair_time(Line(39, 54), 1.53);
g.set_repair_time(Line(40, 67), 4.6);
g.set_repair_time(Line(40, 69), 1.15);
g.set_repair_time(Line(41, 51), 3.72);
g.set_repair_time(Line(41, 59), 4.56);
g.set_repair_time(Line(42, 61), 3.73);
g.set_repair_time(Line(45, 75), 1.87);
g.set_repair_time(Line(47, 73), 2.54);
g.set_repair_time(Line(49, 77), 3.81);
g.set_repair_time(Line(51, 69), 1.33);
g.set_repair_time(Line(52, 56), 1.04);
g.set_repair_time(Line(53, 59), 2.45);
g.set_repair_time(Line(53, 64), 4.61);
g.set_repair_time(Line(55, 56), 1.63);
g.set_repair_time(Line(55, 57), 1.27);
g.set_repair_time(Line(57, 68), 1.16);
g.set_repair_time(Line(58, 61), 2.78);
g.set_repair_time(Line(66, 67), 1.07);
g.set_repair_time(Line(66, 68), 2.7);
g.set_repair_time(Line(70, 76), 4.87);
g.set_repair_time(Line(78, 79), 3.31);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 2.79508}, {2, 21.9632}, {3, 21.3306}, {4, 15.8348}, {5, 24.5265}, {6, 20.1539}, {7, 31.0638}, {8, 25.9749}, {9, 18.7994}, {10, 13.293}, {11, 11.7925}, {12, 18.4469}, {13, 22.9572}, {14, 22.3349}, {15, 41.796}, {16, 37.4949}, {17, 21.4817}, {18, 11.6339}, {19, 17.6872}, {20, 21.5789}, {21, 17.7951}, {22, 15.0806}, {23, 11.5451}, {24, 14.2925}, {25, 18.7994}, {26, 32.9572}, {27, 25.0806}, {28, 28.6916}, {29, 26.2878}, {30, 25.5902}, {31, 13.2569}, {32, 24.7387}, {33, 17.5806}, {34, 24.8523}, {35, 8.25694}, {36, 24.2072}, {37, 21.4056}, {38, 12.5888}, {39, 16.6485}, {40, 42.8362}, {41, 22.5985}, {42, 22.3139}, {43, 22.7951}, {44, 20.3417}, {45, 15.3985}, {46, 9.34017}, {47, 23.9372}, {48, 11.3278}, {49, 19.6599}, {50, 3.75}, {51, 30.2345}, {52, 21.6401}, {53, 10.0778}, {54, 10.3985}, {55, 17.6539}, {56, 12.5}, {57, 18.9039}, {58, 34.1993}, {59, 11.8456}, {60, 21.7479}, {61, 29.0454}, {62, 16.8484}, {63, 32.9979}, {64, 15.2317}, {65, 18.8306}, {66, 27.0023}, {67, 37.6823}, {68, 21.699}, {69, 36.654}, {70, 31.0934}, {71, 5.59017}, {72, 24.2072}, {73, 27.4728}, {74, 17.1353}, {75, 23.1708}, {76, 34.7249}, {77, 24.8138}, {78, 22.6667}, {79, 28.2568}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 2.79508}, {1, 0}, {2, 20.2069}, {3, 18.5355}, {4, 18.6298}, {5, 21.7315}, {6, 22.949}, {7, 32.5834}, {8, 28.77}, {9, 21.5945}, {10, 16.0881}, {11, 14.5876}, {12, 21.242}, {13, 25.7523}, {14, 20.2744}, {15, 41.7273}, {16, 40.29}, {17, 22.7254}, {18, 8.83883}, {19, 14.8921}, {20, 18.7838}, {21, 15}, {22, 12.2855}, {23, 8.75}, {24, 17.0876}, {25, 21.5945}, {26, 35.7523}, {27, 22.2855}, {28, 25.8965}, {29, 24.2273}, {30, 22.7951}, {31, 16.052}, {32, 21.9436}, {33, 14.7855}, {34, 22.0572}, {35, 11.052}, {36, 27.0023}, {37, 24.2007}, {38, 15.3839}, {39, 13.8535}, {40, 45.6312}, {41, 25.3936}, {42, 19.5188}, {43, 20}, {44, 23.1368}, {45, 12.6035}, {46, 12.1353}, {47, 21.1421}, {48, 14.1229}, {49, 22.455}, {50, 6.54508}, {51, 27.4394}, {52, 18.845}, {53, 12.8729}, {54, 7.60345}, {55, 20.449}, {56, 15.2951}, {57, 21.699}, {58, 31.4042}, {59, 14.6407}, {60, 18.9528}, {61, 26.2503}, {62, 14.0533}, {63, 30.2028}, {64, 18.0268}, {65, 16.0355}, {66, 29.7974}, {67, 40.4774}, {68, 24.4941}, {69, 36.9591}, {70, 28.2983}, {71, 8.38525}, {72, 27.0023}, {73, 24.6777}, {74, 14.3402}, {75, 20.3757}, {76, 37.52}, {77, 27.6089}, {78, 25.4617}, {79, 31.0519}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 21.9632}, {1, 20.2069}, {2, 0}, {3, 15.7569}, {4, 17.6423}, {5, 26.9722}, {6, 12.9189}, {7, 24.7707}, {8, 18.7399}, {9, 21.5588}, {10, 25.1912}, {11, 20.06}, {12, 23.0593}, {13, 15.7222}, {14, 23.81}, {15, 34.561}, {16, 30.2598}, {17, 12.9815}, {18, 12.7573}, {19, 19.8921}, {20, 23.7838}, {21, 24.2925}, {22, 14.5069}, {23, 18.0425}, {24, 22.56}, {25, 20.2744}, {26, 25.7222}, {27, 4.50694}, {28, 15.1869}, {29, 27.7628}, {30, 28.0717}, {31, 11.5244}, {32, 19.1398}, {33, 12.0069}, {34, 24.2786}, {35, 16.5244}, {36, 16.9722}, {37, 16.8093}, {38, 29.8702}, {39, 18.8535}, {40, 27.511}, {41, 20.2674}, {42, 23.4373}, {43, 25.2767}, {44, 22.1492}, {45, 7.60345}, {46, 21.2384}, {47, 26.1421}, {48, 13.1353}, {49, 36.1746}, {50, 21.0314}, {51, 9.66082}, {52, 23.845}, {53, 11.8853}, {54, 12.6035}, {55, 10.4189}, {56, 15.5727}, {57, 9.16886}, {58, 27.5788}, {59, 13.6531}, {60, 28.2453}, {61, 30.1688}, {62, 16.2747}, {63, 39.4953}, {64, 6.73146}, {65, 10.7569}, {66, 11.6771}, {67, 22.3571}, {68, 6.37377}, {69, 19.1805}, {70, 25.5198}, {71, 24.9884}, {72, 16.9722}, {73, 29.6777}, {74, 21.3667}, {75, 17.1232}, {76, 27.4899}, {77, 31.0207}, {78, 39.948}, {79, 38.2914}, 