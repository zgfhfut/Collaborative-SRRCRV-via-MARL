node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 10, 11, 13, 15, 18, 20, 22, 24, 25, 28, 29, 34, 37, 39, 40, 42, 43, 44, 46, 49, 50, 52, 53, 54, 59, 60, 61, 62, 64, 65, 66, 68, 70, 72, 73, 75, 76, 77, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 4), Line(0, 6), Line(0, 13), Line(0, 15), Line(0, 28), Line(0, 55), Line(1, 2), Line(1, 11), Line(2, 37), Line(2, 49), Line(3, 19), Line(3, 78), Line(4, 15), Line(4, 61), Line(5, 8), Line(5, 50), Line(5, 51), Line(6, 13), Line(6, 20), Line(6, 30), Line(6, 54), Line(6, 75), Line(7, 30), Line(7, 32), Line(7, 52), Line(7, 68), Line(8, 44), Line(8, 58), Line(8, 60), Line(8, 66), Line(9, 10), Line(9, 13), Line(9, 67), Line(10, 21), Line(10, 62), Line(10, 70), Line(11, 45), Line(12, 23), Line(12, 25), Line(12, 29), Line(13, 45), Line(13, 67), Line(14, 44), Line(14, 74), Line(16, 26), Line(16, 27), Line(16, 28), Line(16, 29), Line(17, 56), Line(17, 64), Line(18, 37), Line(18, 41), Line(18, 65), Line(19, 28), Line(19, 33), Line(19, 35), Line(19, 53), Line(19, 62), Line(20, 25), Line(20, 50), Line(20, 55), Line(20, 70), Line(21, 64), Line(22, 61), Line(22, 77), Line(23, 27), Line(24, 41), Line(24, 47), Line(25, 30), Line(25, 60), Line(26, 79), Line(27, 41), Line(28, 36), Line(28, 51), Line(28, 71), Line(29, 50), Line(31, 48), Line(31, 72), Line(32, 63), Line(32, 68), Line(32, 70), Line(33, 62), Line(34, 49), Line(34, 56), Line(34, 65), Line(35, 39), Line(35, 45), Line(35, 49), Line(36, 71), Line(36, 78), Line(37, 47), Line(38, 40), Line(38, 76), Line(39, 74), Line(40, 57), Line(40, 62), Line(41, 42), Line(42, 60), Line(42, 68), Line(43, 46), Line(43, 58), Line(43, 77), Line(44, 67), Line(44, 70), Line(46, 55), Line(46, 75), Line(48, 51), Line(50, 71), Line(52, 67), Line(53, 59), Line(53, 68), Line(54, 76), Line(54, 79), Line(57, 67), Line(57, 72), Line(59, 73), Line(63, 66), Line(69, 70), Line(69, 73), Line(75, 77),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 6), Line(0, 28), Line(0, 55), Line(3, 19), Line(4, 15), Line(5, 8), Line(6, 13), Line(6, 20), Line(6, 54), Line(7, 30), Line(7, 32), Line(7, 52), Line(7, 68), Line(8, 44), Line(8, 66), Line(9, 10), Line(10, 62), Line(10, 70), Line(11, 45), Line(12, 23), Line(12, 25), Line(12, 29), Line(13, 67), Line(14, 74), Line(16, 27), Line(16, 28), Line(16, 29), Line(17, 56), Line(18, 37), Line(18, 41), Line(18, 65), Line(19, 28), Line(19, 33), Line(20, 25), Line(20, 55), Line(21, 64), Line(22, 61), Line(22, 77), Line(24, 41), Line(24, 47), Line(25, 30), Line(25, 60), Line(26, 79), Line(27, 41), Line(28, 36), Line(28, 51), Line(29, 50), Line(31, 48), Line(31, 72), Line(32, 70), Line(34, 49), Line(34, 56), Line(35, 39), Line(35, 49), Line(37, 47), Line(39, 74), Line(40, 57), Line(40, 62), Line(44, 70), Line(46, 55), Line(46, 75), Line(48, 51), Line(50, 71), Line(52, 67), Line(53, 59), Line(53, 68), Line(54, 79), Line(57, 67), Line(57, 72), Line(59, 73), Line(69, 70), Line(75, 77),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 4, 4.47);
g.add_edge(0, 6, 5);
g.add_edge(0, 13, 7.07);
g.add_edge(0, 15, 5);
g.add_edge(0, 28, 3.6);
g.add_edge(0, 55, 4.12);
g.add_edge(1, 2, 5.38);
g.add_edge(1, 11, 4.47);
g.add_edge(2, 37, 6.4);
g.add_edge(2, 49, 3);
g.add_edge(3, 19, 3.16);
g.add_edge(3, 78, 7.21);
g.add_edge(4, 15, 5);
g.add_edge(4, 61, 7.07);
g.add_edge(5, 8, 3.16);
g.add_edge(5, 50, 2.82);
g.add_edge(5, 51, 4.12);
g.add_edge(6, 13, 12.04);
g.add_edge(6, 20, 2);
g.add_edge(6, 30, 6.4);
g.add_edge(6, 54, 4.24);
g.add_edge(6, 75, 7.21);
g.add_edge(7, 30, 5);
g.add_edge(7, 32, 5.83);
g.add_edge(7, 52, 1);
g.add_edge(7, 68, 3.16);
g.add_edge(8, 44, 7.81);
g.add_edge(8, 58, 2.23);
g.add_edge(8, 60, 5.09);
g.add_edge(8, 66, 3.6);
g.add_edge(9, 10, 2.23);
g.add_edge(9, 13, 7.61);
g.add_edge(9, 67, 4.47);
g.add_edge(10, 21, 3.16);
g.add_edge(10, 62, 9.21);
g.add_edge(10, 70, 3.6);
g.add_edge(11, 45, 5.65);
g.add_edge(12, 23, 5.83);
g.add_edge(12, 25, 5.38);
g.add_edge(12, 29, 8.06);
g.add_edge(13, 45, 8.06);
g.add_edge(13, 67, 11.4);
g.add_edge(14, 44, 9.21);
g.add_edge(14, 74, 7.28);
g.add_edge(16, 26, 5.09);
g.add_edge(16, 27, 2.23);
g.add_edge(16, 28, 4.12);
g.add_edge(16, 29, 5.09);
g.add_edge(17, 56, 7.21);
g.add_edge(17, 64, 4.12);
g.add_edge(18, 37, 4.12);
g.add_edge(18, 41, 2.23);
g.add_edge(18, 65, 2);
g.add_edge(19, 28, 8.54);
g.add_edge(19, 33, 7.61);
g.add_edge(19, 35, 6.4);
g.add_edge(19, 53, 6.32);
g.add_edge(19, 62, 2);
g.add_edge(20, 25, 7.28);
g.add_edge(20, 50, 5);
g.add_edge(20, 55, 8.24);
g.add_edge(20, 70, 2.23);
g.add_edge(21, 64, 9.05);
g.add_edge(22, 61, 4.24);
g.add_edge(22, 77, 4.47);
g.add_edge(23, 27, 1.41);
g.add_edge(24, 41, 5.09);
g.add_edge(24, 47, 3.16);
g.add_edge(25, 30, 3.16);
g.add_edge(25, 60, 4);
g.add_edge(26, 79, 6.4);
g.add_edge(27, 41, 4.47);
g.add_edge(28, 36, 7.21);
g.add_edge(28, 51, 5.83);
g.add_edge(28, 71, 7.07);
g.add_edge(29, 50, 3.16);
g.add_edge(31, 48, 2.23);
g.add_edge(31, 72, 5.09);
g.add_edge(32, 63, 4.24);
g.add_edge(32, 68, 6);
g.add_edge(32, 70, 5);
g.add_edge(33, 62, 7.07);
g.add_edge(34, 49, 1.41);
g.add_edge(34, 56, 6.08);
g.add_edge(34, 65, 9.21);
g.add_edge(35, 39, 3.16);
g.add_edge(35, 45, 4);
g.add_edge(35, 49, 2);
g.add_edge(36, 71, 1.41);
g.add_edge(36, 78, 5);
g.add_edge(37, 47, 8.48);
g.add_edge(38, 40, 7.07);
g.add_edge(38, 76, 7.21);
g.add_edge(39, 74, 3.16);
g.add_edge(40, 57, 10.81);
g.add_edge(40, 62, 11.4);
g.add_edge(41, 42, 8.24);
g.add_edge(42, 60, 10.63);
g.add_edge(42, 68, 4);
g.add_edge(43, 46, 9.21);
g.add_edge(43, 58, 3.6);
g.add_edge(43, 77, 1.41);
g.add_edge(44, 67, 2.23);
g.add_edge(44, 70, 5);
g.add_edge(46, 55, 7.07);
g.add_edge(46, 75, 7.07);
g.add_edge(48, 51, 7.28);
g.add_edge(50, 71, 2.23);
g.add_edge(52, 67, 1.41);
g.add_edge(53, 59, 7.81);
g.add_edge(53, 68, 8.06);
g.add_edge(54, 76, 3);
g.add_edge(54, 79, 6);
g.add_edge(57, 67, 9);
g.add_edge(57, 72, 1.41);
g.add_edge(59, 73, 5);
g.add_edge(63, 66, 7.07);
g.add_edge(69, 70, 6.7);
g.add_edge(69, 73, 5.38);
g.add_edge(75, 77, 4.12);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 3.17);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 3.86);
g.set_importance(11, 4.88);
g.set_importance(12, 0);
g.set_importance(13, 6.73);
g.set_importance(14, 0);
g.set_importance(15, 5.78);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 3.82);
g.set_importance(19, 0);
g.set_importance(20, 1.07);
g.set_importance(21, 0);
g.set_importance(22, 2.82);
g.set_importance(23, 0);
g.set_importance(24, 2.13);
g.set_importance(25, 9.26);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 4.7);
g.set_importance(29, 4.33);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 1.58);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 7.98);
g.set_importance(38, 0);
g.set_importance(39, 3.71);
g.set_importance(40, 2.92);
g.set_importance(41, 0);
g.set_importance(42, 6.96);
g.set_importance(43, 2.72);
g.set_importance(44, 5.29);
g.set_importance(45, 0);
g.set_importance(46, 7.77);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 7.56);
g.set_importance(50, 5.75);
g.set_importance(51, 0);
g.set_importance(52, 8.48);
g.set_importance(53, 7.91);
g.set_importance(54, 4.1);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 5.89);
g.set_importance(60, 4.04);
g.set_importance(61, 7.2);
g.set_importance(62, 3.35);
g.set_importance(63, 0);
g.set_importance(64, 2.24);
g.set_importance(65, 9.18);
g.set_importance(66, 4.66);
g.set_importance(67, 0);
g.set_importance(68, 8.17);
g.set_importance(69, 0);
g.set_importance(70, 5.41);
g.set_importance(71, 0);
g.set_importance(72, 6.41);
g.set_importance(73, 7.33);
g.set_importance(74, 0);
g.set_importance(75, 3.84);
g.set_importance(76, 1.34);
g.set_importance(77, 6.16);
g.set_importance(78, 0);
g.set_importance(79, 1.97);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 6), 3.26);
g.set_repair_time(Line(0, 28), 2.29);
g.set_repair_time(Line(0, 55), 3.81);
g.set_repair_time(Line(3, 19), 3.3);
g.set_repair_time(Line(4, 15), 1.19);
g.set_repair_time(Line(5, 8), 4.96);
g.set_repair_time(Line(6, 13), 1.14);
g.set_repair_time(Line(6, 20), 3.31);
g.set_repair_time(Line(6, 54), 4.98);
g.set_repair_time(Line(7, 30), 2);
g.set_repair_time(Line(7, 32), 3.47);
g.set_repair_time(Line(7, 52), 1.01);
g.set_repair_time(Line(7, 68), 1.91);
g.set_repair_time(Line(8, 44), 1.07);
g.set_repair_time(Line(8, 66), 2.14);
g.set_repair_time(Line(9, 10), 4.92);
g.set_repair_time(Line(10, 62), 1.7);
g.set_repair_time(Line(10, 70), 4.37);
g.set_repair_time(Line(11, 45), 1.14);
g.set_repair_time(Line(12, 23), 3.86);
g.set_repair_time(Line(12, 25), 4);
g.set_repair_time(Line(12, 29), 4.02);
g.set_repair_time(Line(13, 67), 2.94);
g.set_repair_time(Line(14, 74), 1.09);
g.set_repair_time(Line(16, 27), 1.05);
g.set_repair_time(Line(16, 28), 2.32);
g.set_repair_time(Line(16, 29), 4.58);
g.set_repair_time(Line(17, 56), 1.81);
g.set_repair_time(Line(18, 37), 4.28);
g.set_repair_time(Line(18, 41), 4.05);
g.set_repair_time(Line(18, 65), 3.64);
g.set_repair_time(Line(19, 28), 2.95);
g.set_repair_time(Line(19, 33), 2.15);
g.set_repair_time(Line(20, 25), 4.38);
g.set_repair_time(Line(20, 55), 2.99);
g.set_repair_time(Line(21, 64), 3.49);
g.set_repair_time(Line(22, 61), 2.03);
g.set_repair_time(Line(22, 77), 3.37);
g.set_repair_time(Line(24, 41), 3.65);
g.set_repair_time(Line(24, 47), 3.26);
g.set_repair_time(Line(25, 30), 2.98);
g.set_repair_time(Line(25, 60), 2.25);
g.set_repair_time(Line(26, 79), 3.29);
g.set_repair_time(Line(27, 41), 3.15);
g.set_repair_time(Line(28, 36), 3.74);
g.set_repair_time(Line(28, 51), 2.14);
g.set_repair_time(Line(29, 50), 3.86);
g.set_repair_time(Line(31, 48), 3.71);
g.set_repair_time(Line(31, 72), 2.71);
g.set_repair_time(Line(32, 70), 3.05);
g.set_repair_time(Line(34, 49), 4.56);
g.set_repair_time(Line(34, 56), 2.79);
g.set_repair_time(Line(35, 39), 3.95);
g.set_repair_time(Line(35, 49), 2.17);
g.set_repair_time(Line(37, 47), 1.52);
g.set_repair_time(Line(39, 74), 3.83);
g.set_repair_time(Line(40, 57), 2.47);
g.set_repair_time(Line(40, 62), 3.01);
g.set_repair_time(Line(44, 70), 3.51);
g.set_repair_time(Line(46, 55), 3.05);
g.set_repair_time(Line(46, 75), 4.72);
g.set_repair_time(Line(48, 51), 1.54);
g.set_repair_time(Line(50, 71), 3.79);
g.set_repair_time(Line(52, 67), 3.8);
g.set_repair_time(Line(53, 59), 2.31);
g.set_repair_time(Line(53, 68), 2.04);
g.set_repair_time(Line(54, 79), 2.64);
g.set_repair_time(Line(57, 67), 1.94);
g.set_repair_time(Line(57, 72), 2.23);
g.set_repair_time(Line(59, 73), 5);
g.set_repair_time(Line(69, 70), 3.92);
g.set_repair_time(Line(75, 77), 3.16);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 31.5625}, {2, 29.425}, {3, 19.125}, {4, 5.5875}, {5, 16.9375}, {6, 6.25}, {7, 20.5}, {8, 20.8875}, {9, 18.35}, {10, 16.0375}, {11, 25.975}, {12, 21.4875}, {13, 8.8375}, {14, 29.3}, {15, 6.25}, {16, 9.65}, {17, 36.45}, {18, 20.8125}, {19, 15.175}, {20, 8.75}, {21, 19.9875}, {22, 19.725}, {23, 14.2}, {24, 24.3875}, {25, 17.85}, {26, 16.0125}, {27, 12.4375}, {28, 4.5}, {29, 16.0125}, {30, 14.25}, {31, 23.675}, {32, 17.7875}, {33, 24.6875}, {34, 27.4375}, {35, 23.175}, {36, 13.5125}, {37, 25.9625}, {38, 24.3125}, {39, 27.125}, {40, 31.925}, {41, 18.025}, {42, 28.325}, {43, 22.175}, {44, 17.7875}, {45, 18.9125}, {46, 13.9875}, {47, 28.3375}, {48, 20.8875}, {49, 25.675}, {50, 15}, {51, 11.7875}, {52, 21.75}, {53, 23.075}, {54, 11.55}, {55, 5.15}, {56, 35.0375}, {57, 31.8}, {58, 23.675}, {59, 32.8375}, {60, 22.85}, {61, 14.425}, {62, 17.675}, {63, 23.0875}, {64, 31.3}, {65, 23.3125}, {66, 25.3875}, {67, 20.575}, {68, 24.45}, {69, 19.9125}, {70, 11.5375}, {71, 13.3375}, {72, 30.0375}, {73, 26.6375}, {74, 31.075}, {75, 15.2625}, {76, 15.3}, {77, 20.4125}, {78, 19.7625}, {79, 19.05}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 31.5625}, {1, 0}, {2, 6.725}, {3, 24.925}, {4, 37.15}, {5, 44.0875}, {6, 37.775}, {7, 39.9875}, {8, 48.0375}, {9, 32.2375}, {10, 34.9875}, {11, 5.5875}, {12, 37.3}, {13, 22.725}, {14, 29.975}, {15, 37.8125}, {16, 31.0375}, {17, 28.85}, {18, 19.875}, {19, 20.975}, {20, 40.275}, {21, 38.9375}, {22, 51.2875}, {23, 30.0125}, {24, 29.025}, {25, 44.025}, {26, 37.4}, {27, 28.25}, {28, 31.65}, {29, 37.4}, {30, 45.775}, {31, 50.825}, {32, 45.4625}, {33, 30.4875}, {34, 12.2375}, {35, 12.975}, {36, 40.1875}, {37, 14.725}, {38, 46.5625}, {39, 16.925}, {40, 37.725}, {41, 22.6625}, {42, 32.9625}, {43, 53.7}, {44, 39.7625}, {45, 12.65}, {46, 45.55}, {47, 25.325}, {48, 48.0375}, {49, 10.475}, {50, 41.35}, {51, 38.9375}, {52, 38.7375}, {53, 28.875}, {54, 43.075}, {55, 36.7125}, {56, 19.8375}, {57, 48.225}, {58, 50.825}, {59, 38.6375}, {60, 46.25}, {61, 45.9875}, {62, 23.475}, {63, 50.7625}, {64, 34}, {65, 22.375}, {66, 52.5375}, {67, 36.975}, {68, 37.9625}, {69, 47.8625}, {70, 39.4875}, {71, 40.4875}, {72, 49.9875}, {73, 44.8875}, {74, 20.875}, {75, 46.7875}, {76, 46.825}, {77, 51.9375}, {78, 33.9375}, {79, 45.4}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 29.425}, {1, 6.725}, {2, 0}, {3, 18.2}, {4, 35.0125}, {5, 37.3625}, {6, 35.675}, {7, 35.1875}, {8, 41.3125}, {9, 30.8375}, {10, 28.2625}, {11, 12.3125}, {12, 30.575}, {13, 21.325}, {14, 23.25}, {15, 35.675}, {16, 24.3125}, {17, 22.125}, {18, 13.15}, {19, 14.25}, {20, 35.55}, {21, 32.2125}, {22, 49.15}, {23, 23.2875}, {24, 22.3}, {25, 37.3}, {26, 30.675}, {27, 21.525}, {28, 24.925}, {29, 30.675}, {30, 41.25}, {31, 44.1}, {32, 38.7375}, {33, 23.7625}, {34, 5.5125}, {35, 6.25}, {36, 33.4625}, {37, 8}, {38, 39.8375}, {39, 10.2}, {40, 31}, {41, 15.9375}, {42, 26.2375}, {43, 48.6}, {44, 34.7625}, {45, 11.25}, {46, 43.4125}, {47, 18.6}, {48, 41.3125}, {49, 3.75}, {50, 34.625}, {51, 32.2125}, {52, 36.4375}, {53, 22.15}, {54, 40.975}, {55, 34.575}, {56, 13.1125}, {57, 44.5125}, {58, 44.1}, {59, 31.9125}, {60, 39.525}, {61, 43.85}, {62, 16.75}, {63, 44.0375}, {64, 27.275}, {65, 15.65}, {66, 45.8125}, {67, 35.575}, {68, 31.2375}, {69, 41.1375}, {70, 32.7625}, {71, 33.7625}, {72, 46.275}, {73, 38.1625}, {74, 14.15}, {75, 44.6875}, {76, 44.725}, {77, 49.8375}, {78, 27.2125}, {79, 38.675}, 