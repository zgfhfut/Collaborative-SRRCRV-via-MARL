node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 11, 14, 15, 18, 20, 23, 26, 27, 29, 30, 31, 32, 34, 35, 38, 40, 43, 45, 46, 47, 49, 50, 51, 52, 55, 57, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 75, 76, 77,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 13), Line(0, 15), Line(0, 20), Line(0, 35), Line(0, 45), Line(0, 61), Line(1, 44), Line(1, 52), Line(1, 64), Line(1, 75), Line(2, 7), Line(2, 14), Line(2, 37), Line(3, 24), Line(3, 29), Line(4, 25), Line(4, 55), Line(5, 22), Line(5, 30), Line(5, 70), Line(6, 9), Line(6, 67), Line(6, 68), Line(7, 15), Line(7, 39), Line(7, 41), Line(8, 43), Line(8, 56), Line(8, 62), Line(9, 10), Line(9, 31), Line(10, 55), Line(10, 77), Line(11, 48), Line(11, 57), Line(11, 71), Line(11, 74), Line(12, 22), Line(12, 25), Line(12, 38), Line(13, 36), Line(13, 48), Line(14, 18), Line(14, 47), Line(14, 50), Line(14, 51), Line(14, 52), Line(15, 59), Line(15, 69), Line(16, 26), Line(16, 50), Line(17, 38), Line(17, 79), Line(18, 26), Line(18, 58), Line(18, 59), Line(19, 47), Line(19, 65), Line(20, 27), Line(21, 42), Line(21, 53), Line(22, 57), Line(23, 43), Line(23, 47), Line(23, 68), Line(24, 67), Line(25, 77), Line(26, 55), Line(27, 38), Line(27, 72), Line(28, 66), Line(28, 69), Line(28, 73), Line(29, 54), Line(30, 53), Line(30, 59), Line(31, 40), Line(31, 67), Line(31, 79), Line(32, 50), Line(32, 68), Line(33, 37), Line(33, 71), Line(34, 44), Line(34, 64), Line(34, 72), Line(35, 41), Line(35, 56), Line(36, 63), Line(37, 58), Line(37, 70), Line(38, 53), Line(39, 74), Line(40, 57), Line(41, 51), Line(41, 64), Line(42, 49), Line(43, 54), Line(44, 76), Line(45, 73), Line(45, 78), Line(45, 79), Line(46, 60), Line(46, 70), Line(47, 74), Line(47, 76), Line(49, 62), Line(51, 79), Line(54, 60), Line(54, 76), Line(55, 62), Line(58, 60), Line(58, 69), Line(59, 63), Line(61, 65), Line(61, 75), Line(64, 72), Line(65, 72), Line(66, 71), Line(75, 77),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 13), Line(0, 15), Line(0, 35), Line(0, 45), Line(1, 64), Line(1, 75), Line(2, 7), Line(3, 24), Line(3, 29), Line(4, 25), Line(5, 22), Line(5, 70), Line(7, 15), Line(7, 39), Line(7, 41), Line(8, 43), Line(8, 56), Line(8, 62), Line(9, 31), Line(10, 55), Line(11, 57), Line(11, 71), Line(12, 22), Line(12, 25), Line(13, 48), Line(14, 18), Line(14, 47), Line(14, 50), Line(14, 51), Line(14, 52), Line(15, 59), Line(16, 26), Line(16, 50), Line(17, 38), Line(17, 79), Line(18, 26), Line(19, 65), Line(21, 42), Line(21, 53), Line(22, 57), Line(23, 47), Line(25, 77), Line(27, 38), Line(27, 72), Line(28, 73), Line(30, 59), Line(31, 79), Line(32, 68), Line(34, 72), Line(35, 56), Line(36, 63), Line(37, 58), Line(38, 53), Line(40, 57), Line(41, 64), Line(42, 49), Line(44, 76), Line(45, 78), Line(45, 79), Line(46, 60), Line(46, 70), Line(47, 74), Line(49, 62), Line(54, 60), Line(54, 76), Line(55, 62), Line(58, 60), Line(58, 69), Line(61, 65), Line(61, 75), Line(65, 72), Line(75, 77),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 13, 3.16);
g.add_edge(0, 15, 6);
g.add_edge(0, 20, 7.28);
g.add_edge(0, 35, 7.81);
g.add_edge(0, 45, 11.31);
g.add_edge(0, 61, 4.12);
g.add_edge(1, 44, 8);
g.add_edge(1, 52, 4.47);
g.add_edge(1, 64, 9.21);
g.add_edge(1, 75, 5);
g.add_edge(2, 7, 1);
g.add_edge(2, 14, 4.47);
g.add_edge(2, 37, 7.07);
g.add_edge(3, 24, 5.09);
g.add_edge(3, 29, 2);
g.add_edge(4, 25, 6.32);
g.add_edge(4, 55, 5.09);
g.add_edge(5, 22, 7.21);
g.add_edge(5, 30, 5.38);
g.add_edge(5, 70, 7.07);
g.add_edge(6, 9, 7.61);
g.add_edge(6, 67, 8.6);
g.add_edge(6, 68, 8.48);
g.add_edge(7, 15, 2);
g.add_edge(7, 39, 4.47);
g.add_edge(7, 41, 4.12);
g.add_edge(8, 43, 1.41);
g.add_edge(8, 56, 1.41);
g.add_edge(8, 62, 7.21);
g.add_edge(9, 10, 4.24);
g.add_edge(9, 31, 6.4);
g.add_edge(10, 55, 6);
g.add_edge(10, 77, 5);
g.add_edge(11, 48, 4.12);
g.add_edge(11, 57, 2);
g.add_edge(11, 71, 3.6);
g.add_edge(11, 74, 6.7);
g.add_edge(12, 22, 2.23);
g.add_edge(12, 25, 4.47);
g.add_edge(12, 38, 4);
g.add_edge(13, 36, 8.94);
g.add_edge(13, 48, 2.23);
g.add_edge(14, 18, 2.23);
g.add_edge(14, 47, 4.24);
g.add_edge(14, 50, 1);
g.add_edge(14, 51, 3.16);
g.add_edge(14, 52, 4.12);
g.add_edge(15, 59, 6.7);
g.add_edge(15, 69, 2.82);
g.add_edge(16, 26, 7);
g.add_edge(16, 50, 6.7);
g.add_edge(17, 38, 6.08);
g.add_edge(17, 79, 5.09);
g.add_edge(18, 26, 8.6);
g.add_edge(18, 58, 2.23);
g.add_edge(18, 59, 4.12);
g.add_edge(19, 47, 6.08);
g.add_edge(19, 65, 8.6);
g.add_edge(20, 27, 3.16);
g.add_edge(21, 42, 2.23);
g.add_edge(21, 53, 5.38);
g.add_edge(22, 57, 8.06);
g.add_edge(23, 43, 4.47);
g.add_edge(23, 47, 2.82);
g.add_edge(23, 68, 3);
g.add_edge(24, 67, 6.7);
g.add_edge(25, 77, 7.28);
g.add_edge(26, 55, 9.05);
g.add_edge(27, 38, 5);
g.add_edge(27, 72, 7);
g.add_edge(28, 66, 8.06);
g.add_edge(28, 69, 5);
g.add_edge(28, 73, 3);
g.add_edge(29, 54, 1.41);
g.add_edge(30, 53, 8.94);
g.add_edge(30, 59, 8.06);
g.add_edge(31, 40, 2.23);
g.add_edge(31, 67, 2.23);
g.add_edge(31, 79, 5.83);
g.add_edge(32, 50, 3.16);
g.add_edge(32, 68, 8.24);
g.add_edge(33, 37, 1.41);
g.add_edge(33, 71, 4.47);
g.add_edge(34, 44, 7.07);
g.add_edge(34, 64, 3.6);
g.add_edge(34, 72, 5.09);
g.add_edge(35, 41, 5.09);
g.add_edge(35, 56, 2);
g.add_edge(36, 63, 8.06);
g.add_edge(37, 58, 8.94);
g.add_edge(37, 70, 6);
g.add_edge(38, 53, 2.82);
g.add_edge(39, 74, 5.38);
g.add_edge(40, 57, 4.47);
g.add_edge(41, 51, 3.16);
g.add_edge(41, 64, 7.61);
g.add_edge(42, 49, 10);
g.add_edge(43, 54, 3.16);
g.add_edge(44, 76, 7.28);
g.add_edge(45, 73, 10);
g.add_edge(45, 78, 8.06);
g.add_edge(45, 79, 6.7);
g.add_edge(46, 60, 4.12);
g.add_edge(46, 70, 6.4);
g.add_edge(47, 74, 8.48);
g.add_edge(47, 76, 5.09);
g.add_edge(49, 62, 2.23);
g.add_edge(51, 79, 3.16);
g.add_edge(54, 60, 4.47);
g.add_edge(54, 76, 7.21);
g.add_edge(55, 62, 7);
g.add_edge(58, 60, 7.07);
g.add_edge(58, 69, 3.6);
g.add_edge(59, 63, 6.32);
g.add_edge(61, 65, 1);
g.add_edge(61, 75, 2.82);
g.add_edge(64, 72, 7.28);
g.add_edge(65, 72, 2.82);
g.add_edge(66, 71, 6.4);
g.add_edge(75, 77, 8.6);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 6.01);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 4.31);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 9.35);
g.set_importance(15, 2.76);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 8.98);
g.set_importance(19, 0);
g.set_importance(20, 8.19);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 5.69);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 6.13);
g.set_importance(27, 3.27);
g.set_importance(28, 0);
g.set_importance(29, 4.76);
g.set_importance(30, 4.5);
g.set_importance(31, 8.32);
g.set_importance(32, 5.4);
g.set_importance(33, 0);
g.set_importance(34, 7.19);
g.set_importance(35, 5.55);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 6.42);
g.set_importance(39, 0);
g.set_importance(40, 8.51);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 6.89);
g.set_importance(44, 0);
g.set_importance(45, 6.57);
g.set_importance(46, 6.85);
g.set_importance(47, 6.03);
g.set_importance(48, 0);
g.set_importance(49, 4.93);
g.set_importance(50, 5.49);
g.set_importance(51, 6.27);
g.set_importance(52, 9.22);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 2.54);
g.set_importance(56, 0);
g.set_importance(57, 5.54);
g.set_importance(58, 0);
g.set_importance(59, 3.66);
g.set_importance(60, 8.61);
g.set_importance(61, 1.78);
g.set_importance(62, 0);
g.set_importance(63, 9.86);
g.set_importance(64, 0);
g.set_importance(65, 0);
g.set_importance(66, 5.37);
g.set_importance(67, 7.92);
g.set_importance(68, 1.18);
g.set_importance(69, 9.24);
g.set_importance(70, 2.96);
g.set_importance(71, 0);
g.set_importance(72, 4.15);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 6.66);
g.set_importance(76, 4.27);
g.set_importance(77, 1.14);
g.set_importance(78, 0);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 13), 3.83);
g.set_repair_time(Line(0, 15), 4.38);
g.set_repair_time(Line(0, 35), 3.92);
g.set_repair_time(Line(0, 45), 4.54);
g.set_repair_time(Line(1, 64), 4.75);
g.set_repair_time(Line(1, 75), 3.59);
g.set_repair_time(Line(2, 7), 1.86);
g.set_repair_time(Line(3, 24), 2.27);
g.set_repair_time(Line(3, 29), 4.04);
g.set_repair_time(Line(4, 25), 2.98);
g.set_repair_time(Line(5, 22), 4.07);
g.set_repair_time(Line(5, 70), 1.66);
g.set_repair_time(Line(7, 15), 1.94);
g.set_repair_time(Line(7, 39), 2.88);
g.set_repair_time(Line(7, 41), 4.43);
g.set_repair_time(Line(8, 43), 2.05);
g.set_repair_time(Line(8, 56), 1.29);
g.set_repair_time(Line(8, 62), 1.48);
g.set_repair_time(Line(9, 31), 1.97);
g.set_repair_time(Line(10, 55), 3.06);
g.set_repair_time(Line(11, 57), 3.61);
g.set_repair_time(Line(11, 71), 4.11);
g.set_repair_time(Line(12, 22), 1.29);
g.set_repair_time(Line(12, 25), 3.84);
g.set_repair_time(Line(13, 48), 3.68);
g.set_repair_time(Line(14, 18), 2.31);
g.set_repair_time(Line(14, 47), 4.81);
g.set_repair_time(Line(14, 50), 2.58);
g.set_repair_time(Line(14, 51), 2.86);
g.set_repair_time(Line(14, 52), 1.39);
g.set_repair_time(Line(15, 59), 2.02);
g.set_repair_time(Line(16, 26), 4.57);
g.set_repair_time(Line(16, 50), 2.29);
g.set_repair_time(Line(17, 38), 1.21);
g.set_repair_time(Line(17, 79), 4.72);
g.set_repair_time(Line(18, 26), 2.04);
g.set_repair_time(Line(19, 65), 2.69);
g.set_repair_time(Line(21, 42), 3.28);
g.set_repair_time(Line(21, 53), 3.97);
g.set_repair_time(Line(22, 57), 2.43);
g.set_repair_time(Line(23, 47), 2.56);
g.set_repair_time(Line(25, 77), 1.85);
g.set_repair_time(Line(27, 38), 4.21);
g.set_repair_time(Line(27, 72), 3.77);
g.set_repair_time(Line(28, 73), 4.22);
g.set_repair_time(Line(30, 59), 1.85);
g.set_repair_time(Line(31, 79), 4.5);
g.set_repair_time(Line(32, 68), 4.11);
g.set_repair_time(Line(34, 72), 2.74);
g.set_repair_time(Line(35, 56), 4.32);
g.set_repair_time(Line(36, 63), 3.86);
g.set_repair_time(Line(37, 58), 1.94);
g.set_repair_time(Line(38, 53), 2.35);
g.set_repair_time(Line(40, 57), 4.35);
g.set_repair_time(Line(41, 64), 2.52);
g.set_repair_time(Line(42, 49), 4.45);
g.set_repair_time(Line(44, 76), 3.83);
g.set_repair_time(Line(45, 78), 4.02);
g.set_repair_time(Line(45, 79), 4.6);
g.set_repair_time(Line(46, 60), 2.94);
g.set_repair_time(Line(46, 70), 2.89);
g.set_repair_time(Line(47, 74), 3.86);
g.set_repair_time(Line(49, 62), 4.76);
g.set_repair_time(Line(54, 60), 3.42);
g.set_repair_time(Line(54, 76), 1.24);
g.set_repair_time(Line(55, 62), 1.96);
g.set_repair_time(Line(58, 60), 4.25);
g.set_repair_time(Line(58, 69), 4.2);
g.set_repair_time(Line(61, 65), 2.04);
g.set_repair_time(Line(61, 75), 1.31);
g.set_repair_time(Line(65, 72), 1.7);
g.set_repair_time(Line(75, 77), 3.49);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 14.925}, {2, 11.25}, {3, 24}, {4, 36.425}, {5, 32.675}, {6, 35.725}, {7, 10}, {8, 14.025}, {9, 30.7625}, {10, 25.675}, {11, 11.8875}, {12, 24.3}, {13, 3.95}, {14, 16.8375}, {15, 7.5}, {16, 26.4625}, {17, 26.9}, {18, 18.3125}, {19, 17.15}, {20, 9.1}, {21, 29.55}, {22, 24.4625}, {23, 21.375}, {24, 30.3625}, {25, 28.525}, {26, 29.0625}, {27, 13.05}, {28, 17.275}, {29, 21.5}, {30, 25.95}, {31, 22.7625}, {32, 22.0375}, {33, 21.85}, {34, 16.2875}, {35, 9.7625}, {36, 15.125}, {37, 20.0875}, {38, 19.3}, {39, 15.5875}, {40, 19.975}, {41, 15.15}, {42, 32.3375}, {43, 15.7875}, {44, 24.925}, {45, 14.1375}, {46, 29.5125}, {47, 22.1375}, {48, 6.7375}, {49, 25.825}, {50, 18.0875}, {51, 19.1}, {52, 20.5125}, {53, 22.825}, {54, 19.7375}, {55, 31.7875}, {56, 12.2625}, {57, 14.3875}, {58, 15.525}, {59, 15.875}, {60, 24.3625}, {61, 5.15}, {62, 23.0375}, {63, 23.775}, {64, 19.025}, {65, 6.4}, {66, 24.3875}, {67, 25.55}, {68, 25.125}, {69, 11.025}, {70, 27.5875}, {71, 16.3875}, {72, 9.925}, {73, 21.025}, {74, 20.2625}, {75, 8.675}, {76, 28.5}, {77, 19.425}, {78, 24.2125}, {79, 22.5125}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 14.925}, {1, 0}, {2, 16.325}, {3, 32.375}, {4, 34}, {5, 35.475}, {6, 33.9125}, {7, 17.575}, {8, 26.9125}, {9, 28.55}, {10, 23.25}, {11, 26.8125}, {12, 31.6875}, {13, 18.875}, {14, 10.7375}, {15, 20.075}, {16, 20.3625}, {17, 25}, {18, 13.525}, {19, 21.775}, {20, 24.025}, {21, 39.8}, {22, 34.475}, {23, 19.5625}, {24, 37.0875}, {25, 26.1}, {26, 24.275}, {27, 23.3}, {28, 27.0625}, {29, 29.875}, {30, 28.75}, {31, 25.925}, {32, 15.9375}, {33, 26.925}, {34, 16.0125}, {35, 24.6875}, {36, 30.05}, {37, 25.1625}, {38, 29.55}, {39, 23.1625}, {40, 28.7125}, {41, 18.6375}, {42, 42.5875}, {43, 25.15}, {44, 10}, {45, 27.0125}, {46, 30.3}, {47, 16.0375}, {48, 21.6625}, {49, 38.7125}, {50, 11.9875}, {51, 14.6875}, {52, 5.5875}, {53, 33.075}, {54, 28.1125}, {55, 30.75}, {56, 27.1875}, {57, 29.3125}, {58, 16.3125}, {59, 18.675}, {60, 25.15}, {61, 9.775}, {62, 35.925}, {63, 26.575}, {64, 11.5125}, {65, 11.025}, {66, 37.1375}, {67, 28.7125}, {68, 23.3125}, {69, 20.8125}, {70, 32.6625}, {71, 31.3125}, {72, 14.55}, {73, 30.8125}, {74, 26.6375}, {75, 6.25}, {76, 19.1}, {77, 17}, {78, 37.0875}, {79, 18.6375}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 11.25}, {1, 16.325}, {2, 0}, {3, 27}, {4, 36.8}, {5, 25.175}, {6, 28.7625}, {7, 1.25}, {8, 17.025}, {9, 28.775}, {10, 34.075}, {11, 20.6875}, {12, 32.45}, {13, 15.2}, {14, 5.5875}, {15, 3.75}, {16, 15.2125}, {17, 19.85}, {18, 8.375}, {19, 18.4875}, {20, 20.35}, {21, 37.7}, {22, 33.2625}, {23, 14.4125}, {24, 31.9375}, {25, 38.0375}, {26, 19.125}, {27, 24.3}, {28, 13.525}, {29, 24.5}, {30, 22.2}, {31, 20.775}, {32, 10.7875}, {33, 10.6}, {34, 20.4125}, {35, 12.7625}, {36, 26.375}, {37, 8.8375}, {38, 27.45}, {39, 6.8375}, {40, 23.5625}, {41, 6.4}, {42, 40.4875}, {43, 18.7875}, {44, 26.325}, {45, 21.8625}, {46, 24.3375}, {47, 10.8875}, {48, 17.9875}, {49, 28.825}, {50, 6.8375}, {51, 9.5375}, {52, 10.7375}, {53, 30.975}, {54, 22.7375}, {55, 30.4375}, {56, 15.2625}, {57, 23.1875}, {58, 11.1625}, {59, 12.125}, {60, 20}, {61, 16.4}, {62, 26.0375}, {63, 20.025}, {64, 15.9125}, {65, 17.65}, {66, 23.6}, {67, 23.5625}, {68, 18.1625}, {69, 7.275}, {70, 16.3375}, {71, 16.1875}, {72, 21.175}, {73, 17.275}, {74, 13.5625}, {75, 19.925}, {76, 17.25}, {77, 30.675}, {78, 31.9375}, {79, 13.4875}, 