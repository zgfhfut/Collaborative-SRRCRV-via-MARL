node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 7, 9, 13, 15, 17, 18, 19, 20, 24, 25, 29, 34, 35, 39, 40, 43, 44, 47, 48, 49, 50, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 75, 77, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 11), Line(0, 40), Line(0, 41), Line(0, 72), Line(0, 75), Line(1, 8), Line(1, 34), Line(1, 39), Line(2, 16), Line(2, 25), Line(2, 78), Line(3, 24), Line(3, 54), Line(3, 62), Line(4, 10), Line(4, 31), Line(5, 13), Line(5, 33), Line(5, 37), Line(5, 61), Line(5, 65), Line(6, 25), Line(6, 38), Line(6, 43), Line(6, 53), Line(7, 35), Line(7, 76), Line(8, 14), Line(8, 58), Line(8, 62), Line(9, 13), Line(9, 36), Line(9, 70), Line(9, 74), Line(9, 77), Line(10, 74), Line(11, 43), Line(11, 64), Line(12, 19), Line(12, 47), Line(12, 73), Line(13, 36), Line(13, 47), Line(14, 34), Line(15, 49), Line(15, 58), Line(16, 65), Line(17, 44), Line(17, 60), Line(18, 31), Line(18, 46), Line(18, 51), Line(18, 59), Line(19, 65), Line(19, 78), Line(20, 34), Line(20, 45), Line(20, 63), Line(21, 55), Line(21, 67), Line(22, 29), Line(22, 56), Line(23, 40), Line(23, 42), Line(23, 52), Line(23, 59), Line(23, 67), Line(24, 79), Line(25, 45), Line(26, 27), Line(26, 28), Line(27, 31), Line(27, 49), Line(27, 64), Line(27, 66), Line(28, 41), Line(29, 36), Line(29, 38), Line(30, 44), Line(30, 50), Line(30, 74), Line(31, 35), Line(31, 42), Line(31, 68), Line(32, 56), Line(32, 57), Line(32, 77), Line(33, 55), Line(35, 51), Line(36, 79), Line(37, 61), Line(37, 76), Line(38, 68), Line(38, 72), Line(38, 77), Line(39, 71), Line(41, 50), Line(42, 62), Line(42, 70), Line(43, 56), Line(43, 70), Line(43, 78), Line(46, 71), Line(46, 78), Line(48, 75), Line(49, 50), Line(51, 57), Line(51, 66), Line(52, 68), Line(53, 62), Line(53, 75), Line(54, 60), Line(54, 73), Line(57, 62), Line(59, 72), Line(60, 69), Line(63, 67), Line(63, 72), Line(66, 68), Line(69, 78),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 41), Line(0, 72), Line(1, 39), Line(2, 25), Line(3, 24), Line(4, 10), Line(5, 65), Line(6, 38), Line(6, 53), Line(7, 35), Line(7, 76), Line(8, 58), Line(9, 36), Line(9, 70), Line(9, 74), Line(9, 77), Line(10, 74), Line(11, 64), Line(12, 19), Line(12, 47), Line(12, 73), Line(13, 47), Line(14, 34), Line(15, 58), Line(17, 60), Line(18, 31), Line(18, 51), Line(18, 59), Line(19, 65), Line(20, 34), Line(20, 45), Line(20, 63), Line(21, 55), Line(21, 67), Line(22, 56), Line(23, 42), Line(23, 52), Line(23, 67), Line(24, 79), Line(26, 28), Line(27, 31), Line(27, 64), Line(28, 41), Line(29, 38), Line(30, 44), Line(30, 50), Line(31, 35), Line(31, 42), Line(31, 68), Line(32, 56), Line(32, 57), Line(32, 77), Line(33, 55), Line(36, 79), Line(37, 61), Line(37, 76), Line(38, 72), Line(39, 71), Line(41, 50), Line(42, 70), Line(43, 70), Line(43, 78), Line(48, 75), Line(51, 57), Line(53, 62), Line(53, 75), Line(54, 60), Line(57, 62), Line(59, 72), Line(60, 69), Line(63, 67), Line(66, 68),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 11, 2);
g.add_edge(0, 40, 3.16);
g.add_edge(0, 41, 4);
g.add_edge(0, 72, 4.47);
g.add_edge(0, 75, 3.16);
g.add_edge(1, 8, 3.16);
g.add_edge(1, 34, 4.47);
g.add_edge(1, 39, 3.6);
g.add_edge(2, 16, 4.24);
g.add_edge(2, 25, 2.23);
g.add_edge(2, 78, 6.7);
g.add_edge(3, 24, 5);
g.add_edge(3, 54, 3.16);
g.add_edge(3, 62, 6.7);
g.add_edge(4, 10, 3);
g.add_edge(4, 31, 1.41);
g.add_edge(5, 13, 6);
g.add_edge(5, 33, 10.63);
g.add_edge(5, 37, 9.43);
g.add_edge(5, 61, 11.31);
g.add_edge(5, 65, 9.43);
g.add_edge(6, 25, 6.4);
g.add_edge(6, 38, 9.21);
g.add_edge(6, 43, 6.32);
g.add_edge(6, 53, 4.47);
g.add_edge(7, 35, 2);
g.add_edge(7, 76, 3.6);
g.add_edge(8, 14, 5.65);
g.add_edge(8, 58, 2.23);
g.add_edge(8, 62, 4.12);
g.add_edge(9, 13, 6.7);
g.add_edge(9, 36, 3);
g.add_edge(9, 70, 2.23);
g.add_edge(9, 74, 4);
g.add_edge(9, 77, 6.08);
g.add_edge(10, 74, 8.06);
g.add_edge(11, 43, 3.6);
g.add_edge(11, 64, 4);
g.add_edge(12, 19, 5);
g.add_edge(12, 47, 10.29);
g.add_edge(12, 73, 2);
g.add_edge(13, 36, 9.48);
g.add_edge(13, 47, 3.16);
g.add_edge(14, 34, 1.41);
g.add_edge(15, 49, 4);
g.add_edge(15, 58, 2);
g.add_edge(16, 65, 5.38);
g.add_edge(17, 44, 9);
g.add_edge(17, 60, 4.12);
g.add_edge(18, 31, 6.32);
g.add_edge(18, 46, 4.47);
g.add_edge(18, 51, 7.28);
g.add_edge(18, 59, 5);
g.add_edge(19, 65, 3.16);
g.add_edge(19, 78, 5.83);
g.add_edge(20, 34, 4.24);
g.add_edge(20, 45, 3.6);
g.add_edge(20, 63, 5.65);
g.add_edge(21, 55, 7.28);
g.add_edge(21, 67, 1);
g.add_edge(22, 29, 4);
g.add_edge(22, 56, 7.07);
g.add_edge(23, 40, 8.54);
g.add_edge(23, 42, 5.83);
g.add_edge(23, 52, 3.6);
g.add_edge(23, 59, 7.07);
g.add_edge(23, 67, 3.6);
g.add_edge(24, 79, 4.47);
g.add_edge(25, 45, 1.41);
g.add_edge(26, 27, 7.61);
g.add_edge(26, 28, 4);
g.add_edge(27, 31, 6.08);
g.add_edge(27, 49, 4.12);
g.add_edge(27, 64, 5);
g.add_edge(27, 66, 8.94);
g.add_edge(28, 41, 3.6);
g.add_edge(29, 36, 3.6);
g.add_edge(29, 38, 4.47);
g.add_edge(30, 44, 5);
g.add_edge(30, 50, 3.6);
g.add_edge(30, 74, 7.21);
g.add_edge(31, 35, 1);
g.add_edge(31, 42, 3.6);
g.add_edge(31, 68, 5.09);
g.add_edge(32, 56, 8.94);
g.add_edge(32, 57, 6.08);
g.add_edge(32, 77, 9.43);
g.add_edge(33, 55, 6.32);
g.add_edge(35, 51, 4.47);
g.add_edge(36, 79, 4.12);
g.add_edge(37, 61, 3);
g.add_edge(37, 76, 7.61);
g.add_edge(38, 68, 8.6);
g.add_edge(38, 72, 1.41);
g.add_edge(38, 77, 7.28);
g.add_edge(39, 71, 5.38);
g.add_edge(41, 50, 2.23);
g.add_edge(42, 62, 8.06);
g.add_edge(42, 70, 7.21);
g.add_edge(43, 56, 7.81);
g.add_edge(43, 70, 6.32);
g.add_edge(43, 78, 8.54);
g.add_edge(46, 71, 8.06);
g.add_edge(46, 78, 8.24);
g.add_edge(48, 75, 3);
g.add_edge(49, 50, 5.38);
g.add_edge(51, 57, 8.48);
g.add_edge(51, 66, 4.24);
g.add_edge(52, 68, 1.41);
g.add_edge(53, 62, 2.23);
g.add_edge(53, 75, 6.7);
g.add_edge(54, 60, 5.83);
g.add_edge(54, 73, 2);
g.add_edge(57, 62, 9);
g.add_edge(59, 72, 3);
g.add_edge(60, 69, 7.07);
g.add_edge(63, 67, 3);
g.add_edge(63, 72, 8.06);
g.add_edge(66, 68, 3.6);
g.add_edge(69, 78, 5);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 9.07);
g.set_importance(7, 8.04);
g.set_importance(8, 0);
g.set_importance(9, 1.61);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 7.99);
g.set_importance(14, 0);
g.set_importance(15, 6.71);
g.set_importance(16, 0);
g.set_importance(17, 4.63);
g.set_importance(18, 2.65);
g.set_importance(19, 1.67);
g.set_importance(20, 2.37);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 2.16);
g.set_importance(25, 5.06);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 5.91);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 7);
g.set_importance(35, 2.87);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 1.87);
g.set_importance(40, 2.8);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 9.1);
g.set_importance(44, 9.63);
g.set_importance(45, 0);
g.set_importance(46, 0);
g.set_importance(47, 6.58);
g.set_importance(48, 3.29);
g.set_importance(49, 2.55);
g.set_importance(50, 3.14);
g.set_importance(51, 5.75);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 2.81);
g.set_importance(56, 0);
g.set_importance(57, 6.53);
g.set_importance(58, 0);
g.set_importance(59, 4.8);
g.set_importance(60, 4.45);
g.set_importance(61, 3.61);
g.set_importance(62, 5.67);
g.set_importance(63, 8.68);
g.set_importance(64, 6.33);
g.set_importance(65, 6.42);
g.set_importance(66, 0);
g.set_importance(67, 2.13);
g.set_importance(68, 4.09);
g.set_importance(69, 9.25);
g.set_importance(70, 1.34);
g.set_importance(71, 0);
g.set_importance(72, 1.89);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 4.53);
g.set_importance(76, 0);
g.set_importance(77, 5.08);
g.set_importance(78, 0);
g.set_importance(79, 3.47);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 41), 2.87);
g.set_repair_time(Line(0, 72), 2.17);
g.set_repair_time(Line(1, 39), 1.25);
g.set_repair_time(Line(2, 25), 2.55);
g.set_repair_time(Line(3, 24), 4.55);
g.set_repair_time(Line(4, 10), 4.35);
g.set_repair_time(Line(5, 65), 1.47);
g.set_repair_time(Line(6, 38), 4.58);
g.set_repair_time(Line(6, 53), 2.59);
g.set_repair_time(Line(7, 35), 1.95);
g.set_repair_time(Line(7, 76), 1);
g.set_repair_time(Line(8, 58), 2.46);
g.set_repair_time(Line(9, 36), 3.63);
g.set_repair_time(Line(9, 70), 4.27);
g.set_repair_time(Line(9, 74), 4.24);
g.set_repair_time(Line(9, 77), 3.94);
g.set_repair_time(Line(10, 74), 4.52);
g.set_repair_time(Line(11, 64), 3.02);
g.set_repair_time(Line(12, 19), 1.4);
g.set_repair_time(Line(12, 47), 1.51);
g.set_repair_time(Line(12, 73), 3.48);
g.set_repair_time(Line(13, 47), 4.31);
g.set_repair_time(Line(14, 34), 2.9);
g.set_repair_time(Line(15, 58), 4.27);
g.set_repair_time(Line(17, 60), 2.84);
g.set_repair_time(Line(18, 31), 3.96);
g.set_repair_time(Line(18, 51), 2.5);
g.set_repair_time(Line(18, 59), 3.42);
g.set_repair_time(Line(19, 65), 1.11);
g.set_repair_time(Line(20, 34), 1.17);
g.set_repair_time(Line(20, 45), 3.84);
g.set_repair_time(Line(20, 63), 2.49);
g.set_repair_time(Line(21, 55), 1.87);
g.set_repair_time(Line(21, 67), 3.28);
g.set_repair_time(Line(22, 56), 3.14);
g.set_repair_time(Line(23, 42), 4.94);
g.set_repair_time(Line(23, 52), 2.71);
g.set_repair_time(Line(23, 67), 2.37);
g.set_repair_time(Line(24, 79), 3.76);
g.set_repair_time(Line(26, 28), 4.45);
g.set_repair_time(Line(27, 31), 1.7);
g.set_repair_time(Line(27, 64), 1.87);
g.set_repair_time(Line(28, 41), 1.83);
g.set_repair_time(Line(29, 38), 3.83);
g.set_repair_time(Line(30, 44), 4.91);
g.set_repair_time(Line(30, 50), 3.02);
g.set_repair_time(Line(31, 35), 2.64);
g.set_repair_time(Line(31, 42), 4.24);
g.set_repair_time(Line(31, 68), 4.13);
g.set_repair_time(Line(32, 56), 3.92);
g.set_repair_time(Line(32, 57), 2);
g.set_repair_time(Line(32, 77), 1.41);
g.set_repair_time(Line(33, 55), 1.7);
g.set_repair_time(Line(36, 79), 2.57);
g.set_repair_time(Line(37, 61), 3.82);
g.set_repair_time(Line(37, 76), 4.79);
g.set_repair_time(Line(38, 72), 2.47);
g.set_repair_time(Line(39, 71), 1.84);
g.set_repair_time(Line(41, 50), 4.94);
g.set_repair_time(Line(42, 70), 3.62);
g.set_repair_time(Line(43, 70), 2.33);
g.set_repair_time(Line(43, 78), 1.81);
g.set_repair_time(Line(48, 75), 1.78);
g.set_repair_time(Line(51, 57), 3.97);
g.set_repair_time(Line(53, 62), 4.28);
g.set_repair_time(Line(53, 75), 3.34);
g.set_repair_time(Line(54, 60), 4.58);
g.set_repair_time(Line(57, 62), 2.1);
g.set_repair_time(Line(59, 72), 1.67);
g.set_repair_time(Line(60, 69), 2.09);
g.set_repair_time(Line(63, 67), 2.15);
g.set_repair_time(Line(66, 68), 1.38);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 24.2125}, {2, 25.6875}, {3, 23.4875}, {4, 23.1125}, {5, 33.5625}, {6, 14.9}, {7, 25.1}, {8, 20.2625}, {9, 17.6875}, {10, 26.8625}, {11, 2.5}, {12, 31.2125}, {13, 26.0625}, {14, 27.325}, {15, 19.5125}, {16, 30.9875}, {17, 29.7875}, {18, 15.5875}, {19, 24.9625}, {20, 22.725}, {21, 20.375}, {22, 17.9375}, {23, 14.625}, {24, 28.175}, {25, 22.9}, {26, 14.5}, {27, 13.75}, {28, 9.5}, {29, 12.9375}, {30, 12.2875}, {31, 21.35}, {32, 27.9375}, {33, 37.375}, {34, 28.025}, {35, 22.6}, {36, 17.4375}, {37, 39.1125}, {38, 7.35}, {39, 28.7125}, {40, 3.95}, {41, 5}, {42, 21.9125}, {43, 7}, {44, 18.5375}, {45, 24.6625}, {46, 21.175}, {47, 30.0125}, {48, 7.7}, {49, 14.5125}, {50, 7.7875}, {51, 24.6875}, {52, 19.125}, {53, 12.325}, {54, 27.4375}, {55, 29.475}, {56, 16.7625}, {57, 26.3625}, {58, 22.0125}, {59, 9.3375}, {60, 32.7625}, {61, 42.8625}, {62, 15.1125}, {63, 15.6625}, {64, 7.5}, {65, 28.9125}, {66, 22.6}, {67, 19.125}, {68, 18.1}, {69, 23.925}, {70, 14.9}, {71, 31.25}, {72, 5.5875}, {73, 29.9375}, {74, 21.3}, {75, 3.95}, {76, 29.6}, {77, 16.45}, {78, 17.675}, {79, 22.5875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 24.2125}, {1, 0}, {2, 19.9375}, {3, 17.475}, {4, 25.4375}, {5, 43.75}, {6, 17.475}, {7, 27.425}, {8, 3.95}, {9, 30.975}, {10, 29.1875}, {11, 26.7125}, {12, 26.425}, {13, 39.35}, {14, 7.35}, {15, 9.2375}, {16, 25.2375}, {17, 33.8625}, {18, 26.8875}, {19, 32.675}, {20, 10.8875}, {21, 22.95}, {22, 39.575}, {23, 26.2}, {24, 23.725}, {25, 17.15}, {26, 28.9}, {27, 19.3875}, {28, 28.25}, {29, 34.575}, {30, 25.4625}, {31, 23.675}, {32, 27.95}, {33, 39.95}, {34, 5.5875}, {35, 24.925}, {36, 34.4625}, {37, 41.4375}, {38, 28.9875}, {39, 4.5}, {40, 28.1625}, {41, 23.75}, {42, 19.175}, {43, 25.375}, {44, 31.7125}, {45, 15.3875}, {46, 21.3}, {47, 39.2875}, {48, 24.0125}, {49, 14.2375}, {50, 20.9625}, {51, 30.5125}, {52, 30.7}, {53, 11.8875}, {54, 21.425}, {55, 32.05}, {56, 35.1375}, {57, 20.35}, {58, 6.7375}, {59, 31.775}, {60, 28.7125}, {61, 45.1875}, {62, 9.1}, {63, 17.95}, {64, 25.6375}, {65, 31.9625}, {66, 30.5625}, {67, 21.7}, {68, 30.0375}, {69, 34.5625}, {70, 28.1875}, {71, 11.225}, {72, 28.025}, {73, 23.925}, {74, 34.475}, {75, 20.2625}, {76, 31.925}, {77, 38.0875}, {78, 28.3125}, {79, 29.3125}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 25.6875}, {1, 19.9375}, {2, 0}, {3, 27.5375}, {4, 33.925}, {5, 23.8125}, {6, 10.7875}, {7, 35.9125}, {8, 23.175}, {9, 29.375}, {10, 37.675}, {11, 23.1875}, {12, 21.9125}, {13, 31.3125}, {14, 16.1125}, {15, 28.4625}, {16, 5.3}, {17, 28.6125}, {18, 24.2625}, {19, 15.6625}, {20, 9.05}, {21, 21.1125}, {22, 32.8875}, {23, 24.3625}, {24, 33.7875}, {25, 2.7875}, {26, 40.1875}, {27, 34.4375}, {28, 35.1875}, {29, 27.8875}, {30, 37.975}, {31, 32.1625}, {32, 38.0125}, {33, 37.1}, {34, 14.35}, {35, 33.4125}, {36, 32.3875}, {37, 35.6}, {38, 22.3}, {39, 24.4375}, {40, 29.6375}, {41, 30.6875}, {42, 29.2375}, {43, 18.6875}, {44, 39.8625}, {45, 4.55}, {46, 18.675}, {47, 34.775}, {48, 28.5}, {49, 33.4625}, {50, 33.475}, {51, 33.3625}, {52, 28.8625}, {53, 16.375}, {54, 26.9125}, {55, 30.2125}, {56, 28.45}, {57, 30.4125}, {58, 25.9625}, {59, 27.8125}, {60, 23.4625}, {61, 37.95}, {62, 19.1625}, {63, 16.1125}, {64, 28.1875}, {65, 12.025}, {66, 35.125}, {67, 19.8625}, {68, 30.625}, {69, 14.625}, {70, 26.5875}, {71, 28.75}, {72, 24.0625}, {73, 24.4125}, {74, 34.375}, {75, 24.75}, {76, 40.4125}, {77, 31.4}, {78, 8.375}, {79, 37.5375}, 