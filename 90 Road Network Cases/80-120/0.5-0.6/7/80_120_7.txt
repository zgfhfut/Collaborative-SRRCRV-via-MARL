node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 7, 10, 11, 13, 14, 15, 18, 20, 23, 24, 25, 26, 28, 30, 34, 36, 37, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 63, 66, 70, 71, 73, 75, 77,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 9), Line(0, 10), Line(0, 26), Line(0, 31), Line(0, 37), Line(0, 43), Line(1, 45), Line(1, 59), Line(2, 14), Line(2, 44), Line(3, 11), Line(3, 34), Line(3, 40), Line(4, 19), Line(4, 42), Line(4, 61), Line(4, 71), Line(5, 7), Line(5, 25), Line(5, 40), Line(5, 56), Line(6, 36), Line(6, 39), Line(6, 41), Line(7, 69), Line(7, 72), Line(8, 22), Line(8, 52), Line(8, 54), Line(9, 10), Line(9, 51), Line(9, 62), Line(10, 31), Line(10, 41), Line(10, 78), Line(11, 23), Line(11, 62), Line(12, 34), Line(12, 72), Line(12, 73), Line(13, 23), Line(13, 48), Line(14, 16), Line(14, 62), Line(15, 24), Line(15, 25), Line(16, 50), Line(17, 38), Line(17, 56), Line(17, 65), Line(17, 77), Line(18, 22), Line(18, 35), Line(18, 46), Line(19, 41), Line(19, 58), Line(20, 27), Line(20, 29), Line(20, 55), Line(21, 34), Line(21, 53), Line(21, 54), Line(22, 27), Line(22, 49), Line(22, 63), Line(22, 71), Line(23, 50), Line(24, 57), Line(25, 78), Line(26, 42), Line(26, 63), Line(27, 51), Line(28, 33), Line(28, 66), Line(29, 61), Line(29, 73), Line(29, 78), Line(30, 46), Line(30, 79), Line(31, 41), Line(31, 65), Line(31, 73), Line(32, 52), Line(32, 75), Line(32, 76), Line(33, 79), Line(34, 41), Line(34, 67), Line(35, 39), Line(36, 58), Line(37, 60), Line(37, 71), Line(38, 45), Line(40, 42), Line(43, 49), Line(43, 70), Line(44, 60), Line(44, 67), Line(44, 78), Line(45, 56), Line(45, 73), Line(46, 75), Line(47, 63), Line(47, 78), Line(48, 56), Line(49, 74), Line(51, 64), Line(51, 68), Line(53, 65), Line(55, 68), Line(56, 61), Line(57, 64), Line(59, 70), Line(60, 63), Line(62, 76), Line(64, 69), Line(66, 75), Line(69, 77), Line(73, 75), Line(74, 77),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 10), Line(0, 37), Line(0, 43), Line(1, 45), Line(1, 59), Line(2, 14), Line(3, 40), Line(4, 19), Line(4, 61), Line(4, 71), Line(5, 7), Line(5, 25), Line(5, 40), Line(5, 56), Line(6, 36), Line(6, 41), Line(7, 69), Line(7, 72), Line(8, 22), Line(9, 62), Line(10, 78), Line(11, 23), Line(11, 62), Line(13, 23), Line(13, 48), Line(14, 16), Line(15, 24), Line(15, 25), Line(17, 56), Line(17, 77), Line(18, 22), Line(18, 35), Line(20, 29), Line(20, 55), Line(21, 34), Line(21, 54), Line(22, 27), Line(22, 71), Line(25, 78), Line(26, 42), Line(28, 33), Line(28, 66), Line(29, 73), Line(30, 46), Line(30, 79), Line(31, 65), Line(31, 73), Line(32, 75), Line(32, 76), Line(33, 79), Line(34, 67), Line(36, 58), Line(37, 60), Line(37, 71), Line(38, 45), Line(40, 42), Line(43, 49), Line(44, 60), Line(44, 67), Line(44, 78), Line(47, 78), Line(48, 56), Line(49, 74), Line(51, 64), Line(51, 68), Line(55, 68), Line(56, 61), Line(57, 64), Line(62, 76), Line(64, 69), Line(69, 77), Line(73, 75),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 9, 5.83);
g.add_edge(0, 10, 5.38);
g.add_edge(0, 26, 4.12);
g.add_edge(0, 31, 4.24);
g.add_edge(0, 37, 1.41);
g.add_edge(0, 43, 2.23);
g.add_edge(1, 45, 9.21);
g.add_edge(1, 59, 9);
g.add_edge(2, 14, 1.41);
g.add_edge(2, 44, 4.47);
g.add_edge(3, 11, 7.28);
g.add_edge(3, 34, 2.23);
g.add_edge(3, 40, 3);
g.add_edge(4, 19, 7);
g.add_edge(4, 42, 8.06);
g.add_edge(4, 61, 6.32);
g.add_edge(4, 71, 6.08);
g.add_edge(5, 7, 8.06);
g.add_edge(5, 25, 9.89);
g.add_edge(5, 40, 7);
g.add_edge(5, 56, 9.21);
g.add_edge(6, 36, 6.7);
g.add_edge(6, 39, 2.23);
g.add_edge(6, 41, 9.43);
g.add_edge(7, 69, 4.24);
g.add_edge(7, 72, 5);
g.add_edge(8, 22, 2.82);
g.add_edge(8, 52, 3.6);
g.add_edge(8, 54, 4.12);
g.add_edge(9, 10, 8.54);
g.add_edge(9, 51, 4.47);
g.add_edge(9, 62, 3);
g.add_edge(10, 31, 2.23);
g.add_edge(10, 41, 1.41);
g.add_edge(10, 78, 6.7);
g.add_edge(11, 23, 2.23);
g.add_edge(11, 62, 8.06);
g.add_edge(12, 34, 6.08);
g.add_edge(12, 72, 2);
g.add_edge(12, 73, 5.83);
g.add_edge(13, 23, 2);
g.add_edge(13, 48, 7.07);
g.add_edge(14, 16, 5);
g.add_edge(14, 62, 10);
g.add_edge(15, 24, 4.47);
g.add_edge(15, 25, 8.48);
g.add_edge(16, 50, 1);
g.add_edge(17, 38, 6.08);
g.add_edge(17, 56, 8.06);
g.add_edge(17, 65, 6.7);
g.add_edge(17, 77, 7.07);
g.add_edge(18, 22, 4);
g.add_edge(18, 35, 1);
g.add_edge(18, 46, 3.6);
g.add_edge(19, 41, 6.08);
g.add_edge(19, 58, 2.82);
g.add_edge(20, 27, 3.16);
g.add_edge(20, 29, 8);
g.add_edge(20, 55, 1);
g.add_edge(21, 34, 6.32);
g.add_edge(21, 53, 3.16);
g.add_edge(21, 54, 4.12);
g.add_edge(22, 27, 4.47);
g.add_edge(22, 49, 4.12);
g.add_edge(22, 63, 3.6);
g.add_edge(22, 71, 4.47);
g.add_edge(23, 50, 8.24);
g.add_edge(24, 57, 3.6);
g.add_edge(25, 78, 6.08);
g.add_edge(26, 42, 5.38);
g.add_edge(26, 63, 2.82);
g.add_edge(27, 51, 5.83);
g.add_edge(28, 33, 5.38);
g.add_edge(28, 66, 6.4);
g.add_edge(29, 61, 6.7);
g.add_edge(29, 73, 9.21);
g.add_edge(29, 78, 4.47);
g.add_edge(30, 46, 8.24);
g.add_edge(30, 79, 6.4);
g.add_edge(31, 41, 2.23);
g.add_edge(31, 65, 6);
g.add_edge(31, 73, 6.7);
g.add_edge(32, 52, 1);
g.add_edge(32, 75, 2.82);
g.add_edge(32, 76, 9.48);
g.add_edge(33, 79, 3.6);
g.add_edge(34, 41, 8.06);
g.add_edge(34, 67, 7.21);
g.add_edge(35, 39, 7.07);
g.add_edge(36, 58, 2.23);
g.add_edge(37, 60, 1);
g.add_edge(37, 71, 7.61);
g.add_edge(38, 45, 6.08);
g.add_edge(40, 42, 7.07);
g.add_edge(43, 49, 6);
g.add_edge(43, 70, 5.38);
g.add_edge(44, 60, 5.09);
g.add_edge(44, 67, 2.23);
g.add_edge(44, 78, 1);
g.add_edge(45, 56, 3.6);
g.add_edge(45, 73, 1.41);
g.add_edge(46, 75, 6.08);
g.add_edge(47, 63, 4.47);
g.add_edge(47, 78, 2.23);
g.add_edge(48, 56, 5);
g.add_edge(49, 74, 2.82);
g.add_edge(51, 64, 3.6);
g.add_edge(51, 68, 4.47);
g.add_edge(53, 65, 4);
g.add_edge(55, 68, 6.08);
g.add_edge(56, 61, 2.23);
g.add_edge(57, 64, 2.23);
g.add_edge(59, 70, 2.23);
g.add_edge(60, 63, 7.21);
g.add_edge(62, 76, 2.23);
g.add_edge(64, 69, 3);
g.add_edge(66, 75, 3.6);
g.add_edge(69, 77, 5.38);
g.add_edge(73, 75, 6.08);
g.add_edge(74, 77, 5.09);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 9.67);
g.set_importance(7, 7.35);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 2.86);
g.set_importance(11, 4.86);
g.set_importance(12, 0);
g.set_importance(13, 9.19);
g.set_importance(14, 3.23);
g.set_importance(15, 9.96);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 2.37);
g.set_importance(19, 0);
g.set_importance(20, 8.5);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 6.01);
g.set_importance(24, 6.59);
g.set_importance(25, 3.81);
g.set_importance(26, 6.21);
g.set_importance(27, 0);
g.set_importance(28, 4.53);
g.set_importance(29, 0);
g.set_importance(30, 6.96);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 5.02);
g.set_importance(35, 0);
g.set_importance(36, 8.84);
g.set_importance(37, 2.69);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 6.49);
g.set_importance(41, 0);
g.set_importance(42, 2.05);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 9.55);
g.set_importance(46, 7.77);
g.set_importance(47, 6.07);
g.set_importance(48, 8.05);
g.set_importance(49, 4.41);
g.set_importance(50, 6.17);
g.set_importance(51, 1.66);
g.set_importance(52, 5.43);
g.set_importance(53, 0);
g.set_importance(54, 2.91);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 4.34);
g.set_importance(58, 7.37);
g.set_importance(59, 3.29);
g.set_importance(60, 6.24);
g.set_importance(61, 0);
g.set_importance(62, 0);
g.set_importance(63, 9.41);
g.set_importance(64, 0);
g.set_importance(65, 0);
g.set_importance(66, 3.13);
g.set_importance(67, 0);
g.set_importance(68, 0);
g.set_importance(69, 0);
g.set_importance(70, 4.86);
g.set_importance(71, 4.75);
g.set_importance(72, 0);
g.set_importance(73, 3.74);
g.set_importance(74, 0);
g.set_importance(75, 7.94);
g.set_importance(76, 0);
g.set_importance(77, 8.05);
g.set_importance(78, 0);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 10), 4.57);
g.set_repair_time(Line(0, 37), 2.88);
g.set_repair_time(Line(0, 43), 3.71);
g.set_repair_time(Line(1, 45), 3.5);
g.set_repair_time(Line(1, 59), 3.98);
g.set_repair_time(Line(2, 14), 1.6);
g.set_repair_time(Line(3, 40), 1.49);
g.set_repair_time(Line(4, 19), 3.39);
g.set_repair_time(Line(4, 61), 2.79);
g.set_repair_time(Line(4, 71), 1.9);
g.set_repair_time(Line(5, 7), 3.75);
g.set_repair_time(Line(5, 25), 2.87);
g.set_repair_time(Line(5, 40), 1.66);
g.set_repair_time(Line(5, 56), 3.87);
g.set_repair_time(Line(6, 36), 1.57);
g.set_repair_time(Line(6, 41), 2.97);
g.set_repair_time(Line(7, 69), 3.07);
g.set_repair_time(Line(7, 72), 2.86);
g.set_repair_time(Line(8, 22), 2.01);
g.set_repair_time(Line(9, 62), 3.59);
g.set_repair_time(Line(10, 78), 3.11);
g.set_repair_time(Line(11, 23), 4.04);
g.set_repair_time(Line(11, 62), 2.29);
g.set_repair_time(Line(13, 23), 3.86);
g.set_repair_time(Line(13, 48), 3.11);
g.set_repair_time(Line(14, 16), 1.24);
g.set_repair_time(Line(15, 24), 2.05);
g.set_repair_time(Line(15, 25), 4.16);
g.set_repair_time(Line(17, 56), 4.84);
g.set_repair_time(Line(17, 77), 2.8);
g.set_repair_time(Line(18, 22), 2.25);
g.set_repair_time(Line(18, 35), 4.79);
g.set_repair_time(Line(20, 29), 1.72);
g.set_repair_time(Line(20, 55), 3.04);
g.set_repair_time(Line(21, 34), 1.67);
g.set_repair_time(Line(21, 54), 1.64);
g.set_repair_time(Line(22, 27), 1.95);
g.set_repair_time(Line(22, 71), 3.4);
g.set_repair_time(Line(25, 78), 1.71);
g.set_repair_time(Line(26, 42), 3.84);
g.set_repair_time(Line(28, 33), 4.58);
g.set_repair_time(Line(28, 66), 3.58);
g.set_repair_time(Line(29, 73), 3.29);
g.set_repair_time(Line(30, 46), 2.87);
g.set_repair_time(Line(30, 79), 2.52);
g.set_repair_time(Line(31, 65), 3.54);
g.set_repair_time(Line(31, 73), 2.67);
g.set_repair_time(Line(32, 75), 3.09);
g.set_repair_time(Line(32, 76), 1.96);
g.set_repair_time(Line(33, 79), 1.97);
g.set_repair_time(Line(34, 67), 1);
g.set_repair_time(Line(36, 58), 2.24);
g.set_repair_time(Line(37, 60), 3.81);
g.set_repair_time(Line(37, 71), 2.98);
g.set_repair_time(Line(38, 45), 2.83);
g.set_repair_time(Line(40, 42), 3.67);
g.set_repair_time(Line(43, 49), 1.08);
g.set_repair_time(Line(44, 60), 1.7);
g.set_repair_time(Line(44, 67), 1.53);
g.set_repair_time(Line(44, 78), 2.79);
g.set_repair_time(Line(47, 78), 1.43);
g.set_repair_time(Line(48, 56), 1.73);
g.set_repair_time(Line(49, 74), 1.65);
g.set_repair_time(Line(51, 64), 3.89);
g.set_repair_time(Line(51, 68), 4.62);
g.set_repair_time(Line(55, 68), 3.71);
g.set_repair_time(Line(56, 61), 1.69);
g.set_repair_time(Line(57, 64), 3.46);
g.set_repair_time(Line(62, 76), 1.2);
g.set_repair_time(Line(64, 69), 4.41);
g.set_repair_time(Line(69, 77), 2.76);
g.set_repair_time(Line(73, 75), 3.83);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 23.55}, {2, 14.9625}, {3, 20.95}, {4, 18.875}, {5, 29.4625}, {6, 19.875}, {7, 26.425}, {8, 16.7}, {9, 7.2875}, {10, 6.725}, {11, 21.1125}, {12, 20.9625}, {13, 26.4}, {14, 16.725}, {15, 28.825}, {16, 22.975}, {17, 21.175}, {18, 18.175}, {19, 15.6875}, {20, 22.7125}, {21, 21.75}, {22, 13.175}, {23, 23.9}, {24, 24.6625}, {25, 18.225}, {26, 5.15}, {27, 18.7625}, {28, 33.775}, {29, 16.2125}, {30, 32.975}, {31, 5.3}, {32, 22.45}, {33, 40.5}, {34, 18.1625}, {35, 19.425}, {36, 22}, {37, 1.7625}, {38, 23.0375}, {39, 22.6625}, {40, 20.7125}, {41, 8.0875}, {42, 11.875}, {43, 2.7875}, {44, 9.375}, {45, 15.4375}, {46, 22.675}, {47, 13.4125}, {48, 26.1875}, {49, 10.2875}, {50, 24.225}, {51, 12.875}, {52, 21.2}, {53, 17.8}, {54, 21.85}, {55, 23.9625}, {56, 19.9375}, {57, 20.1625}, {58, 19.2125}, {59, 12.3}, {60, 3.0125}, {61, 22.725}, {62, 11.0375}, {63, 8.675}, {64, 17.375}, {65, 12.8}, {66, 25.775}, {67, 12.1625}, {68, 18.4625}, {69, 21.125}, {70, 9.5125}, {71, 11.275}, {72, 23.4625}, {73, 13.675}, {74, 13.8125}, {75, 21.275}, {76, 13.825}, {77, 20.175}, {78, 10.625}, {79, 40.975}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 23.55}, {1, 0}, {2, 37.2125}, {3, 30.95}, {4, 26.7}, {5, 27.525}, {6, 36.225}, {7, 29.3125}, {8, 30.15}, {9, 30.8375}, {10, 24.4375}, {11, 36.3875}, {12, 20.5625}, {13, 31.1}, {14, 38.975}, {15, 48.575}, {16, 45.15}, {17, 26.0875}, {18, 32.975}, {19, 32.0375}, {20, 34.7875}, {21, 36.0625}, {22, 33.4125}, {23, 33.6}, {24, 45.65}, {25, 37.975}, {26, 28.7}, {27, 38.7375}, {28, 33.375}, {29, 24.7875}, {30, 38.775}, {31, 21.65}, {32, 24.4}, {33, 40.1}, {34, 28.1625}, {35, 34.225}, {36, 38.35}, {37, 25.3125}, {38, 19.1125}, {39, 39.0125}, {40, 34.7}, {41, 24.4375}, {42, 35.425}, {43, 20.7625}, {44, 31.625}, {45, 11.5125}, {46, 28.475}, {47, 33.1625}, {48, 22.2625}, {49, 28.2625}, {50, 43.9}, {51, 36.425}, {52, 25.65}, {53, 34.15}, {54, 35.3}, {55, 36.0375}, {56, 16.0125}, {57, 41.15}, {58, 35.5625}, {59, 11.25}, {60, 26.5625}, {61, 18.8}, {62, 34.5875}, {63, 32.225}, {64, 38.3625}, {65, 29.15}, {66, 25.375}, {67, 34.4125}, {68, 42.0125}, {69, 34.6125}, {70, 14.0375}, {71, 34.3}, {72, 23.0625}, {73, 13.275}, {74, 31.7875}, {75, 20.875}, {76, 36.25}, {77, 34.925}, {78, 30.375}, {79, 44.6}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 14.9625}, {1, 37.2125}, {2, 0}, {3, 20.175}, {4, 28.7}, {5, 26.8}, {6, 28.7625}, {7, 33.7375}, {8, 23.2375}, {9, 18.0125}, {10, 15.2125}, {11, 22.35}, {12, 24.9875}, {13, 22.0625}, {14, 1.7625}, {15, 25.0375}, {16, 8.0125}, {17, 33.6625}, {18, 24.7125}, {19, 24.575}, {20, 22.425}, {21, 25.2875}, {22, 19.7125}, {23, 19.5625}, {24, 30.625}, {25, 14.4375}, {26, 18.7375}, {27, 25.3}, {28, 44.0375}, {29, 12.425}, {30, 39.5125}, {31, 18}, {32, 28.9}, {33, 50.7625}, {34, 17.3875}, {35, 25.9625}, {36, 30.8875}, {37, 13.2}, {38, 33.3}, {39, 31.55}, {40, 23.925}, {41, 16.975}, {42, 25.4625}, {43, 17.75}, {44, 5.5875}, {45, 25.7}, {46, 29.2125}, {47, 9.625}, {48, 29.8375}, {49, 24.8625}, {50, 9.2625}, {51, 23.6}, {52, 27.7375}, {53, 29.2375}, {54, 28.3875}, {55, 23.675}, {56, 23.5875}, {57, 30.8875}, {58, 28.1}, {59, 27.2625}, {60, 11.95}, {61, 20.8}, {62, 14.2625}, {63, 15.2125}, {64, 28.1}, {65, 25.5}, {66, 36.0375}, {67, 8.375}, {68, 29.1875}, {69, 31.85}, {70, 24.475}, {71, 22.7125}, {72, 27.4875}, {73, 23.9375}, {74, 28.3875}, {75, 31.5375}, {76, 17.05}, {77, 34.75}, {78, 6.8375}, {79, 47.5125}, 