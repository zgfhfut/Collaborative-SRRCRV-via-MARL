node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 7, 8, 9, 12, 14, 15, 18, 19, 20, 21, 23, 24, 26, 30, 33, 39, 40, 43, 46, 47, 49, 53, 55, 57, 58, 60, 61, 62, 64, 65, 67, 69, 70, 72, 74, 75, 76, 77, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 3), Line(0, 31), Line(0, 35), Line(0, 39), Line(0, 69), Line(1, 5), Line(1, 24), Line(1, 50), Line(1, 60), Line(1, 62), Line(2, 5), Line(2, 17), Line(2, 30), Line(3, 8), Line(3, 64), Line(4, 13), Line(4, 38), Line(4, 51), Line(6, 40), Line(6, 45), Line(6, 55), Line(7, 18), Line(7, 26), Line(7, 34), Line(7, 58), Line(8, 13), Line(9, 22), Line(9, 69), Line(9, 75), Line(10, 36), Line(10, 40), Line(11, 25), Line(11, 29), Line(11, 58), Line(12, 59), Line(12, 64), Line(14, 24), Line(14, 63), Line(14, 79), Line(15, 44), Line(15, 46), Line(16, 49), Line(16, 54), Line(16, 62), Line(18, 31), Line(18, 38), Line(19, 37), Line(19, 70), Line(20, 31), Line(20, 45), Line(20, 72), Line(21, 32), Line(21, 68), Line(22, 46), Line(22, 57), Line(22, 74), Line(22, 75), Line(23, 50), Line(23, 75), Line(24, 33), Line(24, 39), Line(25, 56), Line(26, 53), Line(26, 68), Line(27, 31), Line(27, 44), Line(28, 60), Line(28, 79), Line(29, 44), Line(29, 48), Line(29, 49), Line(29, 50), Line(30, 47), Line(30, 73), Line(31, 33), Line(31, 52), Line(32, 50), Line(32, 59), Line(33, 36), Line(34, 52), Line(34, 76), Line(34, 78), Line(35, 47), Line(35, 70), Line(37, 78), Line(38, 40), Line(38, 45), Line(38, 52), Line(39, 54), Line(41, 66), Line(41, 70), Line(41, 74), Line(42, 52), Line(42, 66), Line(42, 67), Line(43, 48), Line(43, 55), Line(43, 61), Line(43, 76), Line(45, 64), Line(46, 54), Line(48, 64), Line(49, 77), Line(50, 77), Line(51, 61), Line(53, 57), Line(53, 59), Line(53, 62), Line(55, 59), Line(55, 65), Line(56, 67), Line(58, 63), Line(60, 72), Line(60, 79), Line(61, 71), Line(63, 64), Line(65, 71), Line(66, 76), Line(70, 77), Line(73, 74),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 3), Line(0, 35), Line(0, 39), Line(1, 24), Line(1, 50), Line(1, 60), Line(1, 62), Line(2, 30), Line(3, 8), Line(3, 64), Line(4, 13), Line(4, 51), Line(6, 40), Line(6, 45), Line(7, 18), Line(7, 26), Line(7, 58), Line(8, 13), Line(9, 69), Line(9, 75), Line(11, 25), Line(11, 29), Line(11, 58), Line(12, 64), Line(14, 79), Line(15, 44), Line(16, 54), Line(18, 31), Line(20, 31), Line(20, 45), Line(20, 72), Line(21, 32), Line(21, 68), Line(22, 46), Line(22, 57), Line(22, 75), Line(23, 75), Line(24, 33), Line(25, 56), Line(27, 44), Line(28, 60), Line(29, 44), Line(29, 48), Line(29, 49), Line(29, 50), Line(30, 47), Line(30, 73), Line(31, 33), Line(32, 50), Line(34, 76), Line(34, 78), Line(35, 47), Line(37, 78), Line(38, 45), Line(38, 52), Line(41, 70), Line(41, 74), Line(42, 52), Line(42, 66), Line(43, 48), Line(43, 55), Line(49, 77), Line(50, 77), Line(53, 57), Line(53, 62), Line(55, 59), Line(55, 65), Line(58, 63), Line(60, 79), Line(61, 71), Line(66, 76), Line(70, 77),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 3, 3);
g.add_edge(0, 31, 7.07);
g.add_edge(0, 35, 5.83);
g.add_edge(0, 39, 3.16);
g.add_edge(0, 69, 7);
g.add_edge(1, 5, 3.16);
g.add_edge(1, 24, 1.41);
g.add_edge(1, 50, 3.16);
g.add_edge(1, 60, 8.24);
g.add_edge(1, 62, 7.61);
g.add_edge(2, 5, 3.16);
g.add_edge(2, 17, 6.4);
g.add_edge(2, 30, 2.23);
g.add_edge(3, 8, 8.54);
g.add_edge(3, 64, 8.06);
g.add_edge(4, 13, 8.48);
g.add_edge(4, 38, 9);
g.add_edge(4, 51, 3.6);
g.add_edge(6, 40, 10.81);
g.add_edge(6, 45, 4.47);
g.add_edge(6, 55, 1);
g.add_edge(7, 18, 2.23);
g.add_edge(7, 26, 3.16);
g.add_edge(7, 34, 5.38);
g.add_edge(7, 58, 7.07);
g.add_edge(8, 13, 2.23);
g.add_edge(9, 22, 4.24);
g.add_edge(9, 69, 8.06);
g.add_edge(9, 75, 8.94);
g.add_edge(10, 36, 2.23);
g.add_edge(10, 40, 4.47);
g.add_edge(11, 25, 4.12);
g.add_edge(11, 29, 7.61);
g.add_edge(11, 58, 2.23);
g.add_edge(12, 59, 3.6);
g.add_edge(12, 64, 7);
g.add_edge(14, 24, 1);
g.add_edge(14, 63, 6);
g.add_edge(14, 79, 6.32);
g.add_edge(15, 44, 4.12);
g.add_edge(15, 46, 5.65);
g.add_edge(16, 49, 4.12);
g.add_edge(16, 54, 1);
g.add_edge(16, 62, 7.81);
g.add_edge(18, 31, 7.28);
g.add_edge(18, 38, 3);
g.add_edge(19, 37, 9.21);
g.add_edge(19, 70, 9.05);
g.add_edge(20, 31, 1.41);
g.add_edge(20, 45, 3.16);
g.add_edge(20, 72, 6.7);
g.add_edge(21, 32, 8.94);
g.add_edge(21, 68, 2);
g.add_edge(22, 46, 5);
g.add_edge(22, 57, 3.6);
g.add_edge(22, 74, 2);
g.add_edge(22, 75, 5.09);
g.add_edge(23, 50, 7.81);
g.add_edge(23, 75, 7.07);
g.add_edge(24, 33, 9.48);
g.add_edge(24, 39, 3);
g.add_edge(25, 56, 10);
g.add_edge(26, 53, 6.32);
g.add_edge(26, 68, 5);
g.add_edge(27, 31, 2.23);
g.add_edge(27, 44, 3.6);
g.add_edge(28, 60, 5);
g.add_edge(28, 79, 1.41);
g.add_edge(29, 44, 8.06);
g.add_edge(29, 48, 4);
g.add_edge(29, 49, 3.16);
g.add_edge(29, 50, 5.65);
g.add_edge(30, 47, 5.83);
g.add_edge(30, 73, 2.23);
g.add_edge(31, 33, 4.12);
g.add_edge(31, 52, 3.16);
g.add_edge(32, 50, 2.82);
g.add_edge(32, 59, 5.38);
g.add_edge(33, 36, 6.08);
g.add_edge(34, 52, 3.6);
g.add_edge(34, 76, 2.23);
g.add_edge(34, 78, 1.41);
g.add_edge(35, 47, 6.32);
g.add_edge(35, 70, 6);
g.add_edge(37, 78, 1.41);
g.add_edge(38, 40, 1);
g.add_edge(38, 45, 5.83);
g.add_edge(38, 52, 6.32);
g.add_edge(39, 54, 5.38);
g.add_edge(41, 66, 4.24);
g.add_edge(41, 70, 3.6);
g.add_edge(41, 74, 2.23);
g.add_edge(42, 52, 6);
g.add_edge(42, 66, 2.23);
g.add_edge(42, 67, 1);
g.add_edge(43, 48, 5.83);
g.add_edge(43, 55, 6);
g.add_edge(43, 61, 2.23);
g.add_edge(43, 76, 2.23);
g.add_edge(45, 64, 4.47);
g.add_edge(46, 54, 5.83);
g.add_edge(48, 64, 3.6);
g.add_edge(49, 77, 5.38);
g.add_edge(50, 77, 3.6);
g.add_edge(51, 61, 6);
g.add_edge(53, 57, 4.12);
g.add_edge(53, 59, 6);
g.add_edge(53, 62, 2.23);
g.add_edge(55, 59, 3.6);
g.add_edge(55, 65, 5.38);
g.add_edge(56, 67, 8.06);
g.add_edge(58, 63, 3.16);
g.add_edge(60, 72, 8);
g.add_edge(60, 79, 5);
g.add_edge(61, 71, 7);
g.add_edge(63, 64, 5.65);
g.add_edge(65, 71, 4.12);
g.add_edge(66, 76, 5.38);
g.add_edge(70, 77, 1.41);
g.add_edge(73, 74, 5.38);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 3.71);
g.set_importance(6, 0);
g.set_importance(7, 8.3);
g.set_importance(8, 8.44);
g.set_importance(9, 4.62);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 7.75);
g.set_importance(13, 0);
g.set_importance(14, 1.64);
g.set_importance(15, 6.71);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 1.78);
g.set_importance(19, 7.99);
g.set_importance(20, 8.63);
g.set_importance(21, 2.25);
g.set_importance(22, 0);
g.set_importance(23, 9.18);
g.set_importance(24, 6.53);
g.set_importance(25, 0);
g.set_importance(26, 6.88);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 2.71);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 9.66);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 8.55);
g.set_importance(40, 4.64);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 9.68);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 6.66);
g.set_importance(47, 6.78);
g.set_importance(48, 0);
g.set_importance(49, 8.43);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 0);
g.set_importance(53, 4.37);
g.set_importance(54, 0);
g.set_importance(55, 5.65);
g.set_importance(56, 0);
g.set_importance(57, 3.07);
g.set_importance(58, 9.27);
g.set_importance(59, 0);
g.set_importance(60, 4.24);
g.set_importance(61, 8.18);
g.set_importance(62, 5.1);
g.set_importance(63, 0);
g.set_importance(64, 8.29);
g.set_importance(65, 4.6);
g.set_importance(66, 0);
g.set_importance(67, 9.12);
g.set_importance(68, 0);
g.set_importance(69, 2.53);
g.set_importance(70, 1.69);
g.set_importance(71, 0);
g.set_importance(72, 9.63);
g.set_importance(73, 0);
g.set_importance(74, 4.71);
g.set_importance(75, 7.72);
g.set_importance(76, 3.57);
g.set_importance(77, 6.1);
g.set_importance(78, 0);
g.set_importance(79, 3.12);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 3), 2.21);
g.set_repair_time(Line(0, 35), 4.23);
g.set_repair_time(Line(0, 39), 2.25);
g.set_repair_time(Line(1, 24), 2.35);
g.set_repair_time(Line(1, 50), 4.81);
g.set_repair_time(Line(1, 60), 2.85);
g.set_repair_time(Line(1, 62), 4.56);
g.set_repair_time(Line(2, 30), 1.73);
g.set_repair_time(Line(3, 8), 3.76);
g.set_repair_time(Line(3, 64), 4.93);
g.set_repair_time(Line(4, 13), 3.39);
g.set_repair_time(Line(4, 51), 2.06);
g.set_repair_time(Line(6, 40), 3.82);
g.set_repair_time(Line(6, 45), 4.36);
g.set_repair_time(Line(7, 18), 3.37);
g.set_repair_time(Line(7, 26), 2.23);
g.set_repair_time(Line(7, 58), 2.17);
g.set_repair_time(Line(8, 13), 1.53);
g.set_repair_time(Line(9, 69), 2.7);
g.set_repair_time(Line(9, 75), 3.95);
g.set_repair_time(Line(11, 25), 3.42);
g.set_repair_time(Line(11, 29), 3.33);
g.set_repair_time(Line(11, 58), 3.07);
g.set_repair_time(Line(12, 64), 3.03);
g.set_repair_time(Line(14, 79), 4.85);
g.set_repair_time(Line(15, 44), 1.56);
g.set_repair_time(Line(16, 54), 1.42);
g.set_repair_time(Line(18, 31), 1.5);
g.set_repair_time(Line(20, 31), 2.01);
g.set_repair_time(Line(20, 45), 3.05);
g.set_repair_time(Line(20, 72), 4.56);
g.set_repair_time(Line(21, 32), 2.76);
g.set_repair_time(Line(21, 68), 4.46);
g.set_repair_time(Line(22, 46), 4.28);
g.set_repair_time(Line(22, 57), 4.6);
g.set_repair_time(Line(22, 75), 3.94);
g.set_repair_time(Line(23, 75), 1.8);
g.set_repair_time(Line(24, 33), 3.18);
g.set_repair_time(Line(25, 56), 4.59);
g.set_repair_time(Line(27, 44), 3.53);
g.set_repair_time(Line(28, 60), 4.58);
g.set_repair_time(Line(29, 44), 3.54);
g.set_repair_time(Line(29, 48), 4.65);
g.set_repair_time(Line(29, 49), 1.31);
g.set_repair_time(Line(29, 50), 1.19);
g.set_repair_time(Line(30, 47), 2.26);
g.set_repair_time(Line(30, 73), 2.66);
g.set_repair_time(Line(31, 33), 2.91);
g.set_repair_time(Line(32, 50), 2.86);
g.set_repair_time(Line(34, 76), 1.39);
g.set_repair_time(Line(34, 78), 1.03);
g.set_repair_time(Line(35, 47), 1.81);
g.set_repair_time(Line(37, 78), 2.2);
g.set_repair_time(Line(38, 45), 4.32);
g.set_repair_time(Line(38, 52), 4.65);
g.set_repair_time(Line(41, 70), 3.69);
g.set_repair_time(Line(41, 74), 4.08);
g.set_repair_time(Line(42, 52), 3.47);
g.set_repair_time(Line(42, 66), 2.43);
g.set_repair_time(Line(43, 48), 2.74);
g.set_repair_time(Line(43, 55), 4.07);
g.set_repair_time(Line(49, 77), 1.21);
g.set_repair_time(Line(50, 77), 1.34);
g.set_repair_time(Line(53, 57), 1.85);
g.set_repair_time(Line(53, 62), 3.48);
g.set_repair_time(Line(55, 59), 2.03);
g.set_repair_time(Line(55, 65), 4.73);
g.set_repair_time(Line(58, 63), 1.23);
g.set_repair_time(Line(60, 79), 3.15);
g.set_repair_time(Line(61, 71), 2.22);
g.set_repair_time(Line(66, 76), 4.19);
g.set_repair_time(Line(70, 77), 4.81);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 9.4625}, {2, 17.3625}, {3, 3.75}, {4, 27.8125}, {5, 13.4125}, {6, 20.1375}, {7, 20.725}, {8, 14.425}, {9, 18.825}, {10, 24.375}, {11, 23.1875}, {12, 22.575}, {13, 17.2125}, {14, 8.95}, {15, 21.275}, {16, 11.925}, {17, 25.3625}, {18, 17.9375}, {19, 26.1}, {20, 10.6}, {21, 28.1125}, {22, 24.125}, {23, 23.175}, {24, 7.7}, {25, 28.3375}, {26, 24.675}, {27, 11.625}, {28, 18.6125}, {29, 20.475}, {30, 20.15}, {31, 8.8375}, {32, 16.9375}, {33, 13.9875}, {34, 17.2875}, {35, 7.2875}, {36, 21.5875}, {37, 20.8125}, {38, 20.6875}, {39, 3.95}, {40, 21.9375}, {41, 19.2875}, {42, 20.2875}, {43, 22.8625}, {44, 16.125}, {45, 14.55}, {46, 17.9625}, {47, 15.1875}, {48, 18.325}, {49, 17.075}, {50, 13.4125}, {51, 32.3125}, {52, 12.7875}, {53, 21.7625}, {54, 10.675}, {55, 21.3875}, {56, 31.6125}, {57, 26.9125}, {58, 20.4}, {59, 23.6625}, {60, 19.7625}, {61, 25.65}, {62, 18.975}, {63, 16.45}, {64, 13.825}, {65, 28.1125}, {66, 23.075}, {67, 21.5375}, {68, 30.6125}, {69, 8.75}, {70, 14.7875}, {71, 33.2625}, {72, 18.975}, {73, 22.9375}, {74, 22.075}, {75, 30}, {76, 20.075}, {77, 16.55}, {78, 19.05}, {79, 16.85}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 9.4625}, {1, 0}, {2, 7.9}, {3, 13.2125}, {4, 37.275}, {5, 3.95}, {6, 19.95}, {7, 23.3}, {8, 23.8875}, {9, 25.3}, {10, 24}, {11, 17.25}, {12, 18.7}, {13, 26.675}, {14, 3.0125}, {15, 26.2375}, {16, 13.4875}, {17, 15.9}, {18, 26.0875}, {19, 21.525}, {20, 20.0625}, {21, 18.65}, {22, 20}, {23, 13.7125}, {24, 1.7625}, {25, 22.4}, {26, 20.2}, {27, 21.0875}, {28, 12.675}, {29, 11.0125}, {30, 10.6875}, {31, 18.3}, {32, 7.475}, {33, 13.6125}, {34, 26.75}, {35, 16.75}, {36, 21.2125}, {37, 30.275}, {38, 29.8375}, {39, 5.5125}, {40, 29.5875}, {41, 14.7125}, {42, 22.8}, {43, 23.3}, {44, 21.0875}, {45, 23.1625}, {46, 19.525}, {47, 17.975}, {48, 16.0125}, {49, 14.9625}, {50, 3.95}, {51, 33.5875}, {52, 22.25}, {53, 12.3}, {54, 12.2375}, {55, 18.7}, {56, 34.125}, {57, 17.45}, {58, 14.4625}, {59, 14.2}, {60, 10.3}, {61, 26.0875}, {62, 9.5125}, {63, 10.5125}, {64, 17.575}, {65, 25.425}, {66, 20.0125}, {67, 24.05}, {68, 21.15}, {69, 18.2125}, {70, 10.2125}, {71, 30.575}, {72, 20.3}, {73, 13.475}, {74, 17.5}, {75, 22.55}, {76, 26.0875}, {77, 8.45}, {78, 28.5125}, {79, 10.9125}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 17.3625}, {1, 7.9}, {2, 0}, {3, 21.1125}, {4, 44.6875}, {5, 3.95}, {6, 27.85}, {7, 31.2}, {8, 31.7875}, {9, 20.1}, {10, 31.9}, {11, 25.15}, {12, 26.6}, {13, 34.575}, {14, 10.9125}, {15, 28.1125}, {16, 21.3875}, {17, 8}, {18, 33.9875}, {19, 29.425}, {20, 27.9625}, {21, 26.55}, {22, 14.8}, {23, 21.6125}, {24, 9.6625}, {25, 30.3}, {26, 28.1}, {27, 28.9875}, {28, 20.575}, {29, 18.9125}, {30, 2.7875}, {31, 26.2}, {32, 15.375}, {33, 21.5125}, {34, 29.9}, {35, 17.975}, {36, 29.1125}, {37, 33.425}, {38, 37.7375}, {39, 13.4125}, {40, 37.4875}, {41, 15.0875}, {42, 23.175}, {43, 29.9}, {44, 28.9875}, {45, 31.0625}, {46, 21.05}, {47, 10.075}, {48, 23.9125}, {49, 22.8625}, {50, 11.85}, {51, 40.1875}, {52, 30.15}, {53, 20.2}, {54, 20.1375}, {55, 26.6}, {56, 34.5}, {57, 19.3}, {58, 22.3625}, {59, 22.1}, {60, 18.2}, {61, 32.6875}, {62, 17.4125}, {63, 18.4125}, {64, 25.475}, {65, 33.325}, {66, 20.3875}, {67, 24.425}, {68, 29.05}, {69, 26.1125}, {70, 18.1125}, {71, 38.475}, {72, 28.2}, {73, 5.575}, {74, 12.3}, {75, 21.1625}, {76, 27.1125}, {77, 16.35}, {78, 31.6625}, {79, 18.8125}, 