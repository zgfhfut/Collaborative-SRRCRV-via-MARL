node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 9, 10, 11, 12, 13, 15, 18, 21, 22, 24, 26, 27, 28, 30, 31, 33, 34, 36, 37, 40, 41, 45, 46, 47, 48, 49, 51, 56, 60, 62, 65, 67, 68, 70, 72, 73, 74, 75, 78,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 16), Line(0, 34), Line(0, 44), Line(1, 51), Line(1, 65), Line(1, 72), Line(2, 29), Line(2, 51), Line(3, 19), Line(3, 46), Line(3, 73), Line(4, 10), Line(4, 18), Line(4, 67), Line(5, 58), Line(5, 69), Line(6, 30), Line(6, 40), Line(6, 56), Line(7, 39), Line(7, 45), Line(7, 64), Line(8, 31), Line(8, 40), Line(8, 62), Line(8, 68), Line(9, 13), Line(9, 25), Line(9, 51), Line(9, 56), Line(9, 73), Line(10, 23), Line(11, 32), Line(11, 42), Line(11, 59), Line(11, 65), Line(11, 69), Line(12, 49), Line(12, 72), Line(13, 22), Line(14, 21), Line(14, 55), Line(15, 16), Line(15, 31), Line(15, 45), Line(16, 23), Line(16, 55), Line(17, 47), Line(17, 74), Line(18, 21), Line(18, 31), Line(18, 39), Line(18, 76), Line(19, 35), Line(20, 52), Line(20, 62), Line(20, 63), Line(21, 48), Line(21, 75), Line(22, 37), Line(22, 43), Line(24, 25), Line(24, 61), Line(24, 71), Line(25, 37), Line(25, 65), Line(25, 69), Line(26, 52), Line(26, 56), Line(27, 66), Line(27, 79), Line(28, 32), Line(28, 58), Line(29, 54), Line(29, 75), Line(30, 43), Line(30, 57), Line(31, 48), Line(31, 57), Line(32, 69), Line(32, 73), Line(33, 53), Line(33, 63), Line(34, 47), Line(34, 54), Line(35, 64), Line(36, 44), Line(36, 57), Line(37, 68), Line(38, 59), Line(38, 68), Line(38, 73), Line(39, 41), Line(39, 48), Line(41, 67), Line(42, 48), Line(43, 58), Line(43, 63), Line(46, 79), Line(47, 49), Line(48, 71), Line(50, 52), Line(50, 70), Line(52, 69), Line(53, 66), Line(54, 55), Line(55, 74), Line(57, 77), Line(59, 78), Line(60, 73), Line(60, 77), Line(61, 78), Line(64, 71), Line(65, 70), Line(66, 69), Line(67, 76), Line(67, 78), Line(70, 71), Line(71, 76), Line(74, 77),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 16), Line(0, 34), Line(0, 44), Line(1, 65), Line(2, 51), Line(3, 46), Line(3, 73), Line(4, 18), Line(5, 58), Line(5, 69), Line(6, 30), Line(6, 56), Line(7, 45), Line(7, 64), Line(8, 31), Line(8, 62), Line(8, 68), Line(9, 13), Line(9, 25), Line(9, 73), Line(10, 23), Line(11, 42), Line(11, 59), Line(11, 69), Line(13, 22), Line(15, 16), Line(15, 45), Line(16, 23), Line(16, 55), Line(17, 74), Line(18, 21), Line(18, 31), Line(18, 76), Line(19, 35), Line(20, 52), Line(20, 62), Line(20, 63), Line(21, 48), Line(22, 37), Line(24, 25), Line(24, 61), Line(25, 37), Line(25, 65), Line(25, 69), Line(28, 32), Line(30, 43), Line(31, 57), Line(32, 69), Line(33, 53), Line(34, 47), Line(35, 64), Line(36, 44), Line(38, 59), Line(38, 73), Line(39, 41), Line(41, 67), Line(43, 58), Line(43, 63), Line(46, 79), Line(48, 71), Line(50, 52), Line(52, 69), Line(53, 66), Line(55, 74), Line(57, 77), Line(59, 78), Line(60, 73), Line(60, 77), Line(65, 70), Line(70, 71), Line(71, 76), Line(74, 77),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 16, 3.6);
g.add_edge(0, 34, 4.12);
g.add_edge(0, 44, 5.83);
g.add_edge(1, 51, 5);
g.add_edge(1, 65, 4.12);
g.add_edge(1, 72, 3.16);
g.add_edge(2, 29, 9.43);
g.add_edge(2, 51, 4.12);
g.add_edge(3, 19, 6);
g.add_edge(3, 46, 4.47);
g.add_edge(3, 73, 9.05);
g.add_edge(4, 10, 2.23);
g.add_edge(4, 18, 4.12);
g.add_edge(4, 67, 5.09);
g.add_edge(5, 58, 1);
g.add_edge(5, 69, 2.23);
g.add_edge(6, 30, 1.41);
g.add_edge(6, 40, 6.08);
g.add_edge(6, 56, 4.12);
g.add_edge(7, 39, 7.21);
g.add_edge(7, 45, 9.05);
g.add_edge(7, 64, 1);
g.add_edge(8, 31, 8.06);
g.add_edge(8, 40, 6.08);
g.add_edge(8, 62, 6.7);
g.add_edge(8, 68, 2.23);
g.add_edge(9, 13, 6.08);
g.add_edge(9, 25, 2.23);
g.add_edge(9, 51, 2.23);
g.add_edge(9, 56, 7.61);
g.add_edge(9, 73, 8.6);
g.add_edge(10, 23, 2.82);
g.add_edge(11, 32, 3);
g.add_edge(11, 42, 4.12);
g.add_edge(11, 59, 1.41);
g.add_edge(11, 65, 3.6);
g.add_edge(11, 69, 3.16);
g.add_edge(12, 49, 1);
g.add_edge(12, 72, 7);
g.add_edge(13, 22, 7.61);
g.add_edge(14, 21, 8.54);
g.add_edge(14, 55, 9.21);
g.add_edge(15, 16, 2.23);
g.add_edge(15, 31, 2.23);
g.add_edge(15, 45, 8.06);
g.add_edge(16, 23, 1.41);
g.add_edge(16, 55, 2);
g.add_edge(17, 47, 1);
g.add_edge(17, 74, 3.16);
g.add_edge(18, 21, 3.16);
g.add_edge(18, 31, 2);
g.add_edge(18, 39, 5.65);
g.add_edge(18, 76, 1.41);
g.add_edge(19, 35, 8.6);
g.add_edge(20, 52, 4.24);
g.add_edge(20, 62, 4.12);
g.add_edge(20, 63, 6);
g.add_edge(21, 48, 4.47);
g.add_edge(21, 75, 4);
g.add_edge(22, 37, 8.54);
g.add_edge(22, 43, 6);
g.add_edge(24, 25, 3);
g.add_edge(24, 61, 9.84);
g.add_edge(24, 71, 9.89);
g.add_edge(25, 37, 9.43);
g.add_edge(25, 65, 2.82);
g.add_edge(25, 69, 7);
g.add_edge(26, 52, 5.09);
g.add_edge(26, 56, 5);
g.add_edge(27, 66, 6.32);
g.add_edge(27, 79, 5.83);
g.add_edge(28, 32, 5.09);
g.add_edge(28, 58, 2.23);
g.add_edge(29, 54, 9.48);
g.add_edge(29, 75, 4.12);
g.add_edge(30, 43, 2.82);
g.add_edge(30, 57, 8.06);
g.add_edge(31, 48, 7.61);
g.add_edge(31, 57, 8.94);
g.add_edge(32, 69, 6.08);
g.add_edge(32, 73, 7.81);
g.add_edge(33, 53, 6.32);
g.add_edge(33, 63, 1);
g.add_edge(34, 47, 6.4);
g.add_edge(34, 54, 7.81);
g.add_edge(35, 64, 8.06);
g.add_edge(36, 44, 5.09);
g.add_edge(36, 57, 1);
g.add_edge(37, 68, 8.48);
g.add_edge(38, 59, 5);
g.add_edge(38, 68, 6.08);
g.add_edge(38, 73, 7.28);
g.add_edge(39, 41, 2);
g.add_edge(39, 48, 1.41);
g.add_edge(41, 67, 6.4);
g.add_edge(42, 48, 5);
g.add_edge(43, 58, 2.23);
g.add_edge(43, 63, 5.65);
g.add_edge(46, 79, 6.7);
g.add_edge(47, 49, 9.43);
g.add_edge(48, 71, 6.32);
g.add_edge(50, 52, 4.12);
g.add_edge(50, 70, 4);
g.add_edge(52, 69, 8.06);
g.add_edge(53, 66, 2.23);
g.add_edge(54, 55, 5);
g.add_edge(55, 74, 8.24);
g.add_edge(57, 77, 1);
g.add_edge(59, 78, 2.23);
g.add_edge(60, 73, 9.84);
g.add_edge(60, 77, 5.09);
g.add_edge(61, 78, 7.07);
g.add_edge(64, 71, 7.28);
g.add_edge(65, 70, 7.81);
g.add_edge(66, 69, 5.38);
g.add_edge(67, 76, 3);
g.add_edge(67, 78, 9.48);
g.add_edge(70, 71, 7.07);
g.add_edge(71, 76, 6.32);
g.add_edge(74, 77, 6.08);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 4.06);
g.set_importance(8, 0);
g.set_importance(9, 6.96);
g.set_importance(10, 8.91);
g.set_importance(11, 3.65);
g.set_importance(12, 8.61);
g.set_importance(13, 2.99);
g.set_importance(14, 0);
g.set_importance(15, 7.77);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 7.17);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 3.3);
g.set_importance(22, 2.02);
g.set_importance(23, 0);
g.set_importance(24, 7.13);
g.set_importance(25, 0);
g.set_importance(26, 9.57);
g.set_importance(27, 9.04);
g.set_importance(28, 9.89);
g.set_importance(29, 0);
g.set_importance(30, 6.22);
g.set_importance(31, 3.47);
g.set_importance(32, 0);
g.set_importance(33, 9.35);
g.set_importance(34, 3.61);
g.set_importance(35, 0);
g.set_importance(36, 6.6);
g.set_importance(37, 3.35);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 8.92);
g.set_importance(41, 4.71);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 9.23);
g.set_importance(46, 9.02);
g.set_importance(47, 1.35);
g.set_importance(48, 1.03);
g.set_importance(49, 5.14);
g.set_importance(50, 0);
g.set_importance(51, 7.2);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 0);
g.set_importance(56, 6.26);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 0);
g.set_importance(60, 8.74);
g.set_importance(61, 0);
g.set_importance(62, 6.94);
g.set_importance(63, 0);
g.set_importance(64, 0);
g.set_importance(65, 8.35);
g.set_importance(66, 0);
g.set_importance(67, 6.94);
g.set_importance(68, 6.32);
g.set_importance(69, 0);
g.set_importance(70, 2.72);
g.set_importance(71, 0);
g.set_importance(72, 4.54);
g.set_importance(73, 9.51);
g.set_importance(74, 6.75);
g.set_importance(75, 6.92);
g.set_importance(76, 0);
g.set_importance(77, 0);
g.set_importance(78, 1.15);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 16), 4.57);
g.set_repair_time(Line(0, 34), 1.18);
g.set_repair_time(Line(0, 44), 3.29);
g.set_repair_time(Line(1, 65), 4.11);
g.set_repair_time(Line(2, 51), 1.77);
g.set_repair_time(Line(3, 46), 1.23);
g.set_repair_time(Line(3, 73), 4.68);
g.set_repair_time(Line(4, 18), 1.71);
g.set_repair_time(Line(5, 58), 4.64);
g.set_repair_time(Line(5, 69), 1.25);
g.set_repair_time(Line(6, 30), 1.27);
g.set_repair_time(Line(6, 56), 4.33);
g.set_repair_time(Line(7, 45), 4.28);
g.set_repair_time(Line(7, 64), 2.97);
g.set_repair_time(Line(8, 31), 4.07);
g.set_repair_time(Line(8, 62), 1.66);
g.set_repair_time(Line(8, 68), 2.61);
g.set_repair_time(Line(9, 13), 3.55);
g.set_repair_time(Line(9, 25), 1.46);
g.set_repair_time(Line(9, 73), 3.41);
g.set_repair_time(Line(10, 23), 4.57);
g.set_repair_time(Line(11, 42), 2.29);
g.set_repair_time(Line(11, 59), 2.02);
g.set_repair_time(Line(11, 69), 3.63);
g.set_repair_time(Line(13, 22), 2.25);
g.set_repair_time(Line(15, 16), 1.79);
g.set_repair_time(Line(15, 45), 2.2);
g.set_repair_time(Line(16, 23), 3.81);
g.set_repair_time(Line(16, 55), 3.35);
g.set_repair_time(Line(17, 74), 2.13);
g.set_repair_time(Line(18, 21), 4.83);
g.set_repair_time(Line(18, 31), 1.5);
g.set_repair_time(Line(18, 76), 2.58);
g.set_repair_time(Line(19, 35), 1.42);
g.set_repair_time(Line(20, 52), 3.36);
g.set_repair_time(Line(20, 62), 2.72);
g.set_repair_time(Line(20, 63), 1.4);
g.set_repair_time(Line(21, 48), 1.07);
g.set_repair_time(Line(22, 37), 3.63);
g.set_repair_time(Line(24, 25), 2.25);
g.set_repair_time(Line(24, 61), 1.04);
g.set_repair_time(Line(25, 37), 1.72);
g.set_repair_time(Line(25, 65), 3.75);
g.set_repair_time(Line(25, 69), 1.11);
g.set_repair_time(Line(28, 32), 2.51);
g.set_repair_time(Line(30, 43), 4.94);
g.set_repair_time(Line(31, 57), 2.12);
g.set_repair_time(Line(32, 69), 1.64);
g.set_repair_time(Line(33, 53), 4.8);
g.set_repair_time(Line(34, 47), 4.31);
g.set_repair_time(Line(35, 64), 4.39);
g.set_repair_time(Line(36, 44), 2.83);
g.set_repair_time(Line(38, 59), 3);
g.set_repair_time(Line(38, 73), 1.68);
g.set_repair_time(Line(39, 41), 3.45);
g.set_repair_time(Line(41, 67), 3.02);
g.set_repair_time(Line(43, 58), 2.92);
g.set_repair_time(Line(43, 63), 3.28);
g.set_repair_time(Line(46, 79), 1.82);
g.set_repair_time(Line(48, 71), 3.37);
g.set_repair_time(Line(50, 52), 1.7);
g.set_repair_time(Line(52, 69), 4.63);
g.set_repair_time(Line(53, 66), 3.75);
g.set_repair_time(Line(55, 74), 1.99);
g.set_repair_time(Line(57, 77), 3.83);
g.set_repair_time(Line(59, 78), 4.1);
g.set_repair_time(Line(60, 73), 4.89);
g.set_repair_time(Line(60, 77), 4.55);
g.set_repair_time(Line(65, 70), 1.74);
g.set_repair_time(Line(70, 71), 3.6);
g.set_repair_time(Line(71, 76), 1.92);
g.set_repair_time(Line(74, 77), 3.52);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 38.8875}, {2, 36.8875}, {3, 46.125}, {4, 12.575}, {5, 32.5375}, {6, 26.7375}, {7, 28.65}, {8, 20.15}, {9, 41.1375}, {10, 9.7875}, {11, 30.9875}, {12, 26.1875}, {13, 45.5125}, {14, 18.5125}, {15, 7.2875}, {16, 4.5}, {17, 14.4}, {18, 12.575}, {19, 50.725}, {20, 33.675}, {21, 16.525}, {22, 36}, {23, 6.2625}, {24, 34.6}, {25, 38.35}, {26, 38.1375}, {27, 49.5625}, {28, 34.075}, {29, 25.1}, {30, 24.975}, {31, 10.075}, {32, 34.7375}, {33, 36.8125}, {34, 5.15}, {35, 39.975}, {36, 13.65}, {37, 33.5375}, {38, 30.5375}, {39, 19.6375}, {40, 27.75}, {41, 22.1375}, {42, 25.8375}, {43, 28.5}, {44, 7.2875}, {45, 17.3625}, {46, 51.7125}, {47, 13.15}, {48, 19.5875}, {49, 24.9375}, {50, 36.075}, {51, 42.0375}, {52, 38.975}, {53, 44.45}, {54, 13.25}, {55, 7}, {56, 31.8875}, {57, 14.9}, {58, 31.2875}, {59, 32.725}, {60, 22.5125}, {61, 38.775}, {62, 28.525}, {63, 35.5625}, {64, 29.9}, {65, 35.4875}, {66, 41.6625}, {67, 18.0875}, {68, 22.9375}, {69, 34.9375}, {70, 31.075}, {71, 22.2375}, {72, 34.9375}, {73, 34.8125}, {74, 17.3}, {75, 21.525}, {76, 14.3375}, {77, 16.15}, {78, 29.9375}, {79, 56.85}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 38.8875}, {1, 0}, {2, 11.4}, {3, 31.1}, {4, 32.4125}, {5, 16.3875}, {6, 23.7}, {7, 31.825}, {8, 28.05}, {9, 9.0375}, {10, 35.2}, {11, 9.65}, {12, 12.7}, {13, 16.6375}, {14, 37.3125}, {15, 33.35}, {16, 36.1375}, {17, 26.9875}, {18, 29.875}, {19, 38.6}, {20, 28.975}, {21, 26.6375}, {22, 26.15}, {23, 37.9}, {24, 12.425}, {25, 8.675}, {26, 24.8}, {27, 28.225}, {28, 19.7625}, {29, 23.1875}, {30, 23.95}, {31, 30.5625}, {32, 13.4}, {33, 28.7375}, {34, 33.7375}, {35, 42.925}, {36, 35.275}, {37, 20.4625}, {38, 17.6625}, {39, 22.8125}, {40, 31.3}, {41, 25.3125}, {42, 14.8}, {43, 20.425}, {44, 41.6375}, {45, 43.1375}, {46, 36.6875}, {47, 25.7375}, {48, 21.05}, {49, 13.95}, {50, 19.9125}, {51, 6.25}, {52, 23.675}, {53, 23.1125}, {54, 35.0375}, {55, 38.6375}, {56, 18.55}, {57, 34.025}, {58, 17.6375}, {59, 11.4125}, {60, 32.0875}, {61, 23.0375}, {62, 34.125}, {63, 27.4875}, {64, 32.85}, {65, 5.15}, {66, 20.325}, {67, 26.05}, {68, 25.2625}, {69, 13.6}, {70, 14.9125}, {71, 23.75}, {72, 3.95}, {73, 19.7875}, {74, 30.9375}, {75, 28.3375}, {76, 29.8}, {77, 35.275}, {78, 14.2}, {79, 35.5125}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 36.8875}, {1, 11.4}, {2, 0}, {3, 30}, {4, 31.0375}, {5, 22.2625}, {6, 22.6}, {7, 37.1875}, {8, 35.9}, {9, 7.9375}, {10, 33.825}, {11, 18.75}, {12, 24.1}, {13, 15.5375}, {14, 32.6125}, {15, 31.175}, {16, 32.3875}, {17, 38.3875}, {18, 25.8875}, {19, 37.5}, {20, 34.85}, {21, 21.9375}, {22, 25.05}, {23, 34.15}, {24, 14.475}, {25, 10.725}, {26, 23.7}, {27, 34.1}, {28, 26.3}, {29, 11.7875}, {30, 24.3625}, {31, 28.3875}, {32, 22.5}, {33, 34.6125}, {34, 33.4}, {35, 46.0125}, {36, 35.6875}, {37, 22.5125}, {38, 26.7625}, {39, 29.2875}, {40, 30.2}, {41, 31.7875}, {42, 23.9}, {43, 26.3}, {44, 42.05}, {45, 41.25}, {46, 35.5875}, {47, 37.1375}, {48, 27.525}, {49, 25.35}, {50, 29.0125}, {51, 5.15}, {52, 29.55}, {53, 28.9875}, {54, 23.6375}, {55, 29.8875}, {56, 17.45}, {57, 34.4375}, {58, 23.5125}, {59, 20.5125}, {60, 30.9875}, {61, 26.775}, {62, 40}, {63, 33.3625}, {64, 35.9375}, {65, 14.25}, {66, 26.2}, {67, 31.4}, {68, 33.1125}, {69, 19.475}, {70, 24.0125}, {71, 26.8375}, {72, 15.35}, {73, 18.6875}, {74, 40.1875}, {75, 16.9375}, {76, 27.65}, {77, 35.6875}, {78, 23.3}, {79, 41.3875}, 