node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 7, 9, 12, 13, 14, 15, 18, 20, 22, 23, 25, 26, 27, 29, 36, 37, 40, 42, 45, 46, 48, 51, 53, 54, 56, 58, 62, 63, 65, 66, 67, 69, 71, 74, 76, 77, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 11), Line(0, 35), Line(0, 38), Line(0, 59), Line(0, 72), Line(1, 29), Line(1, 53), Line(2, 5), Line(2, 60), Line(2, 61), Line(3, 23), Line(3, 65), Line(4, 7), Line(4, 64), Line(5, 45), Line(5, 52), Line(6, 16), Line(6, 30), Line(6, 46), Line(6, 65), Line(7, 25), Line(7, 47), Line(7, 61), Line(8, 10), Line(8, 31), Line(9, 58), Line(9, 76), Line(10, 33), Line(10, 64), Line(11, 22), Line(12, 28), Line(12, 74), Line(13, 30), Line(13, 45), Line(13, 73), Line(13, 77), Line(14, 37), Line(14, 42), Line(15, 48), Line(15, 49), Line(15, 56), Line(15, 77), Line(16, 44), Line(16, 59), Line(16, 70), Line(17, 18), Line(17, 48), Line(17, 71), Line(18, 24), Line(19, 47), Line(19, 51), Line(19, 64), Line(19, 69), Line(20, 27), Line(21, 52), Line(21, 73), Line(22, 66), Line(23, 44), Line(23, 59), Line(23, 79), Line(24, 38), Line(24, 43), Line(24, 58), Line(25, 61), Line(26, 31), Line(26, 63), Line(27, 28), Line(27, 33), Line(28, 50), Line(29, 34), Line(29, 56), Line(29, 64), Line(30, 56), Line(30, 62), Line(32, 56), Line(32, 66), Line(33, 55), Line(33, 63), Line(34, 41), Line(34, 59), Line(35, 55), Line(35, 66), Line(36, 57), Line(36, 60), Line(37, 70), Line(38, 39), Line(38, 46), Line(38, 59), Line(39, 68), Line(40, 48), Line(40, 67), Line(41, 52), Line(41, 67), Line(41, 69), Line(42, 50), Line(43, 48), Line(43, 76), Line(43, 78), Line(44, 51), Line(44, 58), Line(45, 58), Line(46, 78), Line(47, 55), Line(48, 72), Line(48, 73), Line(48, 74), Line(49, 51), Line(51, 62), Line(51, 77), Line(53, 59), Line(54, 69), Line(54, 71), Line(54, 74), Line(57, 75), Line(58, 74), Line(59, 79), Line(65, 75), Line(68, 76), Line(69, 75), Line(70, 73),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 11), Line(0, 35), Line(0, 59), Line(0, 72), Line(2, 60), Line(2, 61), Line(3, 23), Line(3, 65), Line(4, 7), Line(5, 45), Line(6, 16), Line(6, 30), Line(7, 25), Line(7, 47), Line(7, 61), Line(8, 31), Line(9, 58), Line(9, 76), Line(10, 33), Line(10, 64), Line(11, 22), Line(12, 28), Line(13, 30), Line(13, 73), Line(13, 77), Line(15, 49), Line(15, 77), Line(16, 59), Line(16, 70), Line(17, 18), Line(17, 71), Line(18, 24), Line(19, 47), Line(19, 64), Line(21, 73), Line(23, 79), Line(24, 38), Line(24, 58), Line(25, 61), Line(26, 31), Line(26, 63), Line(27, 28), Line(27, 33), Line(29, 34), Line(29, 56), Line(30, 56), Line(30, 62), Line(32, 56), Line(32, 66), Line(34, 41), Line(34, 59), Line(35, 66), Line(36, 57), Line(36, 60), Line(37, 70), Line(38, 59), Line(40, 48), Line(41, 67), Line(41, 69), Line(43, 48), Line(43, 76), Line(43, 78), Line(44, 51), Line(44, 58), Line(46, 78), Line(48, 73), Line(51, 62), Line(53, 59), Line(54, 74), Line(57, 75), Line(58, 74), Line(70, 73),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 11, 3.6);
g.add_edge(0, 35, 5);
g.add_edge(0, 38, 3);
g.add_edge(0, 59, 6);
g.add_edge(0, 72, 6.4);
g.add_edge(1, 29, 2);
g.add_edge(1, 53, 1);
g.add_edge(2, 5, 6.7);
g.add_edge(2, 60, 6.4);
g.add_edge(2, 61, 4.12);
g.add_edge(3, 23, 7.28);
g.add_edge(3, 65, 7.21);
g.add_edge(4, 7, 2);
g.add_edge(4, 64, 3.6);
g.add_edge(5, 45, 7.28);
g.add_edge(5, 52, 5.83);
g.add_edge(6, 16, 5.09);
g.add_edge(6, 30, 3.16);
g.add_edge(6, 46, 4.12);
g.add_edge(6, 65, 6);
g.add_edge(7, 25, 4.24);
g.add_edge(7, 47, 4.47);
g.add_edge(7, 61, 8.06);
g.add_edge(8, 10, 6.32);
g.add_edge(8, 31, 7.28);
g.add_edge(9, 58, 4.47);
g.add_edge(9, 76, 4.12);
g.add_edge(10, 33, 8.6);
g.add_edge(10, 64, 2.82);
g.add_edge(11, 22, 4.47);
g.add_edge(12, 28, 3);
g.add_edge(12, 74, 5.09);
g.add_edge(13, 30, 1.41);
g.add_edge(13, 45, 8.24);
g.add_edge(13, 73, 8.94);
g.add_edge(13, 77, 3.16);
g.add_edge(14, 37, 5);
g.add_edge(14, 42, 9.89);
g.add_edge(15, 48, 7);
g.add_edge(15, 49, 2.82);
g.add_edge(15, 56, 9.21);
g.add_edge(15, 77, 3.6);
g.add_edge(16, 44, 6);
g.add_edge(16, 59, 8.24);
g.add_edge(16, 70, 8.94);
g.add_edge(17, 18, 3);
g.add_edge(17, 48, 2);
g.add_edge(17, 71, 6.7);
g.add_edge(18, 24, 3.6);
g.add_edge(19, 47, 6.32);
g.add_edge(19, 51, 4.47);
g.add_edge(19, 64, 5);
g.add_edge(19, 69, 1);
g.add_edge(20, 27, 3);
g.add_edge(21, 52, 5);
g.add_edge(21, 73, 1.41);
g.add_edge(22, 66, 2.82);
g.add_edge(23, 44, 1);
g.add_edge(23, 59, 10.63);
g.add_edge(23, 79, 10.29);
g.add_edge(24, 38, 4.12);
g.add_edge(24, 43, 5.38);
g.add_edge(24, 58, 5);
g.add_edge(25, 61, 5.38);
g.add_edge(26, 31, 6.4);
g.add_edge(26, 63, 2.23);
g.add_edge(27, 28, 2.82);
g.add_edge(27, 33, 5);
g.add_edge(28, 50, 4.12);
g.add_edge(29, 34, 2);
g.add_edge(29, 56, 8.06);
g.add_edge(29, 64, 3.16);
g.add_edge(30, 56, 4);
g.add_edge(30, 62, 5.09);
g.add_edge(32, 56, 5);
g.add_edge(32, 66, 1.41);
g.add_edge(33, 55, 6.08);
g.add_edge(33, 63, 7.81);
g.add_edge(34, 41, 8.6);
g.add_edge(34, 59, 1);
g.add_edge(35, 55, 4.12);
g.add_edge(35, 66, 2);
g.add_edge(36, 57, 2.82);
g.add_edge(36, 60, 5.38);
g.add_edge(37, 70, 8);
g.add_edge(38, 39, 7.61);
g.add_edge(38, 46, 6);
g.add_edge(38, 59, 3);
g.add_edge(39, 68, 4.12);
g.add_edge(40, 48, 5.83);
g.add_edge(40, 67, 6.7);
g.add_edge(41, 52, 4);
g.add_edge(41, 67, 7.07);
g.add_edge(41, 69, 5.65);
g.add_edge(42, 50, 5.09);
g.add_edge(43, 48, 2.23);
g.add_edge(43, 76, 8.06);
g.add_edge(43, 78, 2);
g.add_edge(44, 51, 9.48);
g.add_edge(44, 58, 6.4);
g.add_edge(45, 58, 5.38);
g.add_edge(46, 78, 7.07);
g.add_edge(47, 55, 5.83);
g.add_edge(48, 72, 6.08);
g.add_edge(48, 73, 8.24);
g.add_edge(48, 74, 8.06);
g.add_edge(49, 51, 1);
g.add_edge(51, 62, 4.47);
g.add_edge(51, 77, 5.09);
g.add_edge(53, 59, 3.16);
g.add_edge(54, 69, 4.47);
g.add_edge(54, 71, 3.16);
g.add_edge(54, 74, 2);
g.add_edge(57, 75, 5.09);
g.add_edge(58, 74, 3.16);
g.add_edge(59, 79, 2.23);
g.add_edge(65, 75, 8.24);
g.add_edge(68, 76, 7.07);
g.add_edge(69, 75, 9.84);
g.add_edge(70, 73, 1.41);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 2.5);
g.set_importance(6, 5.81);
g.set_importance(7, 9.36);
g.set_importance(8, 0);
g.set_importance(9, 4.46);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 5.55);
g.set_importance(13, 8.57);
g.set_importance(14, 2.78);
g.set_importance(15, 3.1);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 1.89);
g.set_importance(19, 0);
g.set_importance(20, 1.04);
g.set_importance(21, 0);
g.set_importance(22, 2.53);
g.set_importance(23, 3.74);
g.set_importance(24, 0);
g.set_importance(25, 3.11);
g.set_importance(26, 5.42);
g.set_importance(27, 3.15);
g.set_importance(28, 0);
g.set_importance(29, 9.28);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 9.48);
g.set_importance(37, 7.71);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 8.61);
g.set_importance(41, 0);
g.set_importance(42, 7.78);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 9.18);
g.set_importance(46, 4.37);
g.set_importance(47, 0);
g.set_importance(48, 6.85);
g.set_importance(49, 0);
g.set_importance(50, 0);
g.set_importance(51, 8.31);
g.set_importance(52, 0);
g.set_importance(53, 8.66);
g.set_importance(54, 3.68);
g.set_importance(55, 0);
g.set_importance(56, 8.08);
g.set_importance(57, 0);
g.set_importance(58, 9.12);
g.set_importance(59, 0);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 1.75);
g.set_importance(63, 8.67);
g.set_importance(64, 0);
g.set_importance(65, 9.45);
g.set_importance(66, 9.56);
g.set_importance(67, 6.6);
g.set_importance(68, 0);
g.set_importance(69, 1.97);
g.set_importance(70, 0);
g.set_importance(71, 3.9);
g.set_importance(72, 0);
g.set_importance(73, 0);
g.set_importance(74, 8.62);
g.set_importance(75, 0);
g.set_importance(76, 3.37);
g.set_importance(77, 6.6);
g.set_importance(78, 4.84);
g.set_importance(79, 9.65);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 11), 2.58);
g.set_repair_time(Line(0, 35), 2.14);
g.set_repair_time(Line(0, 59), 1.76);
g.set_repair_time(Line(0, 72), 2.46);
g.set_repair_time(Line(2, 60), 2.93);
g.set_repair_time(Line(2, 61), 1.04);
g.set_repair_time(Line(3, 23), 1.73);
g.set_repair_time(Line(3, 65), 2.31);
g.set_repair_time(Line(4, 7), 2.62);
g.set_repair_time(Line(5, 45), 3.31);
g.set_repair_time(Line(6, 16), 3.01);
g.set_repair_time(Line(6, 30), 4.4);
g.set_repair_time(Line(7, 25), 1.3);
g.set_repair_time(Line(7, 47), 4.46);
g.set_repair_time(Line(7, 61), 4.33);
g.set_repair_time(Line(8, 31), 2.39);
g.set_repair_time(Line(9, 58), 1.88);
g.set_repair_time(Line(9, 76), 2.31);
g.set_repair_time(Line(10, 33), 2.41);
g.set_repair_time(Line(10, 64), 1.68);
g.set_repair_time(Line(11, 22), 2.3);
g.set_repair_time(Line(12, 28), 4.43);
g.set_repair_time(Line(13, 30), 4.48);
g.set_repair_time(Line(13, 73), 2.58);
g.set_repair_time(Line(13, 77), 4.9);
g.set_repair_time(Line(15, 49), 1.94);
g.set_repair_time(Line(15, 77), 1.46);
g.set_repair_time(Line(16, 59), 3.35);
g.set_repair_time(Line(16, 70), 3.87);
g.set_repair_time(Line(17, 18), 2.52);
g.set_repair_time(Line(17, 71), 4.14);
g.set_repair_time(Line(18, 24), 2.5);
g.set_repair_time(Line(19, 47), 1.42);
g.set_repair_time(Line(19, 64), 4.83);
g.set_repair_time(Line(21, 73), 1.66);
g.set_repair_time(Line(23, 79), 2.31);
g.set_repair_time(Line(24, 38), 1.87);
g.set_repair_time(Line(24, 58), 3.21);
g.set_repair_time(Line(25, 61), 4.89);
g.set_repair_time(Line(26, 31), 3.31);
g.set_repair_time(Line(26, 63), 3.05);
g.set_repair_time(Line(27, 28), 3.96);
g.set_repair_time(Line(27, 33), 4.41);
g.set_repair_time(Line(29, 34), 3.72);
g.set_repair_time(Line(29, 56), 4.44);
g.set_repair_time(Line(30, 56), 3.74);
g.set_repair_time(Line(30, 62), 2.23);
g.set_repair_time(Line(32, 56), 2.99);
g.set_repair_time(Line(32, 66), 1.09);
g.set_repair_time(Line(34, 41), 1.19);
g.set_repair_time(Line(34, 59), 2.42);
g.set_repair_time(Line(35, 66), 2.35);
g.set_repair_time(Line(36, 57), 2.26);
g.set_repair_time(Line(36, 60), 3.13);
g.set_repair_time(Line(37, 70), 1.75);
g.set_repair_time(Line(38, 59), 2.34);
g.set_repair_time(Line(40, 48), 3.81);
g.set_repair_time(Line(41, 67), 4.6);
g.set_repair_time(Line(41, 69), 2.6);
g.set_repair_time(Line(43, 48), 4.48);
g.set_repair_time(Line(43, 76), 4.33);
g.set_repair_time(Line(43, 78), 2.45);
g.set_repair_time(Line(44, 51), 4.99);
g.set_repair_time(Line(44, 58), 3.74);
g.set_repair_time(Line(46, 78), 4.83);
g.set_repair_time(Line(48, 73), 2.04);
g.set_repair_time(Line(51, 62), 1.24);
g.set_repair_time(Line(53, 59), 2.89);
g.set_repair_time(Line(54, 74), 2.93);
g.set_repair_time(Line(57, 75), 2.38);
g.set_repair_time(Line(58, 74), 4.83);
g.set_repair_time(Line(70, 73), 2.3);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 12.7}, {2, 37.425}, {3, 29.8875}, {4, 19.7}, {5, 30.975}, {6, 16.4}, {7, 22.2}, {8, 26.625}, {9, 20.7375}, {10, 18.725}, {11, 4.5}, {12, 25.4625}, {13, 22.1125}, {14, 43.9125}, {15, 24.35}, {16, 17.8}, {17, 17.15}, {18, 13.4}, {19, 21.45}, {20, 29}, {21, 27.6625}, {22, 10.0875}, {23, 20.7875}, {24, 8.9}, {25, 27.5}, {26, 31.55}, {27, 25.25}, {28, 28.775}, {29, 11.25}, {30, 20.35}, {31, 35.725}, {32, 10.5125}, {33, 19}, {34, 8.75}, {35, 6.25}, {36, 44.0875}, {37, 37.6625}, {38, 3.75}, {39, 13.2625}, {40, 22.8875}, {41, 19.5}, {42, 40.2875}, {43, 15.625}, {44, 22.0375}, {45, 21.875}, {46, 11.25}, {47, 18.6875}, {48, 15.6}, {49, 27.875}, {50, 33.925}, {51, 27.0375}, {52, 24.5}, {53, 11.45}, {54, 21.6}, {55, 11.4}, {56, 16.7625}, {57, 40.5625}, {58, 15.15}, {59, 7.5}, {60, 45.425}, {61, 32.275}, {62, 26.7125}, {63, 28.7625}, {64, 15.2}, {65, 23.9}, {66, 8.75}, {67, 28.3375}, {68, 18.4125}, {69, 22.7}, {70, 27.6625}, {71, 25.525}, {72, 8}, {73, 25.9}, {74, 19.1}, {75, 34.2}, {76, 25.7}, {77, 26.0625}, {78, 18.125}, {79, 10.2875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 12.7}, {1, 0}, {2, 28.675}, {3, 27.5875}, {4, 10.95}, {5, 28.0375}, {6, 21.525}, {7, 13.45}, {8, 17.875}, {9, 25.9375}, {10, 9.975}, {11, 17.2}, {12, 28.4}, {13, 19.3375}, {14, 42.925}, {15, 23.0625}, {16, 15.5}, {17, 22.35}, {18, 18.6}, {19, 12.7}, {20, 30.725}, {21, 27}, {22, 22.7875}, {23, 18.4875}, {24, 14.1}, {25, 18.75}, {26, 33.275}, {27, 26.975}, {28, 30.5}, {29, 2.5}, {30, 17.575}, {31, 26.975}, {32, 18.825}, {33, 20.725}, {34, 5}, {35, 18.95}, {36, 36.1375}, {37, 36.675}, {38, 8.95}, {39, 18.4625}, {40, 30.9}, {41, 15.75}, {42, 42.0125}, {43, 20.825}, {44, 19.7375}, {45, 27.075}, {46, 16.45}, {47, 19.0375}, {48, 23.6125}, {49, 19.5375}, {50, 35.65}, {51, 18.2875}, {52, 20.75}, {53, 1.25}, {54, 19.5375}, {55, 24.1}, {56, 12.575}, {57, 32.6125}, {58, 20.35}, {59, 5.2}, {60, 36.675}, {61, 23.525}, {62, 23.875}, {63, 30.4875}, {64, 6.45}, {65, 29.025}, {66, 20.5875}, {67, 24.5875}, {68, 23.6125}, {69, 13.95}, {70, 26.675}, {71, 23.4875}, {72, 20.7}, {73, 28.4375}, {74, 22.0375}, {75, 26.25}, {76, 30.9}, {77, 23.2875}, {78, 23.325}, {79, 7.9875}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 37.425}, {1, 28.675}, {2, 0}, {3, 42.55}, {4, 17.725}, {5, 8.375}, {6, 33.4875}, {7, 15.225}, {8, 33.65}, {9, 29.7875}, {10, 25.75}, {11, 41.925}, {12, 34.5125}, {13, 27.775}, {14, 41.6875}, {15, 36.225}, {16, 36.6125}, {17, 36.475}, {18, 34.95}, {19, 28.475}, {20, 45.5375}, {21, 21.9125}, {22, 39.275}, {23, 33.45}, {24, 30.45}, {25, 11.875}, {26, 48.25}, {27, 41.7875}, {28, 38.2625}, {29, 26.175}, {30, 29.5375}, {31, 42.75}, {32, 37.5125}, {33, 35.7}, {34, 28.675}, {35, 33.25}, {36, 14.725}, {37, 35.4375}, {38, 33.675}, {39, 43.1875}, {40, 37.875}, {41, 20.6625}, {42, 49.775}, {43, 36.7625}, {44, 32.2}, {45, 17.475}, {46, 38.6375}, {47, 20.8125}, {48, 33.975}, {49, 35.3125}, {50, 43.4125}, {51, 34.0625}, {52, 15.6625}, {53, 29.925}, {54, 30.65}, {55, 28.1}, {56, 34.5375}, {57, 18.25}, {58, 24.2}, {59, 29.925}, {60, 8}, {61, 5.15}, {62, 35.9}, {63, 45.4625}, {64, 22.225}, {65, 34.9125}, {66, 35.75}, {67, 29.5}, {68, 43.775}, {69, 27.725}, {70, 25.4375}, {71, 34.6}, {72, 41.575}, {73, 23.675}, {74, 28.15}, {75, 24.6125}, {76, 34.9375}, {77, 31.725}, {78, 39.2625}, {79, 32.7125}, 