node_num : 80
demand_node_num : 40
edge_num : 120
damaged_edge_num : 72
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 7, 8, 9, 11, 14, 16, 18, 21, 22, 25, 28, 29, 34, 35, 37, 38, 41, 42, 44, 46, 47, 48, 49, 50, 51, 54, 57, 59, 60, 62, 65, 70, 71, 72, 74, 75, 76, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 19), Line(0, 56), Line(0, 63), Line(1, 23), Line(1, 47), Line(1, 55), Line(2, 66), Line(2, 67), Line(3, 35), Line(3, 46), Line(3, 79), Line(4, 17), Line(4, 71), Line(4, 74), Line(4, 78), Line(5, 30), Line(5, 52), Line(6, 49), Line(6, 69), Line(7, 11), Line(7, 28), Line(7, 51), Line(8, 31), Line(8, 51), Line(8, 65), Line(8, 77), Line(9, 21), Line(9, 45), Line(9, 67), Line(10, 11), Line(10, 29), Line(10, 32), Line(10, 57), Line(10, 76), Line(11, 48), Line(11, 73), Line(12, 15), Line(12, 56), Line(12, 75), Line(13, 29), Line(13, 39), Line(13, 52), Line(14, 38), Line(14, 52), Line(14, 57), Line(15, 71), Line(16, 36), Line(16, 42), Line(16, 65), Line(16, 76), Line(17, 21), Line(17, 49), Line(17, 51), Line(18, 33), Line(18, 53), Line(18, 69), Line(18, 73), Line(19, 56), Line(19, 72), Line(20, 37), Line(20, 44), Line(20, 46), Line(20, 71), Line(21, 60), Line(22, 26), Line(22, 75), Line(23, 33), Line(23, 75), Line(24, 37), Line(24, 54), Line(24, 78), Line(25, 27), Line(25, 69), Line(25, 70), Line(26, 46), Line(27, 32), Line(27, 41), Line(28, 68), Line(29, 48), Line(29, 75), Line(29, 78), Line(30, 36), Line(30, 40), Line(31, 67), Line(32, 42), Line(34, 64), Line(34, 79), Line(35, 74), Line(36, 50), Line(36, 76), Line(37, 55), Line(38, 68), Line(39, 43), Line(39, 54), Line(39, 60), Line(40, 60), Line(40, 76), Line(41, 61), Line(42, 43), Line(43, 74), Line(44, 50), Line(44, 58), Line(45, 57), Line(45, 69), Line(45, 70), Line(46, 55), Line(47, 53), Line(47, 67), Line(48, 62), Line(49, 70), Line(51, 62), Line(53, 72), Line(54, 59), Line(55, 65), Line(56, 66), Line(58, 70), Line(59, 64), Line(61, 66), Line(61, 77), Line(63, 73),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 56), Line(1, 23), Line(1, 47), Line(1, 55), Line(2, 66), Line(2, 67), Line(3, 46), Line(3, 79), Line(4, 17), Line(4, 78), Line(5, 30), Line(6, 49), Line(6, 69), Line(7, 28), Line(9, 21), Line(10, 29), Line(10, 32), Line(10, 57), Line(11, 48), Line(11, 73), Line(12, 56), Line(12, 75), Line(13, 29), Line(13, 39), Line(14, 38), Line(14, 52), Line(14, 57), Line(15, 71), Line(16, 42), Line(17, 21), Line(17, 49), Line(18, 33), Line(18, 53), Line(18, 69), Line(19, 56), Line(20, 37), Line(20, 44), Line(20, 46), Line(20, 71), Line(21, 60), Line(22, 26), Line(23, 33), Line(23, 75), Line(24, 54), Line(25, 69), Line(26, 46), Line(27, 32), Line(27, 41), Line(29, 48), Line(29, 75), Line(29, 78), Line(30, 40), Line(31, 67), Line(32, 42), Line(34, 64), Line(34, 79), Line(39, 43), Line(40, 76), Line(41, 61), Line(43, 74), Line(45, 57), Line(45, 70), Line(47, 53), Line(47, 67), Line(48, 62), Line(49, 70), Line(51, 62), Line(53, 72), Line(54, 59), Line(56, 66), Line(58, 70), Line(63, 73),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 19, 5.38);
g.add_edge(0, 56, 1.41);
g.add_edge(0, 63, 6);
g.add_edge(1, 23, 1.41);
g.add_edge(1, 47, 7.81);
g.add_edge(1, 55, 9.43);
g.add_edge(2, 66, 3.6);
g.add_edge(2, 67, 1);
g.add_edge(3, 35, 4.24);
g.add_edge(3, 46, 3.16);
g.add_edge(3, 79, 7.21);
g.add_edge(4, 17, 4.12);
g.add_edge(4, 71, 6);
g.add_edge(4, 74, 4.47);
g.add_edge(4, 78, 3.6);
g.add_edge(5, 30, 6.4);
g.add_edge(5, 52, 4.12);
g.add_edge(6, 49, 7.07);
g.add_edge(6, 69, 5.38);
g.add_edge(7, 11, 8);
g.add_edge(7, 28, 8.6);
g.add_edge(7, 51, 4.24);
g.add_edge(8, 31, 3.6);
g.add_edge(8, 51, 5);
g.add_edge(8, 65, 1.41);
g.add_edge(8, 77, 3.16);
g.add_edge(9, 21, 3.16);
g.add_edge(9, 45, 3.16);
g.add_edge(9, 67, 4.12);
g.add_edge(10, 11, 9.84);
g.add_edge(10, 29, 10.81);
g.add_edge(10, 32, 6);
g.add_edge(10, 57, 8.06);
g.add_edge(10, 76, 8.24);
g.add_edge(11, 48, 1.41);
g.add_edge(11, 73, 7.21);
g.add_edge(12, 15, 3);
g.add_edge(12, 56, 5);
g.add_edge(12, 75, 2.23);
g.add_edge(13, 29, 7.81);
g.add_edge(13, 39, 6.08);
g.add_edge(13, 52, 6.4);
g.add_edge(14, 38, 7.81);
g.add_edge(14, 52, 5.09);
g.add_edge(14, 57, 5.09);
g.add_edge(15, 71, 3.6);
g.add_edge(16, 36, 2.23);
g.add_edge(16, 42, 6.08);
g.add_edge(16, 65, 2.23);
g.add_edge(16, 76, 6.7);
g.add_edge(17, 21, 4.12);
g.add_edge(17, 49, 4);
g.add_edge(17, 51, 2.23);
g.add_edge(18, 33, 2.23);
g.add_edge(18, 53, 4.12);
g.add_edge(18, 69, 6);
g.add_edge(18, 73, 8.94);
g.add_edge(19, 56, 6.08);
g.add_edge(19, 72, 2);
g.add_edge(20, 37, 9.05);
g.add_edge(20, 44, 7.07);
g.add_edge(20, 46, 6.4);
g.add_edge(20, 71, 3);
g.add_edge(21, 60, 6.7);
g.add_edge(22, 26, 1.41);
g.add_edge(22, 75, 5.09);
g.add_edge(23, 33, 8);
g.add_edge(23, 75, 2.82);
g.add_edge(24, 37, 1.41);
g.add_edge(24, 54, 5);
g.add_edge(24, 78, 8.94);
g.add_edge(25, 27, 7.81);
g.add_edge(25, 69, 6.08);
g.add_edge(25, 70, 4.47);
g.add_edge(26, 46, 6.08);
g.add_edge(27, 32, 7.28);
g.add_edge(27, 41, 5.09);
g.add_edge(28, 68, 10);
g.add_edge(29, 48, 1.41);
g.add_edge(29, 75, 6.08);
g.add_edge(29, 78, 9.21);
g.add_edge(30, 36, 4.12);
g.add_edge(30, 40, 3.16);
g.add_edge(31, 67, 2.23);
g.add_edge(32, 42, 8.24);
g.add_edge(34, 64, 2.23);
g.add_edge(34, 79, 8);
g.add_edge(35, 74, 2.82);
g.add_edge(36, 50, 3.16);
g.add_edge(36, 76, 5.09);
g.add_edge(37, 55, 7.28);
g.add_edge(38, 68, 9.43);
g.add_edge(39, 43, 6.4);
g.add_edge(39, 54, 5.83);
g.add_edge(39, 60, 9.43);
g.add_edge(40, 60, 5);
g.add_edge(40, 76, 3);
g.add_edge(41, 61, 6.7);
g.add_edge(42, 43, 3.16);
g.add_edge(43, 74, 1);
g.add_edge(44, 50, 4.47);
g.add_edge(44, 58, 2.82);
g.add_edge(45, 57, 7.07);
g.add_edge(45, 69, 9.05);
g.add_edge(45, 70, 7.28);
g.add_edge(46, 55, 5.83);
g.add_edge(47, 53, 7.28);
g.add_edge(47, 67, 2.23);
g.add_edge(48, 62, 7.21);
g.add_edge(49, 70, 7.07);
g.add_edge(51, 62, 2);
g.add_edge(53, 72, 3);
g.add_edge(54, 59, 6.4);
g.add_edge(55, 65, 3.6);
g.add_edge(56, 66, 9.05);
g.add_edge(58, 70, 4);
g.add_edge(59, 64, 9.89);
g.add_edge(61, 66, 9.05);
g.add_edge(61, 77, 8);
g.add_edge(63, 73, 5);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 4.82);
g.set_importance(6, 0);
g.set_importance(7, 6.28);
g.set_importance(8, 7.6);
g.set_importance(9, 1.89);
g.set_importance(10, 0);
g.set_importance(11, 2.48);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 6.39);
g.set_importance(15, 0);
g.set_importance(16, 5.97);
g.set_importance(17, 0);
g.set_importance(18, 7.54);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 4.14);
g.set_importance(22, 7.42);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 8.19);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 6.12);
g.set_importance(29, 4.1);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 5.11);
g.set_importance(35, 1.22);
g.set_importance(36, 0);
g.set_importance(37, 3.88);
g.set_importance(38, 3.97);
g.set_importance(39, 0);
g.set_importance(40, 0);
g.set_importance(41, 8.64);
g.set_importance(42, 5.51);
g.set_importance(43, 0);
g.set_importance(44, 3.63);
g.set_importance(45, 0);
g.set_importance(46, 3.03);
g.set_importance(47, 7.93);
g.set_importance(48, 3.24);
g.set_importance(49, 5.12);
g.set_importance(50, 3.24);
g.set_importance(51, 3.07);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 2.06);
g.set_importance(55, 0);
g.set_importance(56, 0);
g.set_importance(57, 7.01);
g.set_importance(58, 0);
g.set_importance(59, 7.04);
g.set_importance(60, 8.16);
g.set_importance(61, 0);
g.set_importance(62, 6.06);
g.set_importance(63, 0);
g.set_importance(64, 0);
g.set_importance(65, 2.89);
g.set_importance(66, 0);
g.set_importance(67, 0);
g.set_importance(68, 0);
g.set_importance(69, 0);
g.set_importance(70, 8.28);
g.set_importance(71, 7.75);
g.set_importance(72, 1.5);
g.set_importance(73, 0);
g.set_importance(74, 6.7);
g.set_importance(75, 5.27);
g.set_importance(76, 1.53);
g.set_importance(77, 0);
g.set_importance(78, 1.54);
g.set_importance(79, 1.5);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 56), 3.96);
g.set_repair_time(Line(1, 23), 1.57);
g.set_repair_time(Line(1, 47), 1.53);
g.set_repair_time(Line(1, 55), 2.65);
g.set_repair_time(Line(2, 66), 4.16);
g.set_repair_time(Line(2, 67), 2.09);
g.set_repair_time(Line(3, 46), 2.8);
g.set_repair_time(Line(3, 79), 4.73);
g.set_repair_time(Line(4, 17), 4.8);
g.set_repair_time(Line(4, 78), 3.76);
g.set_repair_time(Line(5, 30), 1.06);
g.set_repair_time(Line(6, 49), 4.05);
g.set_repair_time(Line(6, 69), 1.94);
g.set_repair_time(Line(7, 28), 2.42);
g.set_repair_time(Line(9, 21), 1.15);
g.set_repair_time(Line(10, 29), 4.24);
g.set_repair_time(Line(10, 32), 2.12);
g.set_repair_time(Line(10, 57), 1.27);
g.set_repair_time(Line(11, 48), 2.78);
g.set_repair_time(Line(11, 73), 1.03);
g.set_repair_time(Line(12, 56), 4.36);
g.set_repair_time(Line(12, 75), 1.25);
g.set_repair_time(Line(13, 29), 3.78);
g.set_repair_time(Line(13, 39), 2.24);
g.set_repair_time(Line(14, 38), 3.47);
g.set_repair_time(Line(14, 52), 2.76);
g.set_repair_time(Line(14, 57), 3.89);
g.set_repair_time(Line(15, 71), 1.79);
g.set_repair_time(Line(16, 42), 4.3);
g.set_repair_time(Line(17, 21), 2.12);
g.set_repair_time(Line(17, 49), 4.8);
g.set_repair_time(Line(18, 33), 3.05);
g.set_repair_time(Line(18, 53), 2.04);
g.set_repair_time(Line(18, 69), 1.37);
g.set_repair_time(Line(19, 56), 2.55);
g.set_repair_time(Line(20, 37), 3.08);
g.set_repair_time(Line(20, 44), 1.47);
g.set_repair_time(Line(20, 46), 3.13);
g.set_repair_time(Line(20, 71), 2.66);
g.set_repair_time(Line(21, 60), 2.74);
g.set_repair_time(Line(22, 26), 3.92);
g.set_repair_time(Line(23, 33), 3.73);
g.set_repair_time(Line(23, 75), 1.36);
g.set_repair_time(Line(24, 54), 2.97);
g.set_repair_time(Line(25, 69), 2.34);
g.set_repair_time(Line(26, 46), 1.7);
g.set_repair_time(Line(27, 32), 1.02);
g.set_repair_time(Line(27, 41), 1.23);
g.set_repair_time(Line(29, 48), 2.73);
g.set_repair_time(Line(29, 75), 3.13);
g.set_repair_time(Line(29, 78), 1.84);
g.set_repair_time(Line(30, 40), 4.91);
g.set_repair_time(Line(31, 67), 1.6);
g.set_repair_time(Line(32, 42), 2.4);
g.set_repair_time(Line(34, 64), 4.55);
g.set_repair_time(Line(34, 79), 4.24);
g.set_repair_time(Line(39, 43), 2.67);
g.set_repair_time(Line(40, 76), 3.55);
g.set_repair_time(Line(41, 61), 2.54);
g.set_repair_time(Line(43, 74), 2.87);
g.set_repair_time(Line(45, 57), 2.24);
g.set_repair_time(Line(45, 70), 1.29);
g.set_repair_time(Line(47, 53), 3.04);
g.set_repair_time(Line(47, 67), 3.96);
g.set_repair_time(Line(48, 62), 3.52);
g.set_repair_time(Line(49, 70), 2.25);
g.set_repair_time(Line(51, 62), 4.36);
g.set_repair_time(Line(53, 72), 2.9);
g.set_repair_time(Line(54, 59), 4.22);
g.set_repair_time(Line(56, 66), 2.93);
g.set_repair_time(Line(58, 70), 1.8);
g.set_repair_time(Line(63, 73), 2.37);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 16.0875}, {2, 17.575}, {3, 30.475}, {4, 23.7625}, {5, 41.3125}, {6, 32.35}, {7, 31.925}, {8, 26.1125}, {9, 23.975}, {10, 31.9125}, {11, 21.925}, {12, 8.0125}, {13, 28.1625}, {14, 42.525}, {15, 11.7625}, {16, 30.6625}, {17, 28.9125}, {18, 18.125}, {19, 6.725}, {20, 20.0125}, {21, 27.925}, {22, 17.1625}, {23, 14.325}, {24, 33.0875}, {25, 33.225}, {26, 18.925}, {27, 39.125}, {28, 42.675}, {29, 18.4}, {30, 38.6}, {31, 21.6125}, {32, 39.4125}, {33, 20.9125}, {34, 49.4875}, {35, 32.875}, {36, 33.45}, {37, 31.325}, {38, 52.2875}, {39, 35.7625}, {40, 42.55}, {41, 32.7625}, {42, 34.55}, {43, 30.6}, {44, 28.85}, {45, 27.925}, {46, 26.525}, {47, 21.6125}, {48, 20.1625}, {49, 33.9125}, {50, 34.4375}, {51, 31.675}, {52, 36.1625}, {53, 12.975}, {54, 39.3375}, {55, 27.875}, {56, 1.7625}, {57, 36.7625}, {58, 32.375}, {59, 47.3375}, {60, 36.3}, {61, 24.3875}, {62, 29.175}, {63, 7.5}, {64, 52.275}, {65, 27.875}, {66, 13.075}, {67, 18.825}, {68, 55.175}, {69, 25.625}, {70, 37.025}, {71, 16.2625}, {72, 9.225}, {73, 13.75}, {74, 29.35}, {75, 10.8}, {76, 39.0375}, {77, 30.0625}, {78, 28.2625}, {79, 39.4875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 16.0875}, {1, 0}, {2, 13.8}, {3, 23.025}, {4, 23.825}, {5, 35.0125}, {6, 28.775}, {7, 26.4125}, {8, 18.05}, {9, 17.7}, {10, 26.4}, {11, 16.4125}, {12, 8.075}, {13, 22.65}, {14, 36.85}, {15, 11.825}, {16, 19.075}, {17, 26.8}, {18, 14.55}, {19, 21.925}, {20, 20.075}, {21, 21.65}, {22, 11.65}, {23, 1.7625}, {24, 22.65}, {25, 29.65}, {26, 13.4125}, {27, 39.4125}, {28, 37.1625}, {29, 12.8875}, {30, 27.0125}, {31, 15.3375}, {32, 33.9}, {33, 11.7625}, {34, 42.0375}, {35, 28.325}, {36, 21.8625}, {37, 20.8875}, {38, 46.6125}, {39, 30.25}, {40, 30.9625}, {41, 37.9875}, {42, 26.675}, {43, 30.625}, {44, 28.9125}, {45, 21.65}, {46, 19.075}, {47, 9.7625}, {48, 14.65}, {49, 31.8}, {50, 25.8125}, {51, 24.3}, {52, 30.65}, {53, 18.8625}, {54, 28.9}, {55, 11.7875}, {56, 14.325}, {57, 30.4875}, {58, 32.4375}, {59, 36.9}, {60, 30.025}, {61, 29.6125}, {62, 23.6625}, {63, 23.5875}, {64, 44.825}, {65, 16.2875}, {66, 18.3}, {67, 12.55}, {68, 49.6625}, {69, 22.05}, {70, 30.75}, {71, 16.325}, {72, 22.6125}, {73, 25.425}, {74, 29.4125}, {75, 5.2875}, {76, 27.45}, {77, 22}, {78, 24.4}, {79, 32.0375}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 17.575}, {1, 13.8}, {2, 0}, {3, 26.0375}, {4, 20.65}, {5, 29.025}, {6, 28.3875}, {7, 20.0875}, {8, 8.5375}, {9, 6.4}, {10, 29.2625}, {11, 28.0625}, {12, 21.875}, {13, 36.45}, {14, 25.55}, {15, 25.625}, {16, 13.0875}, {17, 15.5}, {18, 18.2875}, {19, 19.3875}, {20, 30.0875}, {21, 10.35}, {22, 25.45}, {23, 15.5625}, {24, 25.6625}, {25, 25.0375}, {26, 27.2125}, {27, 30.55}, {28, 30.8375}, {29, 26.6875}, {30, 21.025}, {31, 4.0375}, {32, 30.9875}, {33, 21.075}, {34, 45.05}, {35, 29.4125}, {36, 15.875}, {37, 23.9}, {38, 35.3125}, {39, 30.5125}, {40, 24.975}, {41, 24.1875}, {42, 20.6875}, {43, 24.6375}, {44, 25.4125}, {45, 10.35}, {46, 22.0875}, {47, 4.0375}, {48, 26.3}, {49, 20.5}, {50, 19.825}, {51, 14.7875}, {52, 31.9125}, {53, 13.1375}, {54, 31.9125}, {55, 14.8}, {56, 15.8125}, {57, 19.1875}, {58, 24.45}, {59, 39.9125}, {60, 18.725}, {61, 15.8125}, {62, 17.2875}, {63, 25.075}, {64, 47.8375}, {65, 10.3}, {66, 4.5}, {67, 1.25}, {68, 43.3375}, {69, 21.6625}, {70, 19.45}, {71, 28.15}, {72, 16.8875}, {73, 29.4625}, {74, 25.8875}, {75, 19.0875}, {76, 21.4625}, {77, 12.4875}, {78, 25.15}, {79, 35.05}, 