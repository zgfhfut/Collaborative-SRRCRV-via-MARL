node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 11, 15, 16, 17, 18, 21, 22, 23, 24, 26, 29, 30, 32, 33, 36, 40, 41, 42, 44, 45, 46, 51, 55, 57, 62, 66, 71, 72, 76, 77, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 11), Line(0, 39), Line(0, 47), Line(0, 48), Line(0, 50), Line(0, 58), Line(0, 70), Line(1, 2), Line(1, 11), Line(1, 48), Line(1, 51), Line(1, 55), Line(2, 56), Line(2, 72), Line(3, 23), Line(3, 57), Line(3, 74), Line(4, 69), Line(4, 79), Line(5, 8), Line(5, 11), Line(5, 67), Line(5, 73), Line(6, 51), Line(6, 62), Line(6, 72), Line(7, 10), Line(7, 20), Line(7, 21), Line(7, 58), Line(8, 40), Line(9, 10), Line(9, 61), Line(10, 12), Line(10, 46), Line(11, 20), Line(11, 32), Line(12, 19), Line(12, 29), Line(12, 63), Line(13, 18), Line(13, 35), Line(13, 68), Line(14, 16), Line(14, 26), Line(14, 56), Line(15, 31), Line(15, 38), Line(16, 37), Line(16, 48), Line(16, 66), Line(17, 40), Line(17, 64), Line(17, 65), Line(18, 64), Line(18, 71), Line(18, 73), Line(18, 78), Line(19, 75), Line(19, 76), Line(20, 54), Line(21, 50), Line(21, 70), Line(22, 38), Line(22, 62), Line(23, 24), Line(23, 37), Line(23, 54), Line(24, 28), Line(24, 54), Line(24, 64), Line(25, 49), Line(25, 74), Line(26, 53), Line(27, 29), Line(27, 36), Line(28, 44), Line(30, 42), Line(30, 44), Line(30, 72), Line(30, 75), Line(31, 73), Line(32, 52), Line(32, 67), Line(33, 36), Line(33, 37), Line(34, 47), Line(34, 57), Line(34, 77), Line(35, 77), Line(36, 56), Line(36, 76), Line(39, 42), Line(40, 53), Line(41, 43), Line(41, 63), Line(43, 47), Line(43, 63), Line(43, 69), Line(44, 48), Line(45, 75), Line(46, 57), Line(48, 72), Line(49, 52), Line(49, 76), Line(50, 59), Line(52, 67), Line(53, 64), Line(53, 70), Line(54, 56), Line(54, 78), Line(55, 65), Line(59, 69), Line(60, 64), Line(60, 79), Line(61, 66), Line(64, 71), Line(64, 72), Line(68, 78), Line(78, 79),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 11), Line(0, 39), Line(0, 47), Line(0, 48), Line(0, 58), Line(1, 2), Line(1, 51), Line(2, 56), Line(3, 57), Line(4, 79), Line(5, 11), Line(5, 67), Line(7, 10), Line(7, 20), Line(7, 21), Line(7, 58), Line(8, 40), Line(9, 10), Line(10, 12), Line(11, 20), Line(12, 19), Line(12, 29), Line(14, 26), Line(15, 31), Line(15, 38), Line(16, 48), Line(16, 66), Line(17, 40), Line(17, 64), Line(18, 64), Line(18, 73), Line(18, 78), Line(20, 54), Line(21, 50), Line(21, 70), Line(24, 54), Line(24, 64), Line(25, 49), Line(28, 44), Line(30, 72), Line(30, 75), Line(31, 73), Line(32, 67), Line(33, 36), Line(33, 37), Line(34, 77), Line(36, 56), Line(41, 43), Line(41, 63), Line(43, 69), Line(46, 57), Line(48, 72), Line(49, 52), Line(49, 76), Line(50, 59), Line(54, 56), Line(54, 78), Line(60, 64), Line(60, 79), Line(61, 66),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 11, 5);
g.add_edge(0, 39, 2.23);
g.add_edge(0, 47, 5.83);
g.add_edge(0, 48, 3.16);
g.add_edge(0, 50, 5.09);
g.add_edge(0, 58, 8.06);
g.add_edge(0, 70, 5.83);
g.add_edge(1, 2, 6.32);
g.add_edge(1, 11, 7.28);
g.add_edge(1, 48, 7.07);
g.add_edge(1, 51, 6);
g.add_edge(1, 55, 1);
g.add_edge(2, 56, 5.38);
g.add_edge(2, 72, 5);
g.add_edge(3, 23, 4.12);
g.add_edge(3, 57, 2.82);
g.add_edge(3, 74, 6);
g.add_edge(4, 69, 5);
g.add_edge(4, 79, 4.12);
g.add_edge(5, 8, 3.6);
g.add_edge(5, 11, 7.21);
g.add_edge(5, 67, 6.32);
g.add_edge(5, 73, 5);
g.add_edge(6, 51, 2.23);
g.add_edge(6, 62, 2);
g.add_edge(6, 72, 5.09);
g.add_edge(7, 10, 5.09);
g.add_edge(7, 20, 10);
g.add_edge(7, 21, 10.63);
g.add_edge(7, 58, 10.29);
g.add_edge(8, 40, 6.08);
g.add_edge(9, 10, 2);
g.add_edge(9, 61, 2.23);
g.add_edge(10, 12, 5);
g.add_edge(10, 46, 4.12);
g.add_edge(11, 20, 4.24);
g.add_edge(11, 32, 5.83);
g.add_edge(12, 19, 7.61);
g.add_edge(12, 29, 4);
g.add_edge(12, 63, 4.12);
g.add_edge(13, 18, 2);
g.add_edge(13, 35, 3.16);
g.add_edge(13, 68, 7.07);
g.add_edge(14, 16, 1);
g.add_edge(14, 26, 3.6);
g.add_edge(14, 56, 7.07);
g.add_edge(15, 31, 4);
g.add_edge(15, 38, 5);
g.add_edge(16, 37, 2.23);
g.add_edge(16, 48, 7.07);
g.add_edge(16, 66, 4);
g.add_edge(17, 40, 3.16);
g.add_edge(17, 64, 3.6);
g.add_edge(17, 65, 5.09);
g.add_edge(18, 64, 4.47);
g.add_edge(18, 71, 7.81);
g.add_edge(18, 73, 3.16);
g.add_edge(18, 78, 4);
g.add_edge(19, 75, 2.23);
g.add_edge(19, 76, 8.06);
g.add_edge(20, 54, 6.08);
g.add_edge(21, 50, 3.16);
g.add_edge(21, 70, 5.09);
g.add_edge(22, 38, 5.65);
g.add_edge(22, 62, 7.07);
g.add_edge(23, 24, 4.47);
g.add_edge(23, 37, 7.07);
g.add_edge(23, 54, 3);
g.add_edge(24, 28, 4.12);
g.add_edge(24, 54, 6.4);
g.add_edge(24, 64, 7.81);
g.add_edge(25, 49, 3.6);
g.add_edge(25, 74, 3.16);
g.add_edge(26, 53, 7.07);
g.add_edge(27, 29, 5.65);
g.add_edge(27, 36, 5);
g.add_edge(28, 44, 3.16);
g.add_edge(30, 42, 5.09);
g.add_edge(30, 44, 6.7);
g.add_edge(30, 72, 4.47);
g.add_edge(30, 75, 7.61);
g.add_edge(31, 73, 10);
g.add_edge(32, 52, 7.07);
g.add_edge(32, 67, 4.24);
g.add_edge(33, 36, 9.21);
g.add_edge(33, 37, 7.28);
g.add_edge(34, 47, 1);
g.add_edge(34, 57, 5);
g.add_edge(34, 77, 5.09);
g.add_edge(35, 77, 3.6);
g.add_edge(36, 56, 2.82);
g.add_edge(36, 76, 2.82);
g.add_edge(39, 42, 6.32);
g.add_edge(40, 53, 5);
g.add_edge(41, 43, 8.48);
g.add_edge(41, 63, 5.38);
g.add_edge(43, 47, 8.94);
g.add_edge(43, 63, 8.06);
g.add_edge(43, 69, 3.16);
g.add_edge(44, 48, 9.48);
g.add_edge(45, 75, 9);
g.add_edge(46, 57, 1.41);
g.add_edge(48, 72, 4.12);
g.add_edge(49, 52, 7.21);
g.add_edge(49, 76, 7.07);
g.add_edge(50, 59, 4.47);
g.add_edge(52, 67, 5.65);
g.add_edge(53, 64, 7.61);
g.add_edge(53, 70, 1.41);
g.add_edge(54, 56, 3.6);
g.add_edge(54, 78, 6.32);
g.add_edge(55, 65, 7.07);
g.add_edge(59, 69, 5.09);
g.add_edge(60, 64, 4);
g.add_edge(60, 79, 8.94);
g.add_edge(61, 66, 4.47);
g.add_edge(64, 71, 9.84);
g.add_edge(64, 72, 6.7);
g.add_edge(68, 78, 7.07);
g.add_edge(78, 79, 2);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 4.46);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 9.78);
g.set_importance(16, 6.52);
g.set_importance(17, 7.66);
g.set_importance(18, 3.75);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 9.17);
g.set_importance(22, 5.04);
g.set_importance(23, 6.24);
g.set_importance(24, 6.32);
g.set_importance(25, 0);
g.set_importance(26, 8.27);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 6.33);
g.set_importance(30, 5.52);
g.set_importance(31, 0);
g.set_importance(32, 1.05);
g.set_importance(33, 5.54);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 7.27);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 6.07);
g.set_importance(41, 4.24);
g.set_importance(42, 3.97);
g.set_importance(43, 0);
g.set_importance(44, 2.66);
g.set_importance(45, 3.27);
g.set_importance(46, 1.62);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 0);
g.set_importance(51, 3.99);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 3.96);
g.set_importance(56, 0);
g.set_importance(57, 9.23);
g.set_importance(58, 0);
g.set_importance(59, 0);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 3.77);
g.set_importance(63, 0);
g.set_importance(64, 0);
g.set_importance(65, 0);
g.set_importance(66, 5.5);
g.set_importance(67, 0);
g.set_importance(68, 0);
g.set_importance(69, 0);
g.set_importance(70, 0);
g.set_importance(71, 6.61);
g.set_importance(72, 3.56);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 0);
g.set_importance(76, 8.41);
g.set_importance(77, 7.89);
g.set_importance(78, 6.71);
g.set_importance(79, 2.57);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 11), 3.97);
g.set_repair_time(Line(0, 39), 3.45);
g.set_repair_time(Line(0, 47), 3.91);
g.set_repair_time(Line(0, 48), 2.06);
g.set_repair_time(Line(0, 58), 4.63);
g.set_repair_time(Line(1, 2), 3.96);
g.set_repair_time(Line(1, 51), 2.82);
g.set_repair_time(Line(2, 56), 2.9);
g.set_repair_time(Line(3, 57), 1.6);
g.set_repair_time(Line(4, 79), 1.88);
g.set_repair_time(Line(5, 11), 1.58);
g.set_repair_time(Line(5, 67), 3.57);
g.set_repair_time(Line(7, 10), 4.81);
g.set_repair_time(Line(7, 20), 1.47);
g.set_repair_time(Line(7, 21), 1.24);
g.set_repair_time(Line(7, 58), 1.16);
g.set_repair_time(Line(8, 40), 4.73);
g.set_repair_time(Line(9, 10), 2.35);
g.set_repair_time(Line(10, 12), 3.99);
g.set_repair_time(Line(11, 20), 4.73);
g.set_repair_time(Line(12, 19), 3.57);
g.set_repair_time(Line(12, 29), 4.34);
g.set_repair_time(Line(14, 26), 3.8);
g.set_repair_time(Line(15, 31), 4.29);
g.set_repair_time(Line(15, 38), 4.59);
g.set_repair_time(Line(16, 48), 3.07);
g.set_repair_time(Line(16, 66), 2.81);
g.set_repair_time(Line(17, 40), 5);
g.set_repair_time(Line(17, 64), 3.77);
g.set_repair_time(Line(18, 64), 3.2);
g.set_repair_time(Line(18, 73), 4.12);
g.set_repair_time(Line(18, 78), 3.17);
g.set_repair_time(Line(20, 54), 1.15);
g.set_repair_time(Line(21, 50), 2.29);
g.set_repair_time(Line(21, 70), 1.11);
g.set_repair_time(Line(24, 54), 4.55);
g.set_repair_time(Line(24, 64), 1.07);
g.set_repair_time(Line(25, 49), 1.21);
g.set_repair_time(Line(28, 44), 4.11);
g.set_repair_time(Line(30, 72), 3.02);
g.set_repair_time(Line(30, 75), 2.57);
g.set_repair_time(Line(31, 73), 3.51);
g.set_repair_time(Line(32, 67), 4.87);
g.set_repair_time(Line(33, 36), 3.36);
g.set_repair_time(Line(33, 37), 2.59);
g.set_repair_time(Line(34, 77), 2.75);
g.set_repair_time(Line(36, 56), 1.4);
g.set_repair_time(Line(41, 43), 2.76);
g.set_repair_time(Line(41, 63), 4.15);
g.set_repair_time(Line(43, 69), 1.38);
g.set_repair_time(Line(46, 57), 4.72);
g.set_repair_time(Line(48, 72), 2.91);
g.set_repair_time(Line(49, 52), 4.91);
g.set_repair_time(Line(49, 76), 4.77);
g.set_repair_time(Line(50, 59), 2.5);
g.set_repair_time(Line(54, 56), 1.11);
g.set_repair_time(Line(54, 78), 3.97);
g.set_repair_time(Line(60, 64), 1.97);
g.set_repair_time(Line(60, 79), 1.46);
g.set_repair_time(Line(61, 66), 4.96);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 12.7875}, {2, 15.35}, {3, 18.3125}, {4, 24.5625}, {5, 15.2625}, {6, 15.4625}, {7, 22.9375}, {8, 19.7625}, {9, 24.2}, {10, 21.7}, {11, 6.25}, {12, 27.95}, {13, 23.35}, {14, 14.0375}, {15, 39.0125}, {16, 12.7875}, {17, 19.25}, {18, 23.0625}, {19, 26.9875}, {20, 11.55}, {21, 10.3125}, {22, 26.8}, {23, 22.9}, {24, 24.9}, {25, 29.7625}, {26, 17.8875}, {27, 31.85}, {28, 19.75}, {29, 32.95}, {30, 14.6875}, {31, 34.0125}, {32, 13.5375}, {33, 24.675}, {34, 8.5375}, {35, 19.4}, {36, 25.6}, {37, 15.575}, {38, 33.8625}, {39, 2.7875}, {40, 15.3}, {41, 29.0625}, {42, 10.6875}, {43, 18.4625}, {44, 15.8}, {45, 35.45}, {46, 16.55}, {47, 7.2875}, {48, 3.95}, {49, 31.3875}, {50, 6.3625}, {51, 18.25}, {52, 22.375}, {53, 9.05}, {54, 19.15}, {55, 14.0375}, {56, 22.075}, {57, 14.7875}, {58, 10.075}, {59, 11.95}, {60, 22.475}, {61, 23.375}, {62, 17.9625}, {63, 28.5375}, {64, 17.475}, {65, 22.875}, {66, 17.7875}, {67, 18.8375}, {68, 32.1875}, {69, 18.3125}, {70, 7.2875}, {71, 29.775}, {72, 9.1}, {73, 21.5125}, {74, 25.8125}, {75, 24.2}, {76, 29.125}, {77, 14.9}, {78, 27.05}, {79, 29.55}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 12.7875}, {1, 0}, {2, 7.9}, {3, 28.025}, {4, 34.675}, {5, 18.1125}, {6, 10.2875}, {7, 26.9}, {8, 22.6125}, {9, 31.05}, {10, 33.2625}, {11, 9.1}, {12, 36.4625}, {13, 29.0375}, {14, 18.925}, {15, 34.9375}, {16, 17.675}, {17, 16.45}, {18, 26.5375}, {19, 31.75}, {20, 14.4}, {21, 23.1}, {22, 21.625}, {23, 22.875}, {24, 27.125}, {25, 35.0125}, {26, 23.425}, {27, 24.4}, {28, 24.6375}, {29, 31.4625}, {30, 19.575}, {31, 36.8625}, {32, 16.3875}, {33, 29.5625}, {34, 21.325}, {35, 32.1875}, {36, 18.15}, {37, 20.4625}, {38, 28.6875}, {39, 15.575}, {40, 20.4}, {41, 41.85}, {42, 23.475}, {43, 31.25}, {44, 20.6875}, {45, 40.3375}, {46, 29.3375}, {47, 20.075}, {48, 8.8375}, {49, 30.5125}, {50, 19.15}, {51, 7.5}, {52, 25.225}, {53, 21.8375}, {54, 19.125}, {55, 1.25}, {56, 14.625}, {57, 27.575}, {58, 22.8625}, {59, 24.7375}, {60, 25.95}, {61, 28.2625}, {62, 12.7875}, {63, 41.325}, {64, 20.95}, {65, 10.0875}, {66, 22.675}, {67, 21.6875}, {68, 35.8625}, {69, 31.1}, {70, 20.075}, {71, 33.25}, {72, 13.9875}, {73, 24.3625}, {74, 35.525}, {75, 29.0875}, {76, 21.675}, {77, 27.6875}, {78, 27.025}, {79, 29.525}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 15.35}, {1, 7.9}, {2, 0}, {3, 20.125}, {4, 26.775}, {5, 26.0125}, {6, 12.6125}, {7, 31.325}, {8, 30.5125}, {9, 30.1875}, {10, 30.5625}, {11, 17}, {12, 28.5625}, {13, 22.7125}, {14, 15.5625}, {15, 37.2625}, {16, 16.8125}, {17, 19.125}, {18, 20.2125}, {19, 23.85}, {20, 18.825}, {21, 25.6625}, {22, 23.95}, {23, 14.975}, {24, 19.225}, {25, 27.1125}, {26, 20.0625}, {27, 16.5}, {28, 24.1625}, {29, 23.5625}, {30, 11.8375}, {31, 36.6625}, {32, 24.2875}, {33, 21.7625}, {34, 23.8875}, {35, 26.6625}, {36, 10.25}, {37, 19.6}, {38, 31.0125}, {39, 18.1375}, {40, 23.075}, {41, 40.4375}, {42, 18.2}, {43, 33.8125}, {44, 20.2125}, {45, 32.6}, {46, 25.4125}, {47, 22.6375}, {48, 11.4}, {49, 22.6125}, {50, 21.7125}, {51, 15.4}, {52, 31.625}, {53, 24.1375}, {54, 11.225}, {55, 9.15}, {56, 6.725}, {57, 23.65}, {58, 25.425}, {59, 27.3}, {60, 19.625}, {61, 27.4}, {62, 15.1125}, {63, 33.7125}, {64, 14.625}, {65, 17.9875}, {66, 21.8125}, {67, 29.5875}, {68, 27.9625}, {69, 33.025}, {70, 22.6375}, {71, 26.925}, {72, 6.25}, {73, 24.1625}, {74, 27.625}, {75, 21.35}, {76, 13.775}, {77, 30.25}, {78, 19.125}, {79, 21.625}, 