node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 9, 10, 12, 14, 15, 20, 21, 23, 25, 26, 28, 30, 31, 33, 38, 39, 45, 49, 53, 55, 56, 59, 61, 64, 65, 69, 72, 75, 76, 77, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 26), Line(0, 38), Line(0, 73), Line(0, 76), Line(1, 7), Line(1, 24), Line(1, 44), Line(2, 32), Line(2, 76), Line(3, 36), Line(3, 52), Line(3, 56), Line(3, 63), Line(4, 45), Line(4, 48), Line(4, 52), Line(4, 68), Line(5, 8), Line(5, 15), Line(5, 76), Line(6, 34), Line(6, 66), Line(6, 69), Line(7, 10), Line(7, 30), Line(8, 10), Line(8, 44), Line(9, 34), Line(9, 45), Line(9, 57), Line(11, 18), Line(11, 21), Line(11, 74), Line(12, 21), Line(12, 37), Line(12, 43), Line(13, 45), Line(13, 49), Line(14, 23), Line(14, 50), Line(14, 53), Line(14, 58), Line(14, 62), Line(14, 68), Line(15, 28), Line(16, 22), Line(16, 71), Line(17, 49), Line(17, 52), Line(17, 70), Line(18, 51), Line(18, 67), Line(18, 75), Line(19, 60), Line(19, 62), Line(19, 63), Line(20, 22), Line(20, 45), Line(20, 58), Line(21, 30), Line(21, 61), Line(21, 78), Line(23, 77), Line(24, 67), Line(25, 39), Line(25, 42), Line(26, 31), Line(27, 59), Line(27, 66), Line(27, 72), Line(28, 40), Line(28, 54), Line(28, 59), Line(29, 78), Line(30, 32), Line(30, 34), Line(30, 42), Line(31, 33), Line(31, 39), Line(31, 51), Line(31, 56), Line(32, 33), Line(32, 71), Line(33, 65), Line(33, 73), Line(34, 37), Line(35, 38), Line(35, 59), Line(36, 74), Line(38, 60), Line(39, 63), Line(40, 41), Line(40, 44), Line(40, 75), Line(41, 50), Line(41, 69), Line(42, 76), Line(43, 69), Line(46, 48), Line(46, 50), Line(47, 53), Line(47, 59), Line(49, 65), Line(50, 69), Line(50, 74), Line(52, 68), Line(53, 79), Line(54, 56), Line(55, 58), Line(55, 78), Line(56, 64), Line(57, 79), Line(61, 62), Line(61, 77), Line(62, 64), Line(65, 75), Line(65, 78), Line(69, 76), Line(70, 75), Line(71, 72),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 26), Line(0, 76), Line(2, 76), Line(3, 56), Line(4, 48), Line(4, 52), Line(4, 68), Line(5, 15), Line(5, 76), Line(6, 34), Line(7, 10), Line(8, 10), Line(9, 34), Line(9, 57), Line(11, 18), Line(11, 74), Line(12, 21), Line(12, 37), Line(13, 45), Line(14, 23), Line(14, 58), Line(14, 62), Line(14, 68), Line(17, 49), Line(17, 52), Line(18, 67), Line(18, 75), Line(19, 60), Line(19, 62), Line(20, 45), Line(20, 58), Line(23, 77), Line(25, 42), Line(27, 59), Line(27, 66), Line(27, 72), Line(28, 40), Line(28, 59), Line(30, 32), Line(30, 34), Line(30, 42), Line(31, 39), Line(31, 51), Line(32, 33), Line(33, 73), Line(34, 37), Line(35, 38), Line(40, 44), Line(40, 75), Line(42, 76), Line(43, 69), Line(46, 48), Line(49, 65), Line(50, 69), Line(50, 74), Line(54, 56), Line(55, 58), Line(56, 64), Line(57, 79), Line(71, 72),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 26, 4.12);
g.add_edge(0, 38, 6);
g.add_edge(0, 73, 8.94);
g.add_edge(0, 76, 11.31);
g.add_edge(1, 7, 3.6);
g.add_edge(1, 24, 4);
g.add_edge(1, 44, 5.09);
g.add_edge(2, 32, 5.83);
g.add_edge(2, 76, 7.81);
g.add_edge(3, 36, 5);
g.add_edge(3, 52, 8.6);
g.add_edge(3, 56, 5.09);
g.add_edge(3, 63, 3.16);
g.add_edge(4, 45, 5);
g.add_edge(4, 48, 6);
g.add_edge(4, 52, 3.6);
g.add_edge(4, 68, 6.08);
g.add_edge(5, 8, 5.83);
g.add_edge(5, 15, 1);
g.add_edge(5, 76, 7.07);
g.add_edge(6, 34, 5);
g.add_edge(6, 66, 2.23);
g.add_edge(6, 69, 3.6);
g.add_edge(7, 10, 2.23);
g.add_edge(7, 30, 1.41);
g.add_edge(8, 10, 3.6);
g.add_edge(8, 44, 4.12);
g.add_edge(9, 34, 10);
g.add_edge(9, 45, 3.6);
g.add_edge(9, 57, 8.94);
g.add_edge(11, 18, 8.94);
g.add_edge(11, 21, 2.23);
g.add_edge(11, 74, 8.54);
g.add_edge(12, 21, 7.21);
g.add_edge(12, 37, 1.41);
g.add_edge(12, 43, 9.05);
g.add_edge(13, 45, 1);
g.add_edge(13, 49, 5.65);
g.add_edge(14, 23, 5.38);
g.add_edge(14, 50, 7.28);
g.add_edge(14, 53, 1.41);
g.add_edge(14, 58, 9.84);
g.add_edge(14, 62, 5.09);
g.add_edge(14, 68, 4);
g.add_edge(15, 28, 2);
g.add_edge(16, 22, 1.41);
g.add_edge(16, 71, 3.16);
g.add_edge(17, 49, 4.12);
g.add_edge(17, 52, 3.16);
g.add_edge(17, 70, 10);
g.add_edge(18, 51, 5);
g.add_edge(18, 67, 7);
g.add_edge(18, 75, 7.61);
g.add_edge(19, 60, 8.54);
g.add_edge(19, 62, 4.24);
g.add_edge(19, 63, 7.61);
g.add_edge(20, 22, 4.12);
g.add_edge(20, 45, 5.09);
g.add_edge(20, 58, 4.12);
g.add_edge(21, 30, 1);
g.add_edge(21, 61, 6.32);
g.add_edge(21, 78, 2.82);
g.add_edge(23, 77, 2);
g.add_edge(24, 67, 5.83);
g.add_edge(25, 39, 3);
g.add_edge(25, 42, 9.05);
g.add_edge(26, 31, 8.54);
g.add_edge(27, 59, 5.38);
g.add_edge(27, 66, 4);
g.add_edge(27, 72, 2);
g.add_edge(28, 40, 1);
g.add_edge(28, 54, 8.6);
g.add_edge(28, 59, 4.47);
g.add_edge(29, 78, 1);
g.add_edge(30, 32, 6.7);
g.add_edge(30, 34, 6.32);
g.add_edge(30, 42, 6.08);
g.add_edge(31, 33, 2.82);
g.add_edge(31, 39, 8.94);
g.add_edge(31, 51, 1);
g.add_edge(31, 56, 3);
g.add_edge(32, 33, 3.6);
g.add_edge(32, 71, 10.81);
g.add_edge(33, 65, 2.23);
g.add_edge(33, 73, 5.09);
g.add_edge(34, 37, 7.28);
g.add_edge(35, 38, 7.28);
g.add_edge(35, 59, 9.05);
g.add_edge(36, 74, 3);
g.add_edge(38, 60, 3.16);
g.add_edge(39, 63, 6.7);
g.add_edge(40, 41, 3.16);
g.add_edge(40, 44, 5.38);
g.add_edge(40, 75, 2.82);
g.add_edge(41, 50, 8.48);
g.add_edge(41, 69, 7.07);
g.add_edge(42, 76, 5);
g.add_edge(43, 69, 6.7);
g.add_edge(46, 48, 3);
g.add_edge(46, 50, 5.38);
g.add_edge(47, 53, 8.48);
g.add_edge(47, 59, 11.4);
g.add_edge(49, 65, 1);
g.add_edge(50, 69, 1.41);
g.add_edge(50, 74, 8.06);
g.add_edge(52, 68, 4.24);
g.add_edge(53, 79, 7.21);
g.add_edge(54, 56, 4.47);
g.add_edge(55, 58, 4.12);
g.add_edge(55, 78, 3.16);
g.add_edge(56, 64, 2);
g.add_edge(57, 79, 2.23);
g.add_edge(61, 62, 5.09);
g.add_edge(61, 77, 4.12);
g.add_edge(62, 64, 2);
g.add_edge(65, 75, 6.08);
g.add_edge(65, 78, 3.16);
g.add_edge(69, 76, 10);
g.add_edge(70, 75, 4.12);
g.add_edge(71, 72, 2.82);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 5.32);
g.set_importance(10, 8.46);
g.set_importance(11, 0);
g.set_importance(12, 5.37);
g.set_importance(13, 0);
g.set_importance(14, 1.1);
g.set_importance(15, 8.43);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 2.75);
g.set_importance(21, 6.47);
g.set_importance(22, 0);
g.set_importance(23, 1.41);
g.set_importance(24, 0);
g.set_importance(25, 1.17);
g.set_importance(26, 2.4);
g.set_importance(27, 0);
g.set_importance(28, 7.5);
g.set_importance(29, 0);
g.set_importance(30, 3.33);
g.set_importance(31, 8.73);
g.set_importance(32, 0);
g.set_importance(33, 2.37);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 8.46);
g.set_importance(39, 9.32);
g.set_importance(40, 0);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 9.86);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 5.07);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 0);
g.set_importance(53, 3.23);
g.set_importance(54, 0);
g.set_importance(55, 3.91);
g.set_importance(56, 1.71);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 7.94);
g.set_importance(60, 0);
g.set_importance(61, 2.43);
g.set_importance(62, 0);
g.set_importance(63, 0);
g.set_importance(64, 5.59);
g.set_importance(65, 6.69);
g.set_importance(66, 0);
g.set_importance(67, 0);
g.set_importance(68, 0);
g.set_importance(69, 6.81);
g.set_importance(70, 0);
g.set_importance(71, 0);
g.set_importance(72, 6.75);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 4.92);
g.set_importance(76, 4.2);
g.set_importance(77, 8.73);
g.set_importance(78, 9.42);
g.set_importance(79, 1.83);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 26), 4.59);
g.set_repair_time(Line(0, 76), 4.82);
g.set_repair_time(Line(2, 76), 2.41);
g.set_repair_time(Line(3, 56), 3.19);
g.set_repair_time(Line(4, 48), 4.99);
g.set_repair_time(Line(4, 52), 2.3);
g.set_repair_time(Line(4, 68), 1.02);
g.set_repair_time(Line(5, 15), 3.47);
g.set_repair_time(Line(5, 76), 4.35);
g.set_repair_time(Line(6, 34), 2.33);
g.set_repair_time(Line(7, 10), 3.14);
g.set_repair_time(Line(8, 10), 3.88);
g.set_repair_time(Line(9, 34), 3.33);
g.set_repair_time(Line(9, 57), 2.38);
g.set_repair_time(Line(11, 18), 1.51);
g.set_repair_time(Line(11, 74), 3.65);
g.set_repair_time(Line(12, 21), 3.12);
g.set_repair_time(Line(12, 37), 4.31);
g.set_repair_time(Line(13, 45), 2.72);
g.set_repair_time(Line(14, 23), 2.48);
g.set_repair_time(Line(14, 58), 4.73);
g.set_repair_time(Line(14, 62), 1.27);
g.set_repair_time(Line(14, 68), 3.49);
g.set_repair_time(Line(17, 49), 2.65);
g.set_repair_time(Line(17, 52), 3.32);
g.set_repair_time(Line(18, 67), 3.62);
g.set_repair_time(Line(18, 75), 2.32);
g.set_repair_time(Line(19, 60), 4.89);
g.set_repair_time(Line(19, 62), 2.67);
g.set_repair_time(Line(20, 45), 2.67);
g.set_repair_time(Line(20, 58), 2.79);
g.set_repair_time(Line(23, 77), 4.04);
g.set_repair_time(Line(25, 42), 1.05);
g.set_repair_time(Line(27, 59), 2.76);
g.set_repair_time(Line(27, 66), 4.7);
g.set_repair_time(Line(27, 72), 4.02);
g.set_repair_time(Line(28, 40), 2.19);
g.set_repair_time(Line(28, 59), 3.27);
g.set_repair_time(Line(30, 32), 4.62);
g.set_repair_time(Line(30, 34), 4);
g.set_repair_time(Line(30, 42), 4.87);
g.set_repair_time(Line(31, 39), 1.78);
g.set_repair_time(Line(31, 51), 2.1);
g.set_repair_time(Line(32, 33), 1.14);
g.set_repair_time(Line(33, 73), 1.99);
g.set_repair_time(Line(34, 37), 4.84);
g.set_repair_time(Line(35, 38), 2.24);
g.set_repair_time(Line(40, 44), 1);
g.set_repair_time(Line(40, 75), 3);
g.set_repair_time(Line(42, 76), 3.19);
g.set_repair_time(Line(43, 69), 4.35);
g.set_repair_time(Line(46, 48), 4.54);
g.set_repair_time(Line(49, 65), 1.01);
g.set_repair_time(Line(50, 69), 1.84);
g.set_repair_time(Line(50, 74), 2.36);
g.set_repair_time(Line(54, 56), 3.03);
g.set_repair_time(Line(55, 58), 2.96);
g.set_repair_time(Line(56, 64), 4.01);
g.set_repair_time(Line(57, 79), 2.27);
g.set_repair_time(Line(71, 72), 1.98);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 34.25}, {2, 23.9}, {3, 25.9375}, {4, 35.175}, {5, 22.975}, {6, 31.1375}, {7, 29.75}, {8, 30.2625}, {9, 34.3875}, {10, 32.5375}, {11, 30.5875}, {12, 36.8125}, {13, 28.6375}, {14, 30.9375}, {15, 24.225}, {16, 39.5}, {17, 26.725}, {18, 23.325}, {19, 22.125}, {20, 36.25}, {21, 27.8}, {22, 41.2625}, {23, 37.6625}, {24, 39.25}, {25, 30.75}, {26, 5.15}, {27, 34.6375}, {28, 26.725}, {29, 25.525}, {30, 27.9875}, {31, 15.825}, {32, 22.0375}, {33, 17.5375}, {34, 35.8875}, {35, 16.6}, {36, 32.1875}, {37, 38.575}, {38, 7.5}, {39, 27}, {40, 27.975}, {41, 31.925}, {42, 20.3875}, {43, 35.0125}, {44, 34.7}, {45, 29.8875}, {46, 35.125}, {47, 42.1625}, {48, 38.875}, {49, 21.575}, {50, 28.4}, {51, 17.075}, {52, 30.675}, {53, 32.7}, {54, 25.1625}, {55, 28.225}, {56, 19.575}, {57, 44.5}, {58, 33.375}, {59, 27.9125}, {60, 11.45}, {61, 30.9375}, {62, 24.575}, {63, 29.8875}, {64, 22.075}, {65, 20.325}, {66, 33.925}, {67, 32.075}, {68, 35.9375}, {69, 26.6375}, {70, 33.075}, {71, 35.55}, {72, 37.1375}, {73, 11.175}, {74, 35.9375}, {75, 27.925}, {76, 14.1375}, {77, 36.0875}, {78, 24.275}, {79, 41.7125}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 34.25}, {1, 0}, {2, 21.925}, {3, 30.975}, {4, 29.8375}, {5, 18.0875}, {6, 20.4125}, {7, 4.5}, {8, 11.5125}, {9, 26.6625}, {10, 7.2875}, {11, 10.3}, {12, 16.525}, {13, 23.3}, {14, 28.1375}, {15, 16.8375}, {16, 32.1}, {17, 21.3875}, {18, 21.0375}, {19, 27.075}, {20, 25.2875}, {21, 7.5125}, {22, 30.4375}, {23, 23.0625}, {24, 5}, {25, 25.175}, {26, 31.975}, {27, 26.65}, {28, 14.3375}, {29, 12.2875}, {30, 6.2625}, {31, 21.3}, {32, 14.6375}, {33, 17.775}, {34, 14.1625}, {35, 31.2375}, {36, 24.725}, {37, 18.2875}, {38, 40.3375}, {39, 28.925}, {40, 13.0875}, {41, 17.0375}, {42, 13.8625}, {43, 27.8375}, {44, 6.3625}, {45, 24.55}, {46, 33.4}, {47, 34.175}, {48, 37.15}, {49, 16.2375}, {50, 26.675}, {51, 22.55}, {52, 25.3375}, {53, 29.9}, {54, 25.0875}, {55, 14.9875}, {56, 25.05}, {57, 37.8375}, {58, 20.1375}, {59, 19.925}, {60, 37.75}, {61, 15.4125}, {62, 21.775}, {63, 34.925}, {64, 24.275}, {65, 14.9875}, {66, 23.2}, {67, 12.2875}, {68, 30.6375}, {69, 24.9125}, {70, 21.7625}, {71, 28.15}, {72, 29.15}, {73, 24.1375}, {74, 20.975}, {75, 16.6125}, {76, 20.1125}, {77, 20.5625}, {78, 11.0375}, {79, 38.9125}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 23.9}, {1, 21.925}, {2, 0}, {3, 25.425}, {4, 29.425}, {5, 18.6}, {6, 26.7625}, {7, 17.425}, {8, 24.7125}, {9, 28.6375}, {10, 20.2125}, {11, 19.7}, {12, 25.925}, {13, 22.8875}, {14, 30.425}, {15, 19.85}, {16, 24.75}, {17, 20.975}, {18, 22.8125}, {19, 29.3625}, {20, 30.5}, {21, 16.9125}, {22, 26.5125}, {23, 32.4625}, {24, 26.925}, {25, 27.325}, {26, 25.9875}, {27, 26.825}, {28, 22.35}, {29, 19.775}, {30, 15.6625}, {31, 15.3125}, {32, 7.2875}, {33, 11.7875}, {34, 23.5625}, {35, 39.25}, {36, 31.675}, {37, 27.6875}, {38, 31.4}, {39, 26.4875}, {40, 23.6}, {41, 27.55}, {42, 16.0125}, {43, 30.6375}, {44, 28.2875}, {45, 24.1375}, {46, 30.75}, {47, 42.1875}, {48, 34.5}, {49, 15.825}, {50, 24.025}, {51, 16.5625}, {52, 24.925}, {53, 32.1875}, {54, 24.65}, {55, 22.475}, {56, 19.0625}, {57, 39.8125}, {58, 27.625}, {59, 27.9375}, {60, 35.35}, {61, 24.8125}, {62, 24.0625}, {63, 29.375}, {64, 21.5625}, {65, 14.575}, {66, 29.55}, {67, 31.5625}, {68, 30.225}, {69, 22.2625}, {70, 27.325}, {71, 20.8}, {72, 24.325}, {73, 18.15}, {74, 30.375}, {75, 22.175}, {76, 9.7625}, {77, 29.9625}, {78, 18.525}, {79, 41.2}, 