node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 7, 8, 9, 11, 16, 17, 18, 19, 22, 24, 25, 26, 30, 31, 33, 36, 39, 41, 43, 46, 51, 53, 54, 56, 58, 60, 65, 68, 71, 75, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 34), Line(0, 41), Line(0, 73), Line(1, 29), Line(1, 30), Line(2, 8), Line(2, 43), Line(3, 17), Line(3, 38), Line(4, 36), Line(4, 49), Line(4, 50), Line(5, 21), Line(5, 48), Line(6, 45), Line(6, 48), Line(7, 8), Line(7, 23), Line(7, 32), Line(7, 44), Line(7, 66), Line(8, 53), Line(9, 23), Line(9, 60), Line(9, 67), Line(10, 64), Line(10, 70), Line(11, 34), Line(11, 61), Line(11, 66), Line(12, 19), Line(12, 41), Line(12, 57), Line(13, 45), Line(13, 79), Line(14, 17), Line(14, 63), Line(14, 67), Line(14, 75), Line(15, 19), Line(15, 63), Line(16, 50), Line(16, 71), Line(16, 75), Line(17, 33), Line(18, 47), Line(18, 55), Line(18, 59), Line(19, 71), Line(20, 43), Line(20, 62), Line(21, 27), Line(21, 46), Line(22, 24), Line(22, 76), Line(23, 62), Line(24, 34), Line(24, 65), Line(25, 27), Line(25, 44), Line(25, 54), Line(26, 30), Line(26, 55), Line(26, 74), Line(27, 53), Line(28, 38), Line(28, 63), Line(28, 66), Line(29, 73), Line(30, 56), Line(30, 58), Line(31, 72), Line(31, 74), Line(32, 72), Line(33, 68), Line(35, 46), Line(35, 77), Line(36, 77), Line(37, 60), Line(37, 76), Line(39, 54), Line(39, 64), Line(40, 49), Line(40, 53), Line(40, 71), Line(42, 59), Line(42, 61), Line(43, 51), Line(44, 55), Line(44, 56), Line(44, 79), Line(45, 53), Line(45, 55), Line(46, 47), Line(48, 63), Line(49, 51), Line(50, 57), Line(50, 71), Line(51, 53), Line(51, 67), Line(52, 58), Line(52, 78), Line(53, 63), Line(54, 55), Line(54, 65), Line(55, 62), Line(55, 75), Line(56, 65), Line(57, 71), Line(58, 68), Line(60, 65), Line(60, 69), Line(61, 63), Line(61, 78), Line(64, 77), Line(67, 72), Line(67, 74), Line(67, 79), Line(69, 70), Line(78, 79),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 34), Line(0, 41), Line(1, 29), Line(2, 8), Line(3, 38), Line(4, 49), Line(5, 21), Line(5, 48), Line(6, 45), Line(7, 8), Line(7, 32), Line(8, 53), Line(9, 23), Line(9, 60), Line(11, 61), Line(11, 66), Line(12, 41), Line(13, 79), Line(14, 17), Line(14, 75), Line(15, 19), Line(15, 63), Line(17, 33), Line(18, 55), Line(18, 59), Line(20, 62), Line(21, 46), Line(24, 65), Line(26, 55), Line(27, 53), Line(28, 38), Line(29, 73), Line(30, 56), Line(31, 74), Line(33, 68), Line(35, 77), Line(37, 60), Line(39, 54), Line(39, 64), Line(40, 53), Line(43, 51), Line(44, 55), Line(44, 56), Line(44, 79), Line(48, 63), Line(50, 57), Line(51, 67), Line(53, 63), Line(54, 55), Line(54, 65), Line(55, 75), Line(56, 65), Line(57, 71), Line(58, 68), Line(60, 69), Line(61, 78), Line(64, 77), Line(67, 72), Line(67, 79), Line(69, 70),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 34, 8.06);
g.add_edge(0, 41, 5);
g.add_edge(0, 73, 5);
g.add_edge(1, 29, 3.16);
g.add_edge(1, 30, 6.32);
g.add_edge(2, 8, 2);
g.add_edge(2, 43, 2.23);
g.add_edge(3, 17, 5.83);
g.add_edge(3, 38, 5.09);
g.add_edge(4, 36, 2.23);
g.add_edge(4, 49, 3);
g.add_edge(4, 50, 3);
g.add_edge(5, 21, 5.38);
g.add_edge(5, 48, 8.06);
g.add_edge(6, 45, 5.09);
g.add_edge(6, 48, 8.54);
g.add_edge(7, 8, 4.12);
g.add_edge(7, 23, 3.6);
g.add_edge(7, 32, 1);
g.add_edge(7, 44, 5.38);
g.add_edge(7, 66, 3.6);
g.add_edge(8, 53, 5.38);
g.add_edge(9, 23, 4.24);
g.add_edge(9, 60, 3);
g.add_edge(9, 67, 5.38);
g.add_edge(10, 64, 5.09);
g.add_edge(10, 70, 8.06);
g.add_edge(11, 34, 9.43);
g.add_edge(11, 61, 8);
g.add_edge(11, 66, 6);
g.add_edge(12, 19, 3.6);
g.add_edge(12, 41, 5.38);
g.add_edge(12, 57, 6.7);
g.add_edge(13, 45, 1);
g.add_edge(13, 79, 6.08);
g.add_edge(14, 17, 9.21);
g.add_edge(14, 63, 6.4);
g.add_edge(14, 67, 1.41);
g.add_edge(14, 75, 4.24);
g.add_edge(15, 19, 6.08);
g.add_edge(15, 63, 3.16);
g.add_edge(16, 50, 8.94);
g.add_edge(16, 71, 3.6);
g.add_edge(16, 75, 9);
g.add_edge(17, 33, 2.23);
g.add_edge(18, 47, 8.94);
g.add_edge(18, 55, 1);
g.add_edge(18, 59, 8.94);
g.add_edge(19, 71, 4.24);
g.add_edge(20, 43, 4.12);
g.add_edge(20, 62, 1);
g.add_edge(21, 27, 2.23);
g.add_edge(21, 46, 3.6);
g.add_edge(22, 24, 5.83);
g.add_edge(22, 76, 4.12);
g.add_edge(23, 62, 7);
g.add_edge(24, 34, 10.63);
g.add_edge(24, 65, 7.07);
g.add_edge(25, 27, 1);
g.add_edge(25, 44, 9.05);
g.add_edge(25, 54, 6.08);
g.add_edge(26, 30, 2.82);
g.add_edge(26, 55, 3.16);
g.add_edge(26, 74, 5.38);
g.add_edge(27, 53, 5.09);
g.add_edge(28, 38, 1);
g.add_edge(28, 63, 3);
g.add_edge(28, 66, 5);
g.add_edge(29, 73, 2.82);
g.add_edge(30, 56, 5.38);
g.add_edge(30, 58, 6.4);
g.add_edge(31, 72, 6.08);
g.add_edge(31, 74, 2.23);
g.add_edge(32, 72, 6.32);
g.add_edge(33, 68, 5.09);
g.add_edge(35, 46, 5.65);
g.add_edge(35, 77, 7.28);
g.add_edge(36, 77, 6);
g.add_edge(37, 60, 2.23);
g.add_edge(37, 76, 7);
g.add_edge(39, 54, 2.82);
g.add_edge(39, 64, 6.08);
g.add_edge(40, 49, 5.83);
g.add_edge(40, 53, 5);
g.add_edge(40, 71, 1);
g.add_edge(42, 59, 7.28);
g.add_edge(42, 61, 9.21);
g.add_edge(43, 51, 3.16);
g.add_edge(44, 55, 9.43);
g.add_edge(44, 56, 2.82);
g.add_edge(44, 79, 6.7);
g.add_edge(45, 53, 8.6);
g.add_edge(45, 55, 4.47);
g.add_edge(46, 47, 3);
g.add_edge(48, 63, 4.47);
g.add_edge(49, 51, 5.38);
g.add_edge(50, 57, 6.4);
g.add_edge(50, 71, 5.38);
g.add_edge(51, 53, 8.48);
g.add_edge(51, 67, 5.09);
g.add_edge(52, 58, 6.32);
g.add_edge(52, 78, 7.21);
g.add_edge(53, 63, 4.12);
g.add_edge(54, 55, 7.07);
g.add_edge(54, 65, 5);
g.add_edge(55, 62, 7.07);
g.add_edge(55, 75, 10);
g.add_edge(56, 65, 5.09);
g.add_edge(57, 71, 2);
g.add_edge(58, 68, 5.38);
g.add_edge(60, 65, 1);
g.add_edge(60, 69, 4.24);
g.add_edge(61, 63, 8.24);
g.add_edge(61, 78, 7.07);
g.add_edge(64, 77, 8);
g.add_edge(67, 72, 7.28);
g.add_edge(67, 74, 7.28);
g.add_edge(67, 79, 4);
g.add_edge(69, 70, 5.65);
g.add_edge(78, 79, 9.43);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 8.22);
g.set_importance(7, 7.61);
g.set_importance(8, 7.31);
g.set_importance(9, 3.04);
g.set_importance(10, 0);
g.set_importance(11, 1.41);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 4.62);
g.set_importance(17, 9.38);
g.set_importance(18, 6.73);
g.set_importance(19, 8.38);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 7.78);
g.set_importance(23, 0);
g.set_importance(24, 5.31);
g.set_importance(25, 9.38);
g.set_importance(26, 7.77);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 2.48);
g.set_importance(31, 7.84);
g.set_importance(32, 0);
g.set_importance(33, 5.92);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 5.42);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 9.65);
g.set_importance(40, 0);
g.set_importance(41, 4.37);
g.set_importance(42, 0);
g.set_importance(43, 6.78);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 9.97);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 0);
g.set_importance(50, 0);
g.set_importance(51, 2.54);
g.set_importance(52, 0);
g.set_importance(53, 7.37);
g.set_importance(54, 1.12);
g.set_importance(55, 0);
g.set_importance(56, 5.62);
g.set_importance(57, 0);
g.set_importance(58, 3.98);
g.set_importance(59, 0);
g.set_importance(60, 3.27);
g.set_importance(61, 0);
g.set_importance(62, 0);
g.set_importance(63, 0);
g.set_importance(64, 0);
g.set_importance(65, 4.79);
g.set_importance(66, 0);
g.set_importance(67, 0);
g.set_importance(68, 9.23);
g.set_importance(69, 0);
g.set_importance(70, 0);
g.set_importance(71, 1.64);
g.set_importance(72, 0);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 8.75);
g.set_importance(76, 0);
g.set_importance(77, 0);
g.set_importance(78, 0);
g.set_importance(79, 1.19);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 34), 4.96);
g.set_repair_time(Line(0, 41), 2.64);
g.set_repair_time(Line(1, 29), 4.4);
g.set_repair_time(Line(2, 8), 4.97);
g.set_repair_time(Line(3, 38), 4.72);
g.set_repair_time(Line(4, 49), 4.2);
g.set_repair_time(Line(5, 21), 1.86);
g.set_repair_time(Line(5, 48), 3.07);
g.set_repair_time(Line(6, 45), 1.37);
g.set_repair_time(Line(7, 8), 2.85);
g.set_repair_time(Line(7, 32), 1.74);
g.set_repair_time(Line(8, 53), 4.25);
g.set_repair_time(Line(9, 23), 4.6);
g.set_repair_time(Line(9, 60), 1.69);
g.set_repair_time(Line(11, 61), 4.82);
g.set_repair_time(Line(11, 66), 2.27);
g.set_repair_time(Line(12, 41), 1.81);
g.set_repair_time(Line(13, 79), 3);
g.set_repair_time(Line(14, 17), 3.96);
g.set_repair_time(Line(14, 75), 1.4);
g.set_repair_time(Line(15, 19), 3.53);
g.set_repair_time(Line(15, 63), 2.7);
g.set_repair_time(Line(17, 33), 3.53);
g.set_repair_time(Line(18, 55), 1.66);
g.set_repair_time(Line(18, 59), 4.88);
g.set_repair_time(Line(20, 62), 3.94);
g.set_repair_time(Line(21, 46), 1.62);
g.set_repair_time(Line(24, 65), 1.91);
g.set_repair_time(Line(26, 55), 2.29);
g.set_repair_time(Line(27, 53), 4.58);
g.set_repair_time(Line(28, 38), 3.08);
g.set_repair_time(Line(29, 73), 1.27);
g.set_repair_time(Line(30, 56), 3.23);
g.set_repair_time(Line(31, 74), 3.55);
g.set_repair_time(Line(33, 68), 2.33);
g.set_repair_time(Line(35, 77), 2.17);
g.set_repair_time(Line(37, 60), 1.58);
g.set_repair_time(Line(39, 54), 2.77);
g.set_repair_time(Line(39, 64), 1.47);
g.set_repair_time(Line(40, 53), 2.2);
g.set_repair_time(Line(43, 51), 2.11);
g.set_repair_time(Line(44, 55), 3.47);
g.set_repair_time(Line(44, 56), 4.26);
g.set_repair_time(Line(44, 79), 4.57);
g.set_repair_time(Line(48, 63), 1.46);
g.set_repair_time(Line(50, 57), 1.59);
g.set_repair_time(Line(51, 67), 2.18);
g.set_repair_time(Line(53, 63), 3.02);
g.set_repair_time(Line(54, 55), 4.93);
g.set_repair_time(Line(54, 65), 3.98);
g.set_repair_time(Line(55, 75), 1.74);
g.set_repair_time(Line(56, 65), 3.52);
g.set_repair_time(Line(57, 71), 2.84);
g.set_repair_time(Line(58, 68), 3.91);
g.set_repair_time(Line(60, 69), 1.14);
g.set_repair_time(Line(61, 78), 3.08);
g.set_repair_time(Line(64, 77), 2.65);
g.set_repair_time(Line(67, 72), 1.92);
g.set_repair_time(Line(67, 79), 1.7);
g.set_repair_time(Line(69, 70), 4.29);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 13.725}, {2, 39.5}, {3, 40.3875}, {4, 33.1}, {5, 44.6875}, {6, 41.05}, {7, 33.8625}, {8, 37}, {9, 37.2}, {10, 55.425}, {11, 21.8625}, {12, 12.975}, {13, 35.9375}, {14, 37.025}, {15, 25.075}, {16, 27.275}, {17, 45.5}, {18, 30.35}, {19, 17.475}, {20, 39.1875}, {21, 39.425}, {22, 30.65}, {23, 38.3625}, {24, 23.3625}, {25, 37.8875}, {26, 25.15}, {27, 36.6375}, {28, 32.775}, {29, 9.775}, {30, 21.625}, {31, 34.6625}, {32, 35.1125}, {33, 42.7125}, {34, 10.075}, {35, 50.9875}, {36, 35.8875}, {37, 36.2375}, {38, 34.025}, {39, 41.4625}, {40, 24.025}, {41, 6.25}, {42, 43.375}, {43, 41.9875}, {44, 31.875}, {45, 34.6875}, {46, 43.925}, {47, 41.525}, {48, 34.6125}, {49, 31.3125}, {50, 29.35}, {51, 38.0375}, {52, 37.525}, {53, 30.275}, {54, 37.9375}, {55, 29.1}, {56, 28.35}, {57, 21.35}, {58, 29.625}, {59, 41.525}, {60, 33.45}, {61, 31.8625}, {62, 37.9375}, {63, 29.025}, {64, 49.0625}, {65, 32.2}, {66, 29.3625}, {67, 38.7875}, {68, 36.35}, {69, 38.75}, {70, 45.8125}, {71, 22.775}, {72, 42.2625}, {73, 6.25}, {74, 31.875}, {75, 38.525}, {76, 35.8}, {77, 43.3875}, {78, 40.7}, {79, 40.25}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 13.725}, {1, 0}, {2, 32.525}, {3, 39.0625}, {4, 44.0875}, {5, 40.225}, {6, 27.325}, {7, 24.875}, {8, 30.025}, {9, 25.9875}, {10, 41.7}, {11, 35.5875}, {12, 26.7}, {13, 22.2125}, {14, 29.0125}, {15, 38.8}, {16, 39.125}, {17, 31.775}, {18, 16.625}, {19, 31.2}, {20, 25.4625}, {21, 33.5}, {22, 37.1125}, {23, 29.375}, {24, 29.825}, {25, 29.4625}, {26, 11.425}, {27, 30.7125}, {28, 35.625}, {29, 3.95}, {30, 7.9}, {31, 20.9375}, {32, 26.125}, {33, 28.9875}, {34, 23.8}, {35, 38.6125}, {36, 46.875}, {37, 25.025}, {38, 36.875}, {39, 27.7375}, {40, 37.75}, {41, 19.975}, {42, 36.9}, {43, 30.6125}, {44, 18.15}, {45, 20.9625}, {46, 31.55}, {47, 27.8}, {48, 38}, {49, 40.3375}, {50, 43.075}, {51, 33.6125}, {52, 23.8}, {53, 31.7125}, {54, 24.2125}, {55, 15.375}, {56, 14.625}, {57, 35.075}, {58, 15.9}, {59, 27.8}, {60, 22.2375}, {61, 41.65}, {62, 24.2125}, {63, 36.8625}, {64, 35.3375}, {65, 20.9875}, {66, 29.375}, {67, 27.25}, {68, 22.625}, {69, 27.5375}, {70, 34.6}, {71, 36.5}, {72, 28.5375}, {73, 7.475}, {74, 18.15}, {75, 27.875}, {76, 33.775}, {77, 45.3375}, {78, 32.8125}, {79, 26.525}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 39.5}, {1, 32.525}, {2, 0}, {3, 25.7375}, {4, 17.2125}, {5, 25.1}, {6, 26.3375}, {7, 7.65}, {8, 2.5}, {9, 17.45}, {10, 41.925}, {11, 19.65}, {12, 26.525}, {13, 21.225}, {14, 14.8625}, {15, 18.325}, {16, 21.225}, {17, 26.375}, {18, 19.275}, {19, 22.025}, {20, 7.9375}, {21, 18.375}, {22, 37.8875}, {23, 12.15}, {24, 31.2875}, {25, 16.8375}, {26, 21.975}, {27, 15.5875}, {28, 18.125}, {29, 36.475}, {30, 24.625}, {31, 24.4}, {32, 8.9}, {33, 29.1625}, {34, 31.4375}, {35, 29.9375}, {36, 20}, {37, 23.9875}, {38, 19.375}, {39, 27.9625}, {40, 15.475}, {41, 33.25}, {42, 36.1875}, {43, 2.7875}, {44, 14.375}, {45, 19.975}, {46, 22.875}, {47, 26.625}, {48, 19.9625}, {49, 13.4625}, {50, 20.9625}, {51, 6.7375}, {52, 38.9}, {53, 9.225}, {54, 24.4375}, {55, 18.025}, {56, 17.9}, {57, 19.225}, {58, 32.625}, {59, 30.45}, {60, 21.2}, {61, 24.675}, {62, 9.1875}, {63, 14.375}, {64, 35.5625}, {65, 22.45}, {66, 12.15}, {67, 13.1}, {68, 35.525}, {69, 26.5}, {70, 33.5625}, {71, 16.725}, {72, 16.8}, {73, 40}, {74, 22.2}, {75, 20.1625}, {76, 32.7375}, {77, 27.5}, {78, 29.8875}, {79, 18.1}, 