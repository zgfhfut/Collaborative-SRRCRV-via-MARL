node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 10, 14, 16, 18, 20, 21, 26, 27, 28, 31, 35, 36, 38, 40, 44, 49, 55, 56, 58, 59, 62, 66, 67, 68, 69, 72, 74, 75, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 28), Line(0, 41), Line(0, 47), Line(0, 62), Line(1, 21), Line(1, 66), Line(2, 35), Line(2, 68), Line(2, 73), Line(3, 4), Line(3, 41), Line(3, 43), Line(3, 75), Line(4, 8), Line(4, 10), Line(5, 6), Line(5, 25), Line(5, 28), Line(5, 44), Line(6, 7), Line(6, 64), Line(7, 47), Line(7, 53), Line(7, 60), Line(7, 79), Line(8, 22), Line(8, 65), Line(8, 69), Line(8, 73), Line(8, 78), Line(9, 37), Line(9, 63), Line(10, 61), Line(10, 71), Line(11, 36), Line(11, 59), Line(12, 13), Line(12, 16), Line(12, 53), Line(13, 18), Line(13, 56), Line(13, 71), Line(14, 24), Line(14, 31), Line(14, 76), Line(15, 27), Line(15, 44), Line(16, 33), Line(16, 36), Line(17, 38), Line(17, 77), Line(18, 32), Line(18, 74), Line(19, 40), Line(19, 75), Line(20, 34), Line(20, 55), Line(20, 58), Line(20, 67), Line(21, 52), Line(21, 79), Line(22, 66), Line(23, 34), Line(23, 52), Line(23, 73), Line(24, 37), Line(24, 67), Line(25, 29), Line(26, 29), Line(26, 56), Line(27, 39), Line(28, 54), Line(28, 61), Line(29, 63), Line(29, 66), Line(30, 64), Line(30, 72), Line(31, 43), Line(32, 74), Line(33, 70), Line(34, 45), Line(34, 68), Line(35, 57), Line(35, 76), Line(36, 43), Line(36, 64), Line(37, 68), Line(38, 40), Line(38, 45), Line(39, 65), Line(40, 63), Line(41, 69), Line(42, 47), Line(42, 79), Line(43, 44), Line(43, 51), Line(44, 57), Line(45, 46), Line(46, 69), Line(48, 56), Line(48, 59), Line(49, 60), Line(49, 72), Line(50, 70), Line(50, 71), Line(51, 54), Line(51, 68), Line(52, 54), Line(52, 61), Line(52, 73), Line(53, 79), Line(55, 72), Line(55, 78), Line(58, 75), Line(59, 65), Line(60, 78), Line(62, 74), Line(62, 76), Line(67, 77), Line(72, 74),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 28), Line(0, 62), Line(1, 21), Line(1, 66), Line(2, 35), Line(3, 4), Line(3, 41), Line(3, 43), Line(3, 75), Line(4, 8), Line(5, 6), Line(6, 64), Line(7, 53), Line(7, 60), Line(7, 79), Line(8, 65), Line(8, 78), Line(10, 61), Line(10, 71), Line(11, 36), Line(12, 13), Line(12, 53), Line(13, 56), Line(14, 24), Line(14, 31), Line(14, 76), Line(16, 36), Line(17, 38), Line(18, 32), Line(19, 75), Line(20, 55), Line(20, 67), Line(22, 66), Line(23, 34), Line(23, 73), Line(24, 37), Line(24, 67), Line(27, 39), Line(28, 61), Line(30, 64), Line(31, 43), Line(34, 45), Line(35, 76), Line(36, 43), Line(37, 68), Line(38, 45), Line(40, 63), Line(42, 47), Line(43, 51), Line(49, 60), Line(50, 70), Line(50, 71), Line(51, 54), Line(51, 68), Line(52, 54), Line(53, 79), Line(55, 78), Line(59, 65), Line(62, 76), Line(72, 74),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 28, 5.38);
g.add_edge(0, 41, 1.41);
g.add_edge(0, 47, 6.7);
g.add_edge(0, 62, 5);
g.add_edge(1, 21, 6.4);
g.add_edge(1, 66, 7.81);
g.add_edge(2, 35, 5);
g.add_edge(2, 68, 5);
g.add_edge(2, 73, 3);
g.add_edge(3, 4, 3.6);
g.add_edge(3, 41, 7.81);
g.add_edge(3, 43, 4.12);
g.add_edge(3, 75, 6.08);
g.add_edge(4, 8, 4.12);
g.add_edge(4, 10, 4.12);
g.add_edge(5, 6, 6.4);
g.add_edge(5, 25, 4);
g.add_edge(5, 28, 8.06);
g.add_edge(5, 44, 4);
g.add_edge(6, 7, 4.12);
g.add_edge(6, 64, 3.16);
g.add_edge(7, 47, 8.54);
g.add_edge(7, 53, 4);
g.add_edge(7, 60, 5);
g.add_edge(7, 79, 6.7);
g.add_edge(8, 22, 9);
g.add_edge(8, 65, 1);
g.add_edge(8, 69, 5);
g.add_edge(8, 73, 5.38);
g.add_edge(8, 78, 3.6);
g.add_edge(9, 37, 5);
g.add_edge(9, 63, 3.16);
g.add_edge(10, 61, 6.32);
g.add_edge(10, 71, 2.23);
g.add_edge(11, 36, 6.7);
g.add_edge(11, 59, 4);
g.add_edge(12, 13, 5.38);
g.add_edge(12, 16, 8.94);
g.add_edge(12, 53, 3.6);
g.add_edge(13, 18, 3.6);
g.add_edge(13, 56, 5);
g.add_edge(13, 71, 1.41);
g.add_edge(14, 24, 3.16);
g.add_edge(14, 31, 5.09);
g.add_edge(14, 76, 7.61);
g.add_edge(15, 27, 5.83);
g.add_edge(15, 44, 4.12);
g.add_edge(16, 33, 10.63);
g.add_edge(16, 36, 1.41);
g.add_edge(17, 38, 5.38);
g.add_edge(17, 77, 7.28);
g.add_edge(18, 32, 4.24);
g.add_edge(18, 74, 6.4);
g.add_edge(19, 40, 5.38);
g.add_edge(19, 75, 2.23);
g.add_edge(20, 34, 6);
g.add_edge(20, 55, 6.32);
g.add_edge(20, 58, 3.16);
g.add_edge(20, 67, 1);
g.add_edge(21, 52, 5.83);
g.add_edge(21, 79, 4.47);
g.add_edge(22, 66, 6.4);
g.add_edge(23, 34, 5);
g.add_edge(23, 52, 5.83);
g.add_edge(23, 73, 2.23);
g.add_edge(24, 37, 6.7);
g.add_edge(24, 67, 7.81);
g.add_edge(25, 29, 2);
g.add_edge(26, 29, 3.16);
g.add_edge(26, 56, 8.54);
g.add_edge(27, 39, 9.43);
g.add_edge(28, 54, 1);
g.add_edge(28, 61, 4.47);
g.add_edge(29, 63, 7.61);
g.add_edge(29, 66, 6.4);
g.add_edge(30, 64, 8);
g.add_edge(30, 72, 5.38);
g.add_edge(31, 43, 3.16);
g.add_edge(32, 74, 2.23);
g.add_edge(33, 70, 4.47);
g.add_edge(34, 45, 9.43);
g.add_edge(34, 68, 3.16);
g.add_edge(35, 57, 2);
g.add_edge(35, 76, 7.21);
g.add_edge(36, 43, 5.38);
g.add_edge(36, 64, 8.6);
g.add_edge(37, 68, 3.6);
g.add_edge(38, 40, 7);
g.add_edge(38, 45, 2.82);
g.add_edge(39, 65, 2);
g.add_edge(40, 63, 7.07);
g.add_edge(41, 69, 9.89);
g.add_edge(42, 47, 8.24);
g.add_edge(42, 79, 2);
g.add_edge(43, 44, 6.32);
g.add_edge(43, 51, 4.12);
g.add_edge(44, 57, 5.09);
g.add_edge(45, 46, 8);
g.add_edge(46, 69, 12.04);
g.add_edge(48, 56, 8.6);
g.add_edge(48, 59, 5.38);
g.add_edge(49, 60, 3.6);
g.add_edge(49, 72, 4.24);
g.add_edge(50, 70, 1);
g.add_edge(50, 71, 2.23);
g.add_edge(51, 54, 2.23);
g.add_edge(51, 68, 4.12);
g.add_edge(52, 54, 5);
g.add_edge(52, 61, 4.47);
g.add_edge(52, 73, 6.4);
g.add_edge(53, 79, 6.08);
g.add_edge(55, 72, 2.82);
g.add_edge(55, 78, 5.09);
g.add_edge(58, 75, 10);
g.add_edge(59, 65, 4.24);
g.add_edge(60, 78, 4.12);
g.add_edge(62, 74, 1);
g.add_edge(62, 76, 3);
g.add_edge(67, 77, 7.07);
g.add_edge(72, 74, 5.83);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 5.96);
g.set_importance(6, 8.18);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 4.07);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 4.65);
g.set_importance(15, 0);
g.set_importance(16, 3.01);
g.set_importance(17, 0);
g.set_importance(18, 2.28);
g.set_importance(19, 0);
g.set_importance(20, 8.43);
g.set_importance(21, 8.55);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 2.61);
g.set_importance(27, 3.78);
g.set_importance(28, 7.64);
g.set_importance(29, 0);
g.set_importance(30, 0);
g.set_importance(31, 2.72);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 6.12);
g.set_importance(36, 3.54);
g.set_importance(37, 0);
g.set_importance(38, 6.52);
g.set_importance(39, 0);
g.set_importance(40, 8.88);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 2.89);
g.set_importance(45, 0);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 3.56);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 6.92);
g.set_importance(56, 8.1);
g.set_importance(57, 0);
g.set_importance(58, 2.86);
g.set_importance(59, 4.79);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 7.91);
g.set_importance(63, 0);
g.set_importance(64, 0);
g.set_importance(65, 0);
g.set_importance(66, 5.14);
g.set_importance(67, 4.05);
g.set_importance(68, 1.95);
g.set_importance(69, 5.68);
g.set_importance(70, 0);
g.set_importance(71, 0);
g.set_importance(72, 4.14);
g.set_importance(73, 0);
g.set_importance(74, 1.25);
g.set_importance(75, 6.43);
g.set_importance(76, 0);
g.set_importance(77, 0);
g.set_importance(78, 6.48);
g.set_importance(79, 5.18);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 28), 2.36);
g.set_repair_time(Line(0, 62), 2.07);
g.set_repair_time(Line(1, 21), 3.93);
g.set_repair_time(Line(1, 66), 1.6);
g.set_repair_time(Line(2, 35), 4.94);
g.set_repair_time(Line(3, 4), 3.48);
g.set_repair_time(Line(3, 41), 1.26);
g.set_repair_time(Line(3, 43), 1.51);
g.set_repair_time(Line(3, 75), 4.03);
g.set_repair_time(Line(4, 8), 4.83);
g.set_repair_time(Line(5, 6), 1.13);
g.set_repair_time(Line(6, 64), 3.16);
g.set_repair_time(Line(7, 53), 1.8);
g.set_repair_time(Line(7, 60), 1.52);
g.set_repair_time(Line(7, 79), 3.51);
g.set_repair_time(Line(8, 65), 3);
g.set_repair_time(Line(8, 78), 2.29);
g.set_repair_time(Line(10, 61), 4.14);
g.set_repair_time(Line(10, 71), 2.7);
g.set_repair_time(Line(11, 36), 1.92);
g.set_repair_time(Line(12, 13), 4.12);
g.set_repair_time(Line(12, 53), 4.79);
g.set_repair_time(Line(13, 56), 4.57);
g.set_repair_time(Line(14, 24), 4.91);
g.set_repair_time(Line(14, 31), 3.85);
g.set_repair_time(Line(14, 76), 2.43);
g.set_repair_time(Line(16, 36), 2.81);
g.set_repair_time(Line(17, 38), 3.09);
g.set_repair_time(Line(18, 32), 3.51);
g.set_repair_time(Line(19, 75), 2.72);
g.set_repair_time(Line(20, 55), 1.15);
g.set_repair_time(Line(20, 67), 3.01);
g.set_repair_time(Line(22, 66), 2.89);
g.set_repair_time(Line(23, 34), 2.13);
g.set_repair_time(Line(23, 73), 4.84);
g.set_repair_time(Line(24, 37), 2.12);
g.set_repair_time(Line(24, 67), 4.25);
g.set_repair_time(Line(27, 39), 1.22);
g.set_repair_time(Line(28, 61), 2.38);
g.set_repair_time(Line(30, 64), 2.17);
g.set_repair_time(Line(31, 43), 3.78);
g.set_repair_time(Line(34, 45), 3.89);
g.set_repair_time(Line(35, 76), 2.22);
g.set_repair_time(Line(36, 43), 2.15);
g.set_repair_time(Line(37, 68), 3.98);
g.set_repair_time(Line(38, 45), 1.3);
g.set_repair_time(Line(40, 63), 1.31);
g.set_repair_time(Line(42, 47), 4.96);
g.set_repair_time(Line(43, 51), 2.3);
g.set_repair_time(Line(49, 60), 1.66);
g.set_repair_time(Line(50, 70), 1.93);
g.set_repair_time(Line(50, 71), 3.83);
g.set_repair_time(Line(51, 54), 1);
g.set_repair_time(Line(51, 68), 4.08);
g.set_repair_time(Line(52, 54), 4.58);
g.set_repair_time(Line(53, 79), 2.11);
g.set_repair_time(Line(55, 78), 4.87);
g.set_repair_time(Line(59, 65), 3.77);
g.set_repair_time(Line(62, 76), 4.57);
g.set_repair_time(Line(72, 74), 1.31);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 29.5125}, {2, 22.1625}, {3, 11.525}, {4, 16.025}, {5, 16.8}, {6, 24.2}, {7, 19.05}, {8, 20.375}, {9, 26.6625}, {10, 20.2125}, {11, 31.0125}, {12, 26.725}, {13, 20}, {14, 19.5125}, {15, 26.95}, {16, 24.4}, {17, 41.9}, {18, 15.5}, {19, 21.9125}, {20, 26.2125}, {21, 21.5125}, {22, 31.625}, {23, 21.5125}, {24, 23.4625}, {25, 21.8}, {26, 28.25}, {27, 34.2375}, {28, 6.725}, {29, 24.3}, {30, 21.5125}, {31, 19.8625}, {32, 10.2875}, {33, 31.3875}, {34, 19.8625}, {35, 19.0125}, {36, 22.6375}, {37, 20.4125}, {38, 35.175}, {39, 24.125}, {40, 28.6375}, {41, 1.7625}, {42, 18.675}, {43, 15.9125}, {44, 21.8}, {45, 31.65}, {46, 29.175}, {47, 8.375}, {48, 33.65}, {49, 20.0875}, {50, 24.55}, {51, 10.7625}, {52, 14.225}, {53, 24.05}, {54, 7.975}, {55, 18.3125}, {56, 26.25}, {57, 21.5125}, {58, 30.1625}, {59, 26.925}, {60, 24.5875}, {61, 12.3125}, {62, 6.25}, {63, 30.6125}, {64, 28.15}, {65, 21.625}, {66, 32.3}, {67, 27.4625}, {68, 15.9125}, {69, 14.125}, {70, 25.8}, {71, 21.7625}, {72, 14.7875}, {73, 22.225}, {74, 7.5}, {75, 19.125}, {76, 10}, {77, 36.3}, {78, 24.675}, {79, 21.175}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 29.5125}, {1, 0}, {2, 27.0375}, {3, 34.625}, {4, 33.925}, {5, 25.2625}, {6, 27.1125}, {7, 21.9625}, {8, 29.0125}, {9, 31.225}, {10, 28.775}, {11, 40.5625}, {12, 25.6875}, {13, 32.4125}, {14, 39.7875}, {15, 35.4125}, {16, 36.8625}, {17, 50.8625}, {18, 36.9125}, {19, 42.8375}, {20, 36.325}, {21, 8}, {22, 17.7625}, {23, 22.575}, {24, 42.35}, {25, 20.2625}, {26, 21.7125}, {27, 42.7}, {28, 22.7875}, {29, 17.7625}, {30, 41.0625}, {31, 33.425}, {32, 39.8}, {33, 41.1875}, {34, 28.825}, {35, 33.2875}, {36, 36.2}, {37, 33.975}, {38, 44.1375}, {39, 32.7625}, {40, 36.1125}, {41, 31.275}, {42, 16.0875}, {43, 29.475}, {44, 30.2625}, {45, 40.6125}, {46, 50.3125}, {47, 26.3875}, {48, 42.2875}, {49, 32.7125}, {50, 34.35}, {51, 24.325}, {52, 15.2875}, {53, 21.1875}, {54, 21.5375}, {55, 39.725}, {56, 32.3875}, {57, 35.7875}, {58, 40.275}, {59, 35.5625}, {60, 28.2125}, {61, 20.875}, {62, 35.7625}, {63, 27.275}, {64, 31.0625}, {65, 30.2625}, {66, 9.7625}, {67, 37.575}, {68, 29.475}, {69, 35.2625}, {70, 35.6}, {71, 31.5625}, {72, 38.0125}, {73, 23.2875}, {74, 37.0125}, {75, 42.225}, {76, 39.5125}, {77, 46.4125}, {78, 33.3625}, {79, 13.5875}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 22.1625}, {1, 27.0375}, {2, 0}, {3, 20.125}, {4, 15.625}, {5, 20.1125}, {6, 28.1125}, {7, 26.375}, {8, 10.475}, {9, 17}, {10, 20.775}, {11, 22.025}, {12, 32.05}, {13, 25.325}, {14, 23.075}, {15, 20.2625}, {16, 25.0375}, {17, 32.2375}, {18, 28.2625}, {19, 30.5125}, {20, 17.7}, {21, 19.0375}, {22, 21.725}, {23, 6.5375}, {24, 19.125}, {25, 25.1125}, {26, 31.5625}, {27, 26.0125}, {28, 15.4375}, {29, 27.6125}, {30, 31.5875}, {31, 20.5}, {32, 23.05}, {33, 33.1875}, {34, 10.2}, {35, 6.25}, {36, 23.275}, {37, 10.75}, {38, 25.5125}, {39, 14.225}, {40, 29.7875}, {41, 23.925}, {42, 27.125}, {43, 16.55}, {44, 15.1125}, {45, 21.9875}, {46, 31.775}, {47, 30.5375}, {48, 23.75}, {49, 24.625}, {50, 26.35}, {51, 11.4}, {52, 11.75}, {53, 31.375}, {54, 14.1875}, {55, 21.3375}, {56, 31.575}, {57, 8.75}, {58, 21.65}, {59, 17.025}, {60, 20.125}, {61, 17.3375}, {62, 19.0125}, {63, 20.95}, {64, 32.0625}, {65, 11.725}, {66, 29.725}, {67, 18.95}, {68, 6.25}, {69, 16.725}, {70, 27.6}, {71, 23.5625}, {72, 24.8625}, {73, 3.75}, {74, 20.2625}, {75, 27.725}, {76, 15.2625}, {77, 27.7875}, {78, 14.975}, {79, 24.625}, 