node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 12, 13, 14, 15, 18, 21, 24, 25, 26, 27, 29, 31, 33, 34, 35, 39, 41, 43, 46, 47, 49, 52, 53, 56, 60, 67, 69, 70, 73, 75, 76,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 10), Line(0, 11), Line(0, 57), Line(0, 79), Line(1, 6), Line(1, 8), Line(1, 38), Line(2, 5), Line(2, 64), Line(3, 25), Line(3, 36), Line(3, 69), Line(4, 20), Line(4, 55), Line(4, 75), Line(5, 12), Line(6, 71), Line(7, 38), Line(7, 62), Line(8, 27), Line(8, 73), Line(9, 64), Line(9, 76), Line(9, 77), Line(10, 46), Line(10, 55), Line(11, 19), Line(11, 44), Line(12, 24), Line(12, 28), Line(12, 40), Line(13, 18), Line(13, 20), Line(13, 27), Line(13, 58), Line(14, 41), Line(14, 56), Line(15, 60), Line(15, 75), Line(16, 34), Line(16, 36), Line(17, 40), Line(17, 41), Line(18, 60), Line(18, 62), Line(18, 69), Line(19, 24), Line(19, 57), Line(20, 36), Line(20, 77), Line(21, 36), Line(21, 54), Line(21, 63), Line(22, 65), Line(22, 77), Line(23, 51), Line(23, 55), Line(24, 45), Line(25, 34), Line(25, 35), Line(25, 58), Line(26, 48), Line(26, 58), Line(26, 78), Line(27, 41), Line(27, 55), Line(27, 67), Line(27, 70), Line(27, 76), Line(28, 31), Line(28, 39), Line(29, 61), Line(29, 70), Line(30, 43), Line(30, 44), Line(30, 72), Line(30, 74), Line(31, 66), Line(32, 56), Line(32, 59), Line(33, 39), Line(33, 47), Line(33, 71), Line(34, 53), Line(35, 54), Line(37, 66), Line(37, 72), Line(38, 76), Line(38, 77), Line(39, 42), Line(39, 59), Line(39, 60), Line(40, 43), Line(40, 77), Line(41, 52), Line(42, 49), Line(42, 66), Line(42, 68), Line(43, 51), Line(44, 45), Line(46, 48), Line(47, 67), Line(49, 78), Line(50, 53), Line(50, 60), Line(52, 63), Line(52, 75), Line(53, 65), Line(55, 72), Line(55, 79), Line(57, 70), Line(57, 71), Line(58, 70), Line(58, 76), Line(61, 65), Line(62, 74), Line(64, 70), Line(67, 68), Line(68, 73), Line(69, 79),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 11), Line(0, 57), Line(0, 79), Line(1, 8), Line(1, 38), Line(2, 5), Line(2, 64), Line(3, 25), Line(3, 36), Line(3, 69), Line(4, 75), Line(7, 38), Line(8, 73), Line(9, 64), Line(9, 77), Line(10, 55), Line(11, 44), Line(12, 24), Line(12, 40), Line(13, 18), Line(13, 20), Line(13, 58), Line(14, 56), Line(16, 34), Line(17, 40), Line(19, 24), Line(20, 36), Line(20, 77), Line(21, 36), Line(21, 63), Line(23, 55), Line(25, 58), Line(26, 58), Line(26, 78), Line(27, 55), Line(27, 76), Line(28, 31), Line(28, 39), Line(29, 61), Line(29, 70), Line(30, 72), Line(31, 66), Line(32, 59), Line(33, 47), Line(33, 71), Line(35, 54), Line(38, 76), Line(38, 77), Line(39, 42), Line(39, 60), Line(42, 66), Line(44, 45), Line(46, 48), Line(49, 78), Line(55, 79), Line(57, 71), Line(58, 70), Line(67, 68), Line(68, 73), Line(69, 79),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 10, 3);
g.add_edge(0, 11, 1.41);
g.add_edge(0, 57, 7.81);
g.add_edge(0, 79, 7.07);
g.add_edge(1, 6, 3);
g.add_edge(1, 8, 12.04);
g.add_edge(1, 38, 4.47);
g.add_edge(2, 5, 2.82);
g.add_edge(2, 64, 3.6);
g.add_edge(3, 25, 4.47);
g.add_edge(3, 36, 5.38);
g.add_edge(3, 69, 5.09);
g.add_edge(4, 20, 6.32);
g.add_edge(4, 55, 2.23);
g.add_edge(4, 75, 1);
g.add_edge(5, 12, 3.16);
g.add_edge(6, 71, 5.09);
g.add_edge(7, 38, 4);
g.add_edge(7, 62, 4.12);
g.add_edge(8, 27, 7.81);
g.add_edge(8, 73, 4.24);
g.add_edge(9, 64, 8.6);
g.add_edge(9, 76, 7.81);
g.add_edge(9, 77, 5);
g.add_edge(10, 46, 7.28);
g.add_edge(10, 55, 3.16);
g.add_edge(11, 19, 8.54);
g.add_edge(11, 44, 9.89);
g.add_edge(12, 24, 4.47);
g.add_edge(12, 28, 3.6);
g.add_edge(12, 40, 1.41);
g.add_edge(13, 18, 4);
g.add_edge(13, 20, 5.83);
g.add_edge(13, 27, 2.82);
g.add_edge(13, 58, 6.08);
g.add_edge(14, 41, 6.32);
g.add_edge(14, 56, 5.09);
g.add_edge(15, 60, 8.94);
g.add_edge(15, 75, 5);
g.add_edge(16, 34, 7.21);
g.add_edge(16, 36, 1);
g.add_edge(17, 40, 6.7);
g.add_edge(17, 41, 8.06);
g.add_edge(18, 60, 3.16);
g.add_edge(18, 62, 6.4);
g.add_edge(18, 69, 7.28);
g.add_edge(19, 24, 6.4);
g.add_edge(19, 57, 1.41);
g.add_edge(20, 36, 2);
g.add_edge(20, 77, 2.82);
g.add_edge(21, 36, 5.09);
g.add_edge(21, 54, 5.38);
g.add_edge(21, 63, 6.32);
g.add_edge(22, 65, 5);
g.add_edge(22, 77, 3.6);
g.add_edge(23, 51, 4.47);
g.add_edge(23, 55, 5.09);
g.add_edge(24, 45, 2);
g.add_edge(25, 34, 8.24);
g.add_edge(25, 35, 8.06);
g.add_edge(25, 58, 5.09);
g.add_edge(26, 48, 5);
g.add_edge(26, 58, 2.23);
g.add_edge(26, 78, 3);
g.add_edge(27, 41, 4);
g.add_edge(27, 55, 3);
g.add_edge(27, 67, 5.38);
g.add_edge(27, 70, 2.23);
g.add_edge(27, 76, 6.32);
g.add_edge(28, 31, 4.12);
g.add_edge(28, 39, 5.09);
g.add_edge(29, 61, 7.81);
g.add_edge(29, 70, 7.61);
g.add_edge(30, 43, 3.6);
g.add_edge(30, 44, 3.6);
g.add_edge(30, 72, 5.38);
g.add_edge(30, 74, 1);
g.add_edge(31, 66, 9.48);
g.add_edge(32, 56, 3.6);
g.add_edge(32, 59, 5.09);
g.add_edge(33, 39, 5.83);
g.add_edge(33, 47, 5);
g.add_edge(33, 71, 8.6);
g.add_edge(34, 53, 10.81);
g.add_edge(35, 54, 3.6);
g.add_edge(37, 66, 7.28);
g.add_edge(37, 72, 8.06);
g.add_edge(38, 76, 5.65);
g.add_edge(38, 77, 3.16);
g.add_edge(39, 42, 9.48);
g.add_edge(39, 59, 4.47);
g.add_edge(39, 60, 5);
g.add_edge(40, 43, 3.16);
g.add_edge(40, 77, 7.21);
g.add_edge(41, 52, 4.24);
g.add_edge(42, 49, 8);
g.add_edge(42, 66, 10.81);
g.add_edge(42, 68, 5);
g.add_edge(43, 51, 3.6);
g.add_edge(44, 45, 8.24);
g.add_edge(46, 48, 6.7);
g.add_edge(47, 67, 7.28);
g.add_edge(49, 78, 6);
g.add_edge(50, 53, 1);
g.add_edge(50, 60, 10.81);
g.add_edge(52, 63, 5.83);
g.add_edge(52, 75, 1);
g.add_edge(53, 65, 5.65);
g.add_edge(55, 72, 9.21);
g.add_edge(55, 79, 1);
g.add_edge(57, 70, 2.82);
g.add_edge(57, 71, 6.32);
g.add_edge(58, 70, 7.07);
g.add_edge(58, 76, 6.7);
g.add_edge(61, 65, 3.16);
g.add_edge(62, 74, 2.23);
g.add_edge(64, 70, 9.05);
g.add_edge(67, 68, 3.6);
g.add_edge(68, 73, 6.08);
g.add_edge(69, 79, 6.7);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 2.94);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 5.75);
g.set_importance(13, 5.74);
g.set_importance(14, 5.34);
g.set_importance(15, 4.52);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 8.72);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 7.42);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 9.08);
g.set_importance(25, 4.95);
g.set_importance(26, 8.97);
g.set_importance(27, 8.11);
g.set_importance(28, 0);
g.set_importance(29, 7.64);
g.set_importance(30, 0);
g.set_importance(31, 1.68);
g.set_importance(32, 0);
g.set_importance(33, 3.02);
g.set_importance(34, 2.62);
g.set_importance(35, 1);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 7.14);
g.set_importance(40, 0);
g.set_importance(41, 3.2);
g.set_importance(42, 0);
g.set_importance(43, 1.23);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 6.5);
g.set_importance(47, 2.51);
g.set_importance(48, 0);
g.set_importance(49, 6.43);
g.set_importance(50, 0);
g.set_importance(51, 0);
g.set_importance(52, 2.66);
g.set_importance(53, 7.68);
g.set_importance(54, 0);
g.set_importance(55, 0);
g.set_importance(56, 8.53);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 0);
g.set_importance(60, 4.67);
g.set_importance(61, 0);
g.set_importance(62, 0);
g.set_importance(63, 0);
g.set_importance(64, 0);
g.set_importance(65, 0);
g.set_importance(66, 0);
g.set_importance(67, 3.12);
g.set_importance(68, 0);
g.set_importance(69, 7.74);
g.set_importance(70, 7.37);
g.set_importance(71, 0);
g.set_importance(72, 0);
g.set_importance(73, 7.09);
g.set_importance(74, 0);
g.set_importance(75, 5.5);
g.set_importance(76, 5.65);
g.set_importance(77, 0);
g.set_importance(78, 0);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 11), 1.32);
g.set_repair_time(Line(0, 57), 2.66);
g.set_repair_time(Line(0, 79), 3.88);
g.set_repair_time(Line(1, 8), 4.96);
g.set_repair_time(Line(1, 38), 1.35);
g.set_repair_time(Line(2, 5), 4.54);
g.set_repair_time(Line(2, 64), 3.99);
g.set_repair_time(Line(3, 25), 2.4);
g.set_repair_time(Line(3, 36), 4.61);
g.set_repair_time(Line(3, 69), 4.6);
g.set_repair_time(Line(4, 75), 3.43);
g.set_repair_time(Line(7, 38), 1.49);
g.set_repair_time(Line(8, 73), 1.29);
g.set_repair_time(Line(9, 64), 4.14);
g.set_repair_time(Line(9, 77), 2.74);
g.set_repair_time(Line(10, 55), 2.61);
g.set_repair_time(Line(11, 44), 1.53);
g.set_repair_time(Line(12, 24), 1.1);
g.set_repair_time(Line(12, 40), 2.04);
g.set_repair_time(Line(13, 18), 2.14);
g.set_repair_time(Line(13, 20), 1.16);
g.set_repair_time(Line(13, 58), 3.51);
g.set_repair_time(Line(14, 56), 2.91);
g.set_repair_time(Line(16, 34), 4.09);
g.set_repair_time(Line(17, 40), 1.05);
g.set_repair_time(Line(19, 24), 2.17);
g.set_repair_time(Line(20, 36), 3.65);
g.set_repair_time(Line(20, 77), 1.62);
g.set_repair_time(Line(21, 36), 3.48);
g.set_repair_time(Line(21, 63), 4.01);
g.set_repair_time(Line(23, 55), 3.58);
g.set_repair_time(Line(25, 58), 3.42);
g.set_repair_time(Line(26, 58), 1.28);
g.set_repair_time(Line(26, 78), 3.2);
g.set_repair_time(Line(27, 55), 2.88);
g.set_repair_time(Line(27, 76), 1.84);
g.set_repair_time(Line(28, 31), 2.42);
g.set_repair_time(Line(28, 39), 4.84);
g.set_repair_time(Line(29, 61), 3.31);
g.set_repair_time(Line(29, 70), 4.22);
g.set_repair_time(Line(30, 72), 3.67);
g.set_repair_time(Line(31, 66), 2.28);
g.set_repair_time(Line(32, 59), 3.44);
g.set_repair_time(Line(33, 47), 3.84);
g.set_repair_time(Line(33, 71), 2.59);
g.set_repair_time(Line(35, 54), 4.96);
g.set_repair_time(Line(38, 76), 2.87);
g.set_repair_time(Line(38, 77), 3.23);
g.set_repair_time(Line(39, 42), 2.05);
g.set_repair_time(Line(39, 60), 3.79);
g.set_repair_time(Line(42, 66), 2.46);
g.set_repair_time(Line(44, 45), 1.39);
g.set_repair_time(Line(46, 48), 4.53);
g.set_repair_time(Line(49, 78), 1.14);
g.set_repair_time(Line(55, 79), 2.2);
g.set_repair_time(Line(57, 71), 2.26);
g.set_repair_time(Line(58, 70), 4.21);
g.set_repair_time(Line(67, 68), 3.01);
g.set_repair_time(Line(68, 73), 3.5);
g.set_repair_time(Line(69, 79), 2);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 27.775}, {2, 29.1}, {3, 23.575}, {4, 10.4875}, {5, 29.0625}, {6, 24.025}, {7, 27.8125}, {8, 21.2125}, {9, 28.1625}, {10, 3.75}, {11, 1.7625}, {12, 25.1125}, {13, 14.975}, {14, 24.35}, {15, 17.9875}, {16, 22.1375}, {17, 26.525}, {18, 19.975}, {19, 11.525}, {20, 18.3875}, {21, 27.25}, {22, 26.4125}, {23, 14.0625}, {24, 19.525}, {25, 28.4875}, {26, 24.9125}, {27, 11.45}, {28, 29.6125}, {29, 22.8}, {30, 18.625}, {31, 34.7625}, {32, 35.2125}, {33, 28.4125}, {34, 31.15}, {35, 38.475}, {36, 20.8875}, {37, 29.2875}, {38, 25.8625}, {39, 30.175}, {40, 26.875}, {41, 16.45}, {42, 28.925}, {43, 23.125}, {44, 14.125}, {45, 22.025}, {46, 12.85}, {47, 27.275}, {48, 21.225}, {49, 36.1625}, {50, 37.4375}, {51, 19.65}, {52, 12.9875}, {53, 38.6875}, {54, 33.975}, {55, 7.7}, {56, 30.7125}, {57, 9.7625}, {58, 22.125}, {59, 35.7625}, {60, 23.925}, {61, 32.5625}, {62, 22.6625}, {63, 20.275}, {64, 24.6}, {65, 32.6625}, {66, 38.3875}, {67, 18.175}, {68, 22.675}, {69, 17.2125}, {70, 13.2875}, {71, 17.6625}, {72, 19.2125}, {73, 26.5125}, {74, 19.875}, {75, 11.7375}, {76, 19.35}, {77, 21.9125}, {78, 28.6625}, {79, 8.8375}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 27.775}, {1, 0}, {2, 27.7875}, {3, 22.2875}, {4, 20.9625}, {5, 24.2625}, {6, 3.75}, {7, 10.5875}, {8, 15.05}, {9, 15.7875}, {10, 27.7}, {11, 29.5375}, {12, 20.3125}, {13, 20.35}, {14, 33.45}, {15, 28.4625}, {16, 16.8125}, {17, 26.925}, {18, 23.7375}, {19, 19.775}, {20, 13.0625}, {21, 21.925}, {22, 14.0375}, {23, 30.1125}, {24, 25.9}, {25, 27.3875}, {26, 23.8125}, {27, 20.55}, {28, 24.8125}, {29, 31.05}, {30, 19.775}, {31, 29.9625}, {32, 40.1}, {33, 20.8625}, {34, 25.825}, {35, 33.15}, {36, 15.5625}, {37, 36.575}, {38, 5.5875}, {39, 28.15}, {40, 18.55}, {41, 25.55}, {42, 34.2}, {43, 22.5}, {44, 24.275}, {45, 28.4}, {46, 36.8}, {47, 27.1125}, {48, 30.0625}, {49, 35.0625}, {50, 28.6}, {51, 27}, {52, 23.4625}, {53, 27.35}, {54, 28.65}, {55, 23.75}, {56, 39.8125}, {57, 18.0125}, {58, 21.025}, {59, 33.7375}, {60, 27.6875}, {61, 24.2375}, {62, 15.7375}, {63, 29.825}, {64, 26.5375}, {65, 20.2875}, {66, 41.8125}, {67, 27.275}, {68, 27.95}, {69, 28.65}, {70, 21.5375}, {71, 10.1125}, {72, 26.5}, {73, 20.35}, {74, 18.525}, {75, 22.2125}, {76, 12.65}, {77, 9.5375}, {78, 27.5625}, {79, 25}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 29.1}, {1, 27.7875}, {2, 0}, {3, 31}, {4, 25.1375}, {5, 3.525}, {6, 31.5375}, {7, 26.875}, {8, 28.3625}, {9, 15.25}, {10, 26.3}, {11, 30.8625}, {12, 7.475}, {13, 22.125}, {14, 31.5}, {15, 32.6375}, {16, 25.525}, {17, 17.6125}, {18, 27.125}, {19, 21.0625}, {20, 21.775}, {21, 30.6375}, {22, 22.75}, {23, 23.275}, {24, 13.0625}, {25, 31.0125}, {26, 27.4375}, {27, 18.6}, {28, 11.975}, {29, 25.325}, {30, 17.6875}, {31, 17.125}, {32, 30.2875}, {33, 25.625}, {34, 34.5375}, {35, 41.0875}, {36, 24.275}, {37, 34.4875}, {38, 22.2}, {39, 18.3375}, {40, 9.2375}, {41, 23.6}, {42, 30.1875}, {43, 13.1875}, {44, 22.1875}, {45, 15.5625}, {46, 35.4}, {47, 31.875}, {48, 33.6875}, {49, 38.6875}, {50, 37.3125}, {51, 17.6875}, {52, 27.6375}, {53, 36.0625}, {54, 37.3625}, {55, 22.35}, {56, 34.7875}, {57, 19.3375}, {58, 24.65}, {59, 23.925}, {60, 24.5875}, {61, 32.95}, {62, 21.725}, {63, 34.925}, {64, 4.5}, {65, 29}, {66, 28.975}, {67, 25.325}, {68, 29.825}, {69, 31.975}, {70, 15.8125}, {71, 27.2375}, {72, 24.4125}, {73, 33.6625}, {74, 18.9375}, {75, 26.3875}, {76, 25.0125}, {77, 18.25}, {78, 31.1875}, {79, 23.6}, 