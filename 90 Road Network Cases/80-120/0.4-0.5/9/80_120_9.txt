node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 10, 12, 13, 14, 16, 17, 18, 24, 25, 26, 30, 31, 35, 36, 37, 38, 41, 43, 46, 49, 50, 53, 54, 55, 56, 57, 60, 61, 65, 67, 68, 77,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 17), Line(0, 27), Line(0, 37), Line(1, 2), Line(1, 3), Line(1, 11), Line(1, 16), Line(1, 46), Line(2, 14), Line(2, 25), Line(2, 45), Line(3, 48), Line(4, 12), Line(4, 15), Line(4, 65), Line(5, 23), Line(5, 32), Line(6, 13), Line(6, 72), Line(7, 32), Line(7, 74), Line(7, 79), Line(8, 32), Line(8, 40), Line(8, 65), Line(9, 51), Line(9, 67), Line(10, 15), Line(10, 38), Line(10, 56), Line(11, 59), Line(11, 71), Line(12, 58), Line(13, 75), Line(14, 29), Line(14, 38), Line(15, 62), Line(16, 58), Line(16, 63), Line(17, 66), Line(18, 29), Line(18, 31), Line(18, 44), Line(19, 70), Line(19, 79), Line(20, 29), Line(20, 54), Line(20, 64), Line(20, 74), Line(21, 43), Line(21, 56), Line(22, 40), Line(22, 77), Line(23, 36), Line(24, 65), Line(24, 69), Line(24, 79), Line(25, 43), Line(25, 50), Line(25, 61), Line(25, 75), Line(26, 37), Line(26, 54), Line(27, 50), Line(28, 53), Line(28, 73), Line(30, 51), Line(30, 53), Line(31, 54), Line(31, 57), Line(31, 72), Line(33, 36), Line(33, 49), Line(33, 63), Line(33, 68), Line(33, 75), Line(34, 49), Line(34, 56), Line(34, 76), Line(35, 68), Line(35, 71), Line(38, 47), Line(39, 44), Line(39, 47), Line(39, 70), Line(40, 72), Line(41, 45), Line(41, 46), Line(41, 52), Line(42, 52), Line(42, 64), Line(42, 69), Line(42, 70), Line(42, 75), Line(43, 50), Line(43, 57), Line(43, 72), Line(44, 49), Line(47, 55), Line(48, 64), Line(48, 66), Line(48, 78), Line(50, 51), Line(52, 60), Line(52, 62), Line(52, 65), Line(53, 75), Line(53, 77), Line(54, 71), Line(55, 73), Line(56, 74), Line(58, 78), Line(59, 60), Line(61, 68), Line(62, 67), Line(63, 76), Line(63, 79), Line(64, 69), Line(64, 77), Line(66, 72),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(1, 3), Line(1, 11), Line(1, 16), Line(2, 25), Line(4, 12), Line(4, 65), Line(5, 32), Line(6, 13), Line(7, 74), Line(10, 15), Line(10, 38), Line(10, 56), Line(11, 59), Line(12, 58), Line(13, 75), Line(14, 29), Line(16, 58), Line(16, 63), Line(17, 66), Line(19, 70), Line(20, 29), Line(20, 64), Line(20, 74), Line(21, 56), Line(23, 36), Line(24, 69), Line(24, 79), Line(25, 43), Line(25, 50), Line(26, 54), Line(30, 51), Line(31, 54), Line(31, 72), Line(33, 68), Line(33, 75), Line(34, 76), Line(35, 68), Line(35, 71), Line(38, 47), Line(39, 47), Line(40, 72), Line(41, 46), Line(42, 52), Line(42, 70), Line(43, 57), Line(43, 72), Line(44, 49), Line(47, 55), Line(48, 64), Line(48, 78), Line(50, 51), Line(52, 62), Line(52, 65), Line(53, 75), Line(53, 77), Line(56, 74), Line(59, 60), Line(62, 67), Line(63, 76), Line(64, 77),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 17, 1.41);
g.add_edge(0, 27, 7.21);
g.add_edge(0, 37, 8.94);
g.add_edge(1, 2, 6.32);
g.add_edge(1, 3, 2);
g.add_edge(1, 11, 4.47);
g.add_edge(1, 16, 6.32);
g.add_edge(1, 46, 4.12);
g.add_edge(2, 14, 3.16);
g.add_edge(2, 25, 6.32);
g.add_edge(2, 45, 3.6);
g.add_edge(3, 48, 9.43);
g.add_edge(4, 12, 2.23);
g.add_edge(4, 15, 9.43);
g.add_edge(4, 65, 5);
g.add_edge(5, 23, 8.6);
g.add_edge(5, 32, 5.09);
g.add_edge(6, 13, 6.08);
g.add_edge(6, 72, 7.28);
g.add_edge(7, 32, 3.16);
g.add_edge(7, 74, 3.16);
g.add_edge(7, 79, 7.07);
g.add_edge(8, 32, 7.07);
g.add_edge(8, 40, 1.41);
g.add_edge(8, 65, 6.08);
g.add_edge(9, 51, 3);
g.add_edge(9, 67, 7.07);
g.add_edge(10, 15, 7.28);
g.add_edge(10, 38, 5);
g.add_edge(10, 56, 6.7);
g.add_edge(11, 59, 2.82);
g.add_edge(11, 71, 5.09);
g.add_edge(12, 58, 5.38);
g.add_edge(13, 75, 8.06);
g.add_edge(14, 29, 5.83);
g.add_edge(14, 38, 7.07);
g.add_edge(15, 62, 6.7);
g.add_edge(16, 58, 6.08);
g.add_edge(16, 63, 7.21);
g.add_edge(17, 66, 8.94);
g.add_edge(18, 29, 5);
g.add_edge(18, 31, 2.23);
g.add_edge(18, 44, 2.23);
g.add_edge(19, 70, 5.83);
g.add_edge(19, 79, 5);
g.add_edge(20, 29, 4.12);
g.add_edge(20, 54, 6.7);
g.add_edge(20, 64, 4.12);
g.add_edge(20, 74, 2);
g.add_edge(21, 43, 10.29);
g.add_edge(21, 56, 7.07);
g.add_edge(22, 40, 4.12);
g.add_edge(22, 77, 7.81);
g.add_edge(23, 36, 5.83);
g.add_edge(24, 65, 7.28);
g.add_edge(24, 69, 1.41);
g.add_edge(24, 79, 4.24);
g.add_edge(25, 43, 7.07);
g.add_edge(25, 50, 5.38);
g.add_edge(25, 61, 3.16);
g.add_edge(25, 75, 9.89);
g.add_edge(26, 37, 2.23);
g.add_edge(26, 54, 7.07);
g.add_edge(27, 50, 5.65);
g.add_edge(28, 53, 10.81);
g.add_edge(28, 73, 5.38);
g.add_edge(30, 51, 8.48);
g.add_edge(30, 53, 6.08);
g.add_edge(31, 54, 3.16);
g.add_edge(31, 57, 2.23);
g.add_edge(31, 72, 6.4);
g.add_edge(33, 36, 9.21);
g.add_edge(33, 49, 5.38);
g.add_edge(33, 63, 8.48);
g.add_edge(33, 68, 4.47);
g.add_edge(33, 75, 11.4);
g.add_edge(34, 49, 8.06);
g.add_edge(34, 56, 4);
g.add_edge(34, 76, 5);
g.add_edge(35, 68, 2.23);
g.add_edge(35, 71, 6.08);
g.add_edge(38, 47, 2.82);
g.add_edge(39, 44, 1.41);
g.add_edge(39, 47, 2.82);
g.add_edge(39, 70, 10);
g.add_edge(40, 72, 7.07);
g.add_edge(41, 45, 2.23);
g.add_edge(41, 46, 3.6);
g.add_edge(41, 52, 2.23);
g.add_edge(42, 52, 7.81);
g.add_edge(42, 64, 5.65);
g.add_edge(42, 69, 1);
g.add_edge(42, 70, 1.41);
g.add_edge(42, 75, 8.24);
g.add_edge(43, 50, 2.23);
g.add_edge(43, 57, 3);
g.add_edge(43, 72, 3);
g.add_edge(44, 49, 7.81);
g.add_edge(47, 55, 4);
g.add_edge(48, 64, 6.4);
g.add_edge(48, 66, 11.4);
g.add_edge(48, 78, 8);
g.add_edge(50, 51, 8.06);
g.add_edge(52, 60, 4.24);
g.add_edge(52, 62, 5.83);
g.add_edge(52, 65, 1);
g.add_edge(53, 75, 9.21);
g.add_edge(53, 77, 2.82);
g.add_edge(54, 71, 4.47);
g.add_edge(55, 73, 2.23);
g.add_edge(56, 74, 8.54);
g.add_edge(58, 78, 4.47);
g.add_edge(59, 60, 2.23);
g.add_edge(61, 68, 5.83);
g.add_edge(62, 67, 5.09);
g.add_edge(63, 76, 8.06);
g.add_edge(63, 79, 3);
g.add_edge(64, 69, 5);
g.add_edge(64, 77, 4.12);
g.add_edge(66, 72, 12.72);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 7.03);
g.set_importance(11, 0);
g.set_importance(12, 6.48);
g.set_importance(13, 4.22);
g.set_importance(14, 8.91);
g.set_importance(15, 0);
g.set_importance(16, 8.62);
g.set_importance(17, 8.69);
g.set_importance(18, 3.19);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 8.97);
g.set_importance(25, 3.41);
g.set_importance(26, 5.9);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 1.68);
g.set_importance(31, 8.58);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 8.45);
g.set_importance(36, 9.17);
g.set_importance(37, 6.95);
g.set_importance(38, 7.34);
g.set_importance(39, 0);
g.set_importance(40, 0);
g.set_importance(41, 7.02);
g.set_importance(42, 0);
g.set_importance(43, 7.78);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 4.47);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 5.08);
g.set_importance(50, 4.65);
g.set_importance(51, 0);
g.set_importance(52, 0);
g.set_importance(53, 9.93);
g.set_importance(54, 2.66);
g.set_importance(55, 7.99);
g.set_importance(56, 6.45);
g.set_importance(57, 1.4);
g.set_importance(58, 0);
g.set_importance(59, 0);
g.set_importance(60, 7.76);
g.set_importance(61, 9.49);
g.set_importance(62, 0);
g.set_importance(63, 0);
g.set_importance(64, 0);
g.set_importance(65, 8.96);
g.set_importance(66, 0);
g.set_importance(67, 8.74);
g.set_importance(68, 8);
g.set_importance(69, 0);
g.set_importance(70, 0);
g.set_importance(71, 0);
g.set_importance(72, 0);
g.set_importance(73, 0);
g.set_importance(74, 0);
g.set_importance(75, 0);
g.set_importance(76, 0);
g.set_importance(77, 8.09);
g.set_importance(78, 0);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(1, 3), 4.02);
g.set_repair_time(Line(1, 11), 1.3);
g.set_repair_time(Line(1, 16), 3.15);
g.set_repair_time(Line(2, 25), 3.34);
g.set_repair_time(Line(4, 12), 1.21);
g.set_repair_time(Line(4, 65), 4.49);
g.set_repair_time(Line(5, 32), 2.38);
g.set_repair_time(Line(6, 13), 1.91);
g.set_repair_time(Line(7, 74), 3.99);
g.set_repair_time(Line(10, 15), 2.81);
g.set_repair_time(Line(10, 38), 2.97);
g.set_repair_time(Line(10, 56), 2.07);
g.set_repair_time(Line(11, 59), 4.29);
g.set_repair_time(Line(12, 58), 4.67);
g.set_repair_time(Line(13, 75), 4.64);
g.set_repair_time(Line(14, 29), 2.5);
g.set_repair_time(Line(16, 58), 4.98);
g.set_repair_time(Line(16, 63), 4.16);
g.set_repair_time(Line(17, 66), 3.35);
g.set_repair_time(Line(19, 70), 4.78);
g.set_repair_time(Line(20, 29), 4.87);
g.set_repair_time(Line(20, 64), 2.03);
g.set_repair_time(Line(20, 74), 2.82);
g.set_repair_time(Line(21, 56), 4.07);
g.set_repair_time(Line(23, 36), 3.46);
g.set_repair_time(Line(24, 69), 4.92);
g.set_repair_time(Line(24, 79), 2.23);
g.set_repair_time(Line(25, 43), 3.24);
g.set_repair_time(Line(25, 50), 3.16);
g.set_repair_time(Line(26, 54), 1.61);
g.set_repair_time(Line(30, 51), 4.49);
g.set_repair_time(Line(31, 54), 2.14);
g.set_repair_time(Line(31, 72), 4.76);
g.set_repair_time(Line(33, 68), 3.39);
g.set_repair_time(Line(33, 75), 3.75);
g.set_repair_time(Line(34, 76), 3.26);
g.set_repair_time(Line(35, 68), 3.55);
g.set_repair_time(Line(35, 71), 2.61);
g.set_repair_time(Line(38, 47), 1.66);
g.set_repair_time(Line(39, 47), 1.88);
g.set_repair_time(Line(40, 72), 3.32);
g.set_repair_time(Line(41, 46), 3.19);
g.set_repair_time(Line(42, 52), 4.79);
g.set_repair_time(Line(42, 70), 3.28);
g.set_repair_time(Line(43, 57), 4.51);
g.set_repair_time(Line(43, 72), 4.07);
g.set_repair_time(Line(44, 49), 1.25);
g.set_repair_time(Line(47, 55), 1.34);
g.set_repair_time(Line(48, 64), 2.52);
g.set_repair_time(Line(48, 78), 3.91);
g.set_repair_time(Line(50, 51), 2.33);
g.set_repair_time(Line(52, 62), 1.95);
g.set_repair_time(Line(52, 65), 1.94);
g.set_repair_time(Line(53, 75), 4.87);
g.set_repair_time(Line(53, 77), 4.37);
g.set_repair_time(Line(56, 74), 4.48);
g.set_repair_time(Line(59, 60), 1.68);
g.set_repair_time(Line(62, 67), 1.31);
g.set_repair_time(Line(63, 76), 1.02);
g.set_repair_time(Line(64, 77), 2.73);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 38.6}, {2, 30.7}, {3, 38.975}, {4, 47.0625}, {5, 47.9375}, {6, 31.7125}, {7, 37.625}, {8, 33.2125}, {9, 29.9}, {10, 46.0375}, {11, 34.75}, {12, 49.5}, {13, 39.3125}, {14, 34.65}, {15, 53.475}, {16, 46.5}, {17, 1.7625}, {18, 28.1875}, {19, 51.3}, {20, 31.175}, {21, 31.725}, {22, 36.6}, {23, 58.425}, {24, 43.2}, {25, 22.8}, {26, 13.9625}, {27, 9.0125}, {28, 50.775}, {29, 34.4375}, {30, 36.75}, {31, 25.4}, {32, 41.575}, {33, 39.625}, {34, 45.5625}, {35, 35.9875}, {36, 51.1375}, {37, 11.175}, {38, 39.7875}, {39, 32.7375}, {40, 31.45}, {41, 37.9875}, {42, 42.25}, {43, 18.8625}, {44, 30.975}, {45, 35.2}, {46, 42.4875}, {47, 36.2625}, {48, 27.1875}, {49, 40.7375}, {50, 16.075}, {51, 26.15}, {52, 40.775}, {53, 43.8625}, {54, 22.8}, {55, 41.2625}, {56, 40.5625}, {57, 22.6125}, {58, 42.775}, {59, 38.275}, {60, 41.0625}, {61, 26.75}, {62, 45.1}, {63, 50.2125}, {64, 35.1875}, {65, 40.8125}, {66, 12.9375}, {67, 38.7375}, {68, 34.0375}, {69, 41.4375}, {70, 44.0125}, {71, 28.3875}, {72, 22.6125}, {73, 44.05}, {74, 33.675}, {75, 35.1625}, {76, 51.8125}, {77, 40.3375}, {78, 37.1875}, {79, 46.4625}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 38.6}, {1, 0}, {2, 7.9}, {3, 2.5}, {4, 19.9375}, {5, 36.4875}, {6, 37.4875}, {7, 29.5}, {8, 21.2875}, {9, 34.925}, {10, 26.9375}, {11, 5.5875}, {12, 22.225}, {13, 38.2375}, {14, 11.85}, {15, 28.1}, {16, 7.9}, {17, 39.7125}, {18, 24.275}, {19, 26.9125}, {20, 24.2875}, {21, 37.5}, {22, 28.2}, {23, 46.3125}, {24, 22.7875}, {25, 15.8}, {26, 26.375}, {27, 29.5875}, {28, 38.725}, {29, 19.1375}, {30, 38.5625}, {31, 21.4875}, {32, 30.125}, {33, 27.5125}, {34, 33.2375}, {35, 19.55}, {36, 39.025}, {37, 29.1625}, {38, 20.6875}, {39, 27.7375}, {40, 23.05}, {41, 9.65}, {42, 22.2}, {43, 24.6375}, {44, 27.0625}, {45, 12.4}, {46, 5.15}, {47, 24.2125}, {48, 14.2875}, {49, 34.2375}, {50, 22.525}, {51, 32.6}, {52, 12.4375}, {53, 30.9625}, {54, 17.5375}, {55, 29.2125}, {56, 35.3125}, {57, 24.275}, {58, 15.5}, {59, 9.1125}, {60, 11.9}, {61, 19.75}, {62, 19.725}, {63, 16.9125}, {64, 22.2875}, {65, 13.6875}, {66, 28.5375}, {67, 26.0875}, {68, 22.3375}, {69, 23.45}, {70, 23.9625}, {71, 11.95}, {72, 28.3875}, {73, 32}, {74, 26.7875}, {75, 28.1625}, {76, 26.9875}, {77, 27.4375}, {78, 21.0875}, {79, 20.6625}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 30.7}, {1, 7.9}, {2, 0}, {3, 10.4}, {4, 17.575}, {5, 33.15}, {6, 29.5875}, {7, 22.8375}, {8, 18.925}, {9, 28.45}, {10, 19.0375}, {11, 13.4875}, {12, 20.3625}, {13, 30.3375}, {14, 3.95}, {15, 25.7375}, {16, 15.8}, {17, 32.4625}, {18, 17.4875}, {19, 28.8875}, {20, 16.3875}, {21, 29.6}, {22, 25.8375}, {23, 43.525}, {24, 20.425}, {25, 7.9}, {26, 33.0625}, {27, 21.6875}, {28, 30.825}, {29, 11.2375}, {30, 35.3}, {31, 20.275}, {32, 26.7875}, {33, 24.725}, {34, 32.4125}, {35, 21.925}, {36, 36.2375}, {37, 35.85}, {38, 12.7875}, {39, 19.8375}, {40, 20.6875}, {41, 7.2875}, {42, 19.8375}, {43, 16.7375}, {44, 20.275}, {45, 4.5}, {46, 11.7875}, {47, 16.3125}, {48, 22.1875}, {49, 30.0375}, {50, 14.625}, {51, 24.7}, {52, 10.075}, {53, 30.2125}, {54, 24.225}, {55, 21.3125}, {56, 27.4125}, {57, 20.4875}, {58, 23.4}, {59, 17.0125}, {60, 15.375}, {61, 11.85}, {62, 17.3625}, {63, 24.8125}, {64, 21.5375}, {65, 11.325}, {66, 36.3875}, {67, 23.725}, {68, 19.1375}, {69, 21.0875}, {70, 21.6}, {71, 19.85}, {72, 20.4875}, {73, 24.1}, {74, 18.8875}, {75, 20.2625}, {76, 34.8875}, {77, 26.6875}, {78, 28.9875}, {79, 25.725}, 