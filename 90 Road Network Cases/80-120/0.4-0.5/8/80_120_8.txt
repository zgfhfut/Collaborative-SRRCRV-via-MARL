node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 9, 14, 16, 17, 18, 27, 29, 31, 33, 34, 36, 39, 41, 42, 45, 48, 51, 53, 55, 56, 57, 58, 59, 62, 63, 66, 68, 70, 71, 74, 77, 78,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 15), Line(0, 57), Line(0, 59), Line(0, 71), Line(1, 54), Line(1, 56), Line(1, 77), Line(2, 4), Line(2, 32), Line(3, 14), Line(3, 16), Line(3, 60), Line(4, 30), Line(4, 41), Line(4, 60), Line(5, 12), Line(5, 23), Line(5, 24), Line(5, 29), Line(6, 40), Line(6, 42), Line(6, 71), Line(7, 11), Line(7, 49), Line(7, 79), Line(8, 39), Line(8, 77), Line(9, 13), Line(9, 14), Line(9, 49), Line(9, 58), Line(10, 16), Line(10, 20), Line(10, 36), Line(11, 27), Line(11, 47), Line(12, 14), Line(12, 35), Line(13, 17), Line(13, 27), Line(13, 54), Line(13, 56), Line(14, 72), Line(15, 52), Line(15, 79), Line(16, 72), Line(17, 48), Line(18, 24), Line(18, 30), Line(18, 47), Line(19, 63), Line(19, 77), Line(19, 78), Line(20, 22), Line(20, 53), Line(20, 73), Line(20, 76), Line(21, 30), Line(21, 48), Line(21, 55), Line(21, 74), Line(22, 31), Line(22, 51), Line(22, 70), Line(23, 36), Line(24, 34), Line(24, 42), Line(25, 27), Line(25, 69), Line(26, 65), Line(26, 75), Line(28, 67), Line(28, 73), Line(29, 59), Line(29, 66), Line(29, 71), Line(31, 40), Line(31, 49), Line(32, 74), Line(33, 44), Line(33, 45), Line(33, 47), Line(34, 38), Line(34, 70), Line(34, 72), Line(35, 49), Line(35, 51), Line(37, 61), Line(37, 68), Line(38, 42), Line(38, 78), Line(39, 43), Line(40, 73), Line(41, 55), Line(42, 61), Line(43, 64), Line(44, 58), Line(45, 52), Line(45, 65), Line(45, 76), Line(46, 68), Line(46, 69), Line(46, 74), Line(46, 78), Line(47, 53), Line(49, 76), Line(50, 53), Line(50, 67), Line(52, 64), Line(54, 79), Line(55, 75), Line(56, 62), Line(57, 76), Line(60, 76), Line(62, 63), Line(63, 67), Line(64, 72), Line(66, 74), Line(70, 77), Line(77, 79),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 15), Line(0, 59), Line(1, 56), Line(1, 77), Line(3, 60), Line(4, 41), Line(5, 12), Line(5, 29), Line(8, 77), Line(9, 13), Line(9, 58), Line(10, 16), Line(10, 20), Line(13, 27), Line(13, 54), Line(13, 56), Line(15, 52), Line(17, 48), Line(18, 30), Line(18, 47), Line(19, 77), Line(19, 78), Line(20, 53), Line(20, 73), Line(21, 30), Line(21, 48), Line(21, 74), Line(22, 31), Line(22, 70), Line(23, 36), Line(24, 42), Line(25, 27), Line(28, 67), Line(29, 59), Line(29, 71), Line(31, 49), Line(32, 74), Line(33, 44), Line(33, 45), Line(33, 47), Line(34, 72), Line(35, 49), Line(37, 61), Line(37, 68), Line(38, 78), Line(39, 43), Line(40, 73), Line(42, 61), Line(43, 64), Line(45, 76), Line(46, 69), Line(46, 78), Line(47, 53), Line(50, 53), Line(54, 79), Line(57, 76), Line(62, 63), Line(63, 67), Line(70, 77), Line(77, 79),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 15, 7.21);
g.add_edge(0, 57, 6.32);
g.add_edge(0, 59, 2.82);
g.add_edge(0, 71, 9.21);
g.add_edge(1, 54, 3.16);
g.add_edge(1, 56, 5.38);
g.add_edge(1, 77, 10.29);
g.add_edge(2, 4, 6);
g.add_edge(2, 32, 5.38);
g.add_edge(3, 14, 6);
g.add_edge(3, 16, 3);
g.add_edge(3, 60, 6.32);
g.add_edge(4, 30, 7.28);
g.add_edge(4, 41, 5);
g.add_edge(4, 60, 4.12);
g.add_edge(5, 12, 6.32);
g.add_edge(5, 23, 2.82);
g.add_edge(5, 24, 1.41);
g.add_edge(5, 29, 2);
g.add_edge(6, 40, 4);
g.add_edge(6, 42, 6.7);
g.add_edge(6, 71, 2);
g.add_edge(7, 11, 7.21);
g.add_edge(7, 49, 5.65);
g.add_edge(7, 79, 2);
g.add_edge(8, 39, 6.4);
g.add_edge(8, 77, 10.63);
g.add_edge(9, 13, 6.7);
g.add_edge(9, 14, 9.05);
g.add_edge(9, 49, 3.16);
g.add_edge(9, 58, 2.23);
g.add_edge(10, 16, 1);
g.add_edge(10, 20, 5);
g.add_edge(10, 36, 6.7);
g.add_edge(11, 27, 2.23);
g.add_edge(11, 47, 5.09);
g.add_edge(12, 14, 11.31);
g.add_edge(12, 35, 12.04);
g.add_edge(13, 17, 1);
g.add_edge(13, 27, 6.32);
g.add_edge(13, 54, 1.41);
g.add_edge(13, 56, 2.23);
g.add_edge(14, 72, 5);
g.add_edge(15, 52, 5);
g.add_edge(15, 79, 3.16);
g.add_edge(16, 72, 3.16);
g.add_edge(17, 48, 4.24);
g.add_edge(18, 24, 5.83);
g.add_edge(18, 30, 7.07);
g.add_edge(18, 47, 1.41);
g.add_edge(19, 63, 3.6);
g.add_edge(19, 77, 6.32);
g.add_edge(19, 78, 3);
g.add_edge(20, 22, 3.6);
g.add_edge(20, 53, 3.16);
g.add_edge(20, 73, 6.32);
g.add_edge(20, 76, 2);
g.add_edge(21, 30, 1);
g.add_edge(21, 48, 3);
g.add_edge(21, 55, 9.21);
g.add_edge(21, 74, 9.89);
g.add_edge(22, 31, 3);
g.add_edge(22, 51, 3.6);
g.add_edge(22, 70, 6.4);
g.add_edge(23, 36, 7.81);
g.add_edge(24, 34, 3);
g.add_edge(24, 42, 6.32);
g.add_edge(25, 27, 6);
g.add_edge(25, 69, 9.21);
g.add_edge(26, 65, 9.21);
g.add_edge(26, 75, 6.4);
g.add_edge(28, 67, 3.6);
g.add_edge(28, 73, 6);
g.add_edge(29, 59, 3.16);
g.add_edge(29, 66, 4);
g.add_edge(29, 71, 6.08);
g.add_edge(31, 40, 5.83);
g.add_edge(31, 49, 5.38);
g.add_edge(32, 74, 9.84);
g.add_edge(33, 44, 7.07);
g.add_edge(33, 45, 5.83);
g.add_edge(33, 47, 6.4);
g.add_edge(34, 38, 8.06);
g.add_edge(34, 70, 7.07);
g.add_edge(34, 72, 3.16);
g.add_edge(35, 49, 6.08);
g.add_edge(35, 51, 7.61);
g.add_edge(37, 61, 7.61);
g.add_edge(37, 68, 5);
g.add_edge(38, 42, 1.41);
g.add_edge(38, 78, 2.82);
g.add_edge(39, 43, 1.41);
g.add_edge(40, 73, 7.21);
g.add_edge(41, 55, 2);
g.add_edge(42, 61, 6.08);
g.add_edge(43, 64, 5);
g.add_edge(44, 58, 7.61);
g.add_edge(45, 52, 6.32);
g.add_edge(45, 65, 5.09);
g.add_edge(45, 76, 9.05);
g.add_edge(46, 68, 7.61);
g.add_edge(46, 69, 2.82);
g.add_edge(46, 74, 4.12);
g.add_edge(46, 78, 5.09);
g.add_edge(47, 53, 8.06);
g.add_edge(49, 76, 8.06);
g.add_edge(50, 53, 3);
g.add_edge(50, 67, 4);
g.add_edge(52, 64, 9.21);
g.add_edge(54, 79, 3.6);
g.add_edge(55, 75, 5.38);
g.add_edge(56, 62, 4);
g.add_edge(57, 76, 7.28);
g.add_edge(60, 76, 4.12);
g.add_edge(62, 63, 5.65);
g.add_edge(63, 67, 7.07);
g.add_edge(64, 72, 10.81);
g.add_edge(66, 74, 3.6);
g.add_edge(70, 77, 8.24);
g.add_edge(77, 79, 6.7);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 6.21);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 8.9);
g.set_importance(15, 0);
g.set_importance(16, 9.05);
g.set_importance(17, 8.39);
g.set_importance(18, 9.69);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 1.53);
g.set_importance(28, 0);
g.set_importance(29, 5.89);
g.set_importance(30, 0);
g.set_importance(31, 5.47);
g.set_importance(32, 0);
g.set_importance(33, 5.74);
g.set_importance(34, 7.78);
g.set_importance(35, 0);
g.set_importance(36, 7.64);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 9.97);
g.set_importance(40, 0);
g.set_importance(41, 1.78);
g.set_importance(42, 6.96);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 2.62);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 3.31);
g.set_importance(49, 0);
g.set_importance(50, 0);
g.set_importance(51, 3);
g.set_importance(52, 0);
g.set_importance(53, 3.06);
g.set_importance(54, 0);
g.set_importance(55, 7.23);
g.set_importance(56, 2.35);
g.set_importance(57, 1.66);
g.set_importance(58, 5.51);
g.set_importance(59, 9.95);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 4.37);
g.set_importance(63, 8.85);
g.set_importance(64, 0);
g.set_importance(65, 0);
g.set_importance(66, 7.37);
g.set_importance(67, 0);
g.set_importance(68, 4.39);
g.set_importance(69, 0);
g.set_importance(70, 4.53);
g.set_importance(71, 2.53);
g.set_importance(72, 0);
g.set_importance(73, 0);
g.set_importance(74, 4.84);
g.set_importance(75, 0);
g.set_importance(76, 0);
g.set_importance(77, 9.99);
g.set_importance(78, 5.53);
g.set_importance(79, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 15), 3.17);
g.set_repair_time(Line(0, 59), 3.03);
g.set_repair_time(Line(1, 56), 2.5);
g.set_repair_time(Line(1, 77), 4.23);
g.set_repair_time(Line(3, 60), 4.27);
g.set_repair_time(Line(4, 41), 1.59);
g.set_repair_time(Line(5, 12), 3.68);
g.set_repair_time(Line(5, 29), 4.4);
g.set_repair_time(Line(8, 77), 4.87);
g.set_repair_time(Line(9, 13), 4.99);
g.set_repair_time(Line(9, 58), 3.21);
g.set_repair_time(Line(10, 16), 4.89);
g.set_repair_time(Line(10, 20), 1.68);
g.set_repair_time(Line(13, 27), 3.69);
g.set_repair_time(Line(13, 54), 3.56);
g.set_repair_time(Line(13, 56), 3.6);
g.set_repair_time(Line(15, 52), 1.93);
g.set_repair_time(Line(17, 48), 1.36);
g.set_repair_time(Line(18, 30), 2.77);
g.set_repair_time(Line(18, 47), 3.9);
g.set_repair_time(Line(19, 77), 1.07);
g.set_repair_time(Line(19, 78), 4.25);
g.set_repair_time(Line(20, 53), 1.37);
g.set_repair_time(Line(20, 73), 4.27);
g.set_repair_time(Line(21, 30), 1.71);
g.set_repair_time(Line(21, 48), 3.05);
g.set_repair_time(Line(21, 74), 4.32);
g.set_repair_time(Line(22, 31), 1.83);
g.set_repair_time(Line(22, 70), 2.85);
g.set_repair_time(Line(23, 36), 2.81);
g.set_repair_time(Line(24, 42), 4.04);
g.set_repair_time(Line(25, 27), 4.1);
g.set_repair_time(Line(28, 67), 4.75);
g.set_repair_time(Line(29, 59), 4.65);
g.set_repair_time(Line(29, 71), 1.76);
g.set_repair_time(Line(31, 49), 1.33);
g.set_repair_time(Line(32, 74), 4.69);
g.set_repair_time(Line(33, 44), 1.39);
g.set_repair_time(Line(33, 45), 4.96);
g.set_repair_time(Line(33, 47), 3.19);
g.set_repair_time(Line(34, 72), 3.27);
g.set_repair_time(Line(35, 49), 3.6);
g.set_repair_time(Line(37, 61), 4.63);
g.set_repair_time(Line(37, 68), 3.42);
g.set_repair_time(Line(38, 78), 2.22);
g.set_repair_time(Line(39, 43), 2.22);
g.set_repair_time(Line(40, 73), 2.03);
g.set_repair_time(Line(42, 61), 2.81);
g.set_repair_time(Line(43, 64), 3.29);
g.set_repair_time(Line(45, 76), 1.48);
g.set_repair_time(Line(46, 69), 3.18);
g.set_repair_time(Line(46, 78), 4.78);
g.set_repair_time(Line(47, 53), 3.06);
g.set_repair_time(Line(50, 53), 4.62);
g.set_repair_time(Line(54, 79), 3.89);
g.set_repair_time(Line(57, 76), 3.92);
g.set_repair_time(Line(62, 63), 1.35);
g.set_repair_time(Line(63, 67), 3.39);
g.set_repair_time(Line(70, 77), 2.02);
g.set_repair_time(Line(77, 79), 2.85);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 21.4125}, {2, 34.8}, {3, 27.1375}, {4, 27.3}, {5, 9.975}, {6, 14.0125}, {7, 15.4625}, {8, 34.625}, {9, 26.475}, {10, 24.6375}, {11, 24.475}, {12, 17.875}, {13, 19.225}, {14, 25.6875}, {15, 9.0125}, {16, 23.3875}, {17, 20.475}, {18, 19.025}, {19, 28.675}, {20, 19.5}, {21, 29.1125}, {22, 24}, {23, 13.5}, {24, 11.7375}, {25, 34.625}, {26, 41.0375}, {27, 27.125}, {28, 34.9}, {29, 7.475}, {30, 27.8625}, {31, 26.3}, {32, 29.275}, {33, 28.7875}, {34, 15.4875}, {35, 30.125}, {36, 23.2625}, {37, 36.75}, {38, 21.4}, {39, 34.7875}, {40, 19.0125}, {41, 33.55}, {42, 19.6375}, {43, 33.025}, {44, 37.625}, {45, 23.1625}, {46, 22.125}, {47, 20.7875}, {48, 25.775}, {49, 22.525}, {50, 27.2}, {51, 28.5}, {52, 15.2625}, {53, 23.45}, {54, 17.4625}, {55, 36.05}, {56, 22.0125}, {57, 7.9}, {58, 29.2625}, {59, 3.525}, {60, 22.15}, {61, 27.2375}, {62, 27.0125}, {63, 33.175}, {64, 26.775}, {65, 29.525}, {66, 12.475}, {67, 32.2}, {68, 31.6375}, {69, 25.65}, {70, 24.325}, {71, 11.5125}, {72, 19.4375}, {73, 27.4}, {74, 16.975}, {75, 42.775}, {76, 17}, {77, 21.3375}, {78, 24.925}, {79, 12.9625}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 21.4125}, {1, 0}, {2, 33.8625}, {3, 32.9}, {4, 26.3625}, {5, 31.3875}, {6, 35.425}, {7, 10.95}, {8, 26.15}, {9, 14.0875}, {10, 36.8375}, {11, 16.4}, {12, 39.2875}, {13, 5.7125}, {14, 25.4}, {15, 12.4}, {16, 35.6}, {17, 6.9625}, {18, 24.525}, {19, 20.7625}, {20, 30.5875}, {21, 16.0125}, {22, 28.4875}, {23, 34.9125}, {24, 31.8125}, {25, 21.1125}, {26, 42.25}, {27, 13.6125}, {28, 32.125}, {29, 28.8875}, {30, 17.2625}, {31, 24.7375}, {32, 40.5875}, {33, 30.7625}, {34, 32}, {35, 25.6125}, {36, 44.675}, {37, 46.6375}, {38, 28.0375}, {39, 34.15}, {40, 32.025}, {41, 30.025}, {42, 29.8}, {43, 35.9125}, {44, 26.3875}, {45, 26.55}, {46, 30.875}, {47, 22.7625}, {48, 12.2625}, {49, 18.0125}, {50, 32.625}, {51, 32.9875}, {52, 18.65}, {53, 32.8375}, {54, 3.95}, {55, 27.525}, {56, 6.725}, {57, 29.3125}, {58, 16.875}, {59, 24.9375}, {60, 31.5125}, {61, 37.4}, {62, 11.725}, {63, 18.7875}, {64, 30.1625}, {65, 32.9125}, {66, 32.875}, {67, 27.625}, {68, 40.3875}, {69, 32.625}, {70, 23.1625}, {71, 32.925}, {72, 31.65}, {73, 38.4875}, {74, 28.375}, {75, 34.25}, {76, 28.0875}, {77, 12.8625}, {78, 24.5125}, {79, 8.45}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 34.8}, {1, 33.8625}, {2, 0}, {3, 20.55}, {4, 7.5}, {5, 31.025}, {6, 38.625}, {7, 34.9375}, {8, 55.475}, {9, 31.825}, {10, 25.55}, {11, 33.5625}, {12, 38.925}, {13, 28.15}, {14, 28.05}, {15, 38.3625}, {16, 24.3}, {17, 26.9}, {18, 25.4375}, {19, 34.2875}, {20, 20.3}, {21, 17.85}, {22, 24.8}, {23, 34.55}, {24, 32.725}, {25, 39.2125}, {26, 30.975}, {27, 36.05}, {28, 35.7}, {29, 28.525}, {30, 16.6}, {31, 28.55}, {32, 6.725}, {33, 35.2}, {34, 32.2}, {35, 35.475}, {36, 33.925}, {37, 39.9375}, {38, 34.0625}, {39, 49.775}, {40, 35.8375}, {41, 13.75}, {42, 35.825}, {43, 48.0125}, {44, 44.0375}, {45, 29.1125}, {46, 24.175}, {47, 27.2}, {48, 21.6}, {49, 27.875}, {50, 28}, {51, 29.3}, {52, 37.0125}, {53, 24.25}, {54, 29.9125}, {55, 16.25}, {56, 30.9375}, {57, 26.9}, {58, 34.6125}, {59, 32.475}, {60, 12.65}, {61, 43.425}, {62, 35.9375}, {63, 38.7875}, {64, 41.7625}, {65, 35.475}, {66, 23.525}, {67, 33}, {68, 33.6875}, {69, 27.7}, {70, 32.8}, {71, 36.125}, {72, 28.25}, {73, 28.2}, {74, 19.025}, {75, 22.975}, {76, 17.8}, {77, 42.1875}, {78, 30.5375}, {79, 34.4125}, 