node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 8, 15, 16, 18, 19, 20, 27, 28, 29, 30, 31, 35, 36, 40, 44, 46, 48, 50, 52, 53, 54, 55, 61, 63, 70, 72, 73, 74, 76, 77, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 6), Line(0, 65), Line(0, 74), Line(0, 77), Line(1, 10), Line(1, 77), Line(2, 27), Line(2, 41), Line(2, 66), Line(3, 39), Line(3, 63), Line(4, 50), Line(4, 68), Line(5, 24), Line(5, 31), Line(5, 77), Line(6, 20), Line(7, 33), Line(7, 45), Line(7, 71), Line(7, 76), Line(8, 30), Line(8, 33), Line(8, 46), Line(8, 49), Line(9, 55), Line(9, 76), Line(10, 24), Line(10, 65), Line(10, 76), Line(11, 34), Line(11, 36), Line(11, 45), Line(11, 63), Line(12, 56), Line(12, 65), Line(13, 34), Line(13, 42), Line(13, 70), Line(14, 22), Line(14, 46), Line(15, 40), Line(15, 43), Line(15, 44), Line(15, 72), Line(16, 19), Line(16, 57), Line(17, 52), Line(17, 55), Line(17, 62), Line(18, 23), Line(18, 32), Line(18, 41), Line(18, 64), Line(19, 29), Line(20, 46), Line(20, 67), Line(21, 38), Line(21, 60), Line(22, 32), Line(23, 25), Line(23, 26), Line(23, 63), Line(25, 34), Line(25, 63), Line(26, 27), Line(26, 30), Line(27, 60), Line(28, 67), Line(28, 75), Line(29, 47), Line(30, 45), Line(31, 53), Line(31, 77), Line(32, 78), Line(33, 36), Line(35, 68), Line(35, 69), Line(36, 39), Line(36, 54), Line(37, 48), Line(37, 61), Line(37, 73), Line(38, 48), Line(39, 78), Line(40, 47), Line(40, 61), Line(40, 73), Line(41, 54), Line(42, 43), Line(42, 79), Line(44, 65), Line(44, 73), Line(45, 52), Line(46, 72), Line(47, 76), Line(48, 57), Line(49, 66), Line(50, 76), Line(51, 55), Line(51, 65), Line(51, 75), Line(52, 56), Line(52, 77), Line(53, 55), Line(53, 59), Line(54, 59), Line(54, 65), Line(55, 71), Line(58, 62), Line(58, 72), Line(62, 66), Line(63, 70), Line(63, 72), Line(64, 67), Line(64, 69), Line(68, 71), Line(70, 79), Line(74, 79), Line(76, 77),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(2, 41), Line(3, 63), Line(4, 50), Line(5, 24), Line(5, 31), Line(5, 77), Line(7, 33), Line(7, 71), Line(8, 30), Line(9, 76), Line(10, 24), Line(10, 65), Line(10, 76), Line(11, 45), Line(11, 63), Line(12, 56), Line(12, 65), Line(14, 22), Line(14, 46), Line(15, 40), Line(15, 44), Line(16, 19), Line(17, 55), Line(17, 62), Line(18, 23), Line(18, 41), Line(19, 29), Line(20, 67), Line(22, 32), Line(23, 63), Line(26, 27), Line(28, 67), Line(29, 47), Line(31, 53), Line(33, 36), Line(36, 54), Line(37, 48), Line(37, 61), Line(37, 73), Line(38, 48), Line(39, 78), Line(40, 61), Line(40, 73), Line(41, 54), Line(42, 79), Line(45, 52), Line(46, 72), Line(47, 76), Line(48, 57), Line(50, 76), Line(51, 55), Line(52, 56), Line(52, 77), Line(53, 55), Line(54, 65), Line(55, 71), Line(64, 67), Line(64, 69), Line(68, 71), Line(76, 77),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 6, 3);
g.add_edge(0, 65, 6.7);
g.add_edge(0, 74, 3.16);
g.add_edge(0, 77, 2.23);
g.add_edge(1, 10, 4.47);
g.add_edge(1, 77, 5.38);
g.add_edge(2, 27, 6.4);
g.add_edge(2, 41, 2.23);
g.add_edge(2, 66, 2.82);
g.add_edge(3, 39, 3.16);
g.add_edge(3, 63, 5);
g.add_edge(4, 50, 4);
g.add_edge(4, 68, 9.21);
g.add_edge(5, 24, 4);
g.add_edge(5, 31, 3.6);
g.add_edge(5, 77, 4);
g.add_edge(6, 20, 4);
g.add_edge(7, 33, 1);
g.add_edge(7, 45, 7.81);
g.add_edge(7, 71, 9.43);
g.add_edge(7, 76, 6.32);
g.add_edge(8, 30, 7.21);
g.add_edge(8, 33, 4.12);
g.add_edge(8, 46, 5.09);
g.add_edge(8, 49, 3.16);
g.add_edge(9, 55, 7.28);
g.add_edge(9, 76, 7.61);
g.add_edge(10, 24, 3);
g.add_edge(10, 65, 4.12);
g.add_edge(10, 76, 2.23);
g.add_edge(11, 34, 1);
g.add_edge(11, 36, 5);
g.add_edge(11, 45, 8);
g.add_edge(11, 63, 9.21);
g.add_edge(12, 56, 5.09);
g.add_edge(12, 65, 8.06);
g.add_edge(13, 34, 5.09);
g.add_edge(13, 42, 2.23);
g.add_edge(13, 70, 2.23);
g.add_edge(14, 22, 5.83);
g.add_edge(14, 46, 2.23);
g.add_edge(15, 40, 2.82);
g.add_edge(15, 43, 5.83);
g.add_edge(15, 44, 5.38);
g.add_edge(15, 72, 9.21);
g.add_edge(16, 19, 8.06);
g.add_edge(16, 57, 3);
g.add_edge(17, 52, 3.6);
g.add_edge(17, 55, 4.47);
g.add_edge(17, 62, 6.08);
g.add_edge(18, 23, 3.6);
g.add_edge(18, 32, 10.29);
g.add_edge(18, 41, 4.12);
g.add_edge(18, 64, 7.81);
g.add_edge(19, 29, 2);
g.add_edge(20, 46, 3.16);
g.add_edge(20, 67, 3.16);
g.add_edge(21, 38, 2.23);
g.add_edge(21, 60, 2.23);
g.add_edge(22, 32, 2.82);
g.add_edge(23, 25, 6.7);
g.add_edge(23, 26, 3.6);
g.add_edge(23, 63, 3.16);
g.add_edge(25, 34, 7);
g.add_edge(25, 63, 9.84);
g.add_edge(26, 27, 6.4);
g.add_edge(26, 30, 9.21);
g.add_edge(27, 60, 4.12);
g.add_edge(28, 67, 4.47);
g.add_edge(28, 75, 6.4);
g.add_edge(29, 47, 8.06);
g.add_edge(30, 45, 2.23);
g.add_edge(31, 53, 6.32);
g.add_edge(31, 77, 6.7);
g.add_edge(32, 78, 3);
g.add_edge(33, 36, 8.54);
g.add_edge(35, 68, 7.07);
g.add_edge(35, 69, 3.16);
g.add_edge(36, 39, 5.38);
g.add_edge(36, 54, 3.16);
g.add_edge(37, 48, 4.12);
g.add_edge(37, 61, 3.16);
g.add_edge(37, 73, 8.06);
g.add_edge(38, 48, 6.4);
g.add_edge(39, 78, 5);
g.add_edge(40, 47, 2);
g.add_edge(40, 61, 8.48);
g.add_edge(40, 73, 2.23);
g.add_edge(41, 54, 5.83);
g.add_edge(42, 43, 4.47);
g.add_edge(42, 79, 8.48);
g.add_edge(44, 65, 7.21);
g.add_edge(44, 73, 4.47);
g.add_edge(45, 52, 7.28);
g.add_edge(46, 72, 5.83);
g.add_edge(47, 76, 1);
g.add_edge(48, 57, 5.09);
g.add_edge(49, 66, 2.23);
g.add_edge(50, 76, 7);
g.add_edge(51, 55, 5);
g.add_edge(51, 65, 3.16);
g.add_edge(51, 75, 8.54);
g.add_edge(52, 56, 3.6);
g.add_edge(52, 77, 2);
g.add_edge(53, 55, 7.07);
g.add_edge(53, 59, 3.6);
g.add_edge(54, 59, 3.16);
g.add_edge(54, 65, 5.83);
g.add_edge(55, 71, 5.09);
g.add_edge(58, 62, 9.48);
g.add_edge(58, 72, 3.16);
g.add_edge(62, 66, 5);
g.add_edge(63, 70, 6.08);
g.add_edge(63, 72, 7.21);
g.add_edge(64, 67, 7.07);
g.add_edge(64, 69, 7.21);
g.add_edge(68, 71, 9);
g.add_edge(70, 79, 4.24);
g.add_edge(74, 79, 7.21);
g.add_edge(76, 77, 5.09);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 7.42);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 7.63);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 7.37);
g.set_importance(16, 5.88);
g.set_importance(17, 0);
g.set_importance(18, 6.17);
g.set_importance(19, 7.6);
g.set_importance(20, 8.71);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 8.6);
g.set_importance(28, 5.79);
g.set_importance(29, 6.25);
g.set_importance(30, 2.85);
g.set_importance(31, 4.55);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 2.16);
g.set_importance(36, 4.36);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 0);
g.set_importance(40, 2.62);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 1.26);
g.set_importance(45, 0);
g.set_importance(46, 9.6);
g.set_importance(47, 0);
g.set_importance(48, 8.07);
g.set_importance(49, 0);
g.set_importance(50, 2.13);
g.set_importance(51, 0);
g.set_importance(52, 4.15);
g.set_importance(53, 8.35);
g.set_importance(54, 4.07);
g.set_importance(55, 2.12);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 0);
g.set_importance(60, 0);
g.set_importance(61, 6.24);
g.set_importance(62, 0);
g.set_importance(63, 1.61);
g.set_importance(64, 0);
g.set_importance(65, 0);
g.set_importance(66, 0);
g.set_importance(67, 0);
g.set_importance(68, 0);
g.set_importance(69, 0);
g.set_importance(70, 1.26);
g.set_importance(71, 0);
g.set_importance(72, 6.35);
g.set_importance(73, 4.6);
g.set_importance(74, 4.81);
g.set_importance(75, 0);
g.set_importance(76, 3.73);
g.set_importance(77, 3);
g.set_importance(78, 0);
g.set_importance(79, 1.19);
/*********************set_repair*************************/
g.set_repair_time(Line(2, 41), 4.86);
g.set_repair_time(Line(3, 63), 4.64);
g.set_repair_time(Line(4, 50), 4.05);
g.set_repair_time(Line(5, 24), 4.88);
g.set_repair_time(Line(5, 31), 3.54);
g.set_repair_time(Line(5, 77), 1.9);
g.set_repair_time(Line(7, 33), 1.41);
g.set_repair_time(Line(7, 71), 3.38);
g.set_repair_time(Line(8, 30), 1.52);
g.set_repair_time(Line(9, 76), 3.95);
g.set_repair_time(Line(10, 24), 3.38);
g.set_repair_time(Line(10, 65), 4.98);
g.set_repair_time(Line(10, 76), 2.65);
g.set_repair_time(Line(11, 45), 1.33);
g.set_repair_time(Line(11, 63), 4.4);
g.set_repair_time(Line(12, 56), 1.58);
g.set_repair_time(Line(12, 65), 4.7);
g.set_repair_time(Line(14, 22), 1.4);
g.set_repair_time(Line(14, 46), 4.01);
g.set_repair_time(Line(15, 40), 1.04);
g.set_repair_time(Line(15, 44), 1.94);
g.set_repair_time(Line(16, 19), 2.1);
g.set_repair_time(Line(17, 55), 1.4);
g.set_repair_time(Line(17, 62), 1.28);
g.set_repair_time(Line(18, 23), 1.76);
g.set_repair_time(Line(18, 41), 2.89);
g.set_repair_time(Line(19, 29), 2.27);
g.set_repair_time(Line(20, 67), 3.84);
g.set_repair_time(Line(22, 32), 3.61);
g.set_repair_time(Line(23, 63), 1.89);
g.set_repair_time(Line(26, 27), 3.3);
g.set_repair_time(Line(28, 67), 3.33);
g.set_repair_time(Line(29, 47), 3.14);
g.set_repair_time(Line(31, 53), 1.02);
g.set_repair_time(Line(33, 36), 4.9);
g.set_repair_time(Line(36, 54), 2.85);
g.set_repair_time(Line(37, 48), 4.74);
g.set_repair_time(Line(37, 61), 1.17);
g.set_repair_time(Line(37, 73), 4.13);
g.set_repair_time(Line(38, 48), 2.82);
g.set_repair_time(Line(39, 78), 4.29);
g.set_repair_time(Line(40, 61), 4.07);
g.set_repair_time(Line(40, 73), 1.66);
g.set_repair_time(Line(41, 54), 3.41);
g.set_repair_time(Line(42, 79), 3.21);
g.set_repair_time(Line(45, 52), 1.38);
g.set_repair_time(Line(46, 72), 4.32);
g.set_repair_time(Line(47, 76), 2.92);
g.set_repair_time(Line(48, 57), 3.91);
g.set_repair_time(Line(50, 76), 4.98);
g.set_repair_time(Line(51, 55), 3);
g.set_repair_time(Line(52, 56), 3.58);
g.set_repair_time(Line(52, 77), 2.1);
g.set_repair_time(Line(53, 55), 1.71);
g.set_repair_time(Line(54, 65), 2.11);
g.set_repair_time(Line(55, 71), 4.09);
g.set_repair_time(Line(64, 67), 3.1);
g.set_repair_time(Line(64, 69), 4.19);
g.set_repair_time(Line(68, 71), 3.72);
g.set_repair_time(Line(76, 77), 3.76);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 9.5125}, {2, 25.7375}, {3, 30.2875}, {4, 22.9}, {5, 7.7875}, {6, 3.75}, {7, 17.05}, {8, 19.0625}, {9, 18.6625}, {10, 11.9375}, {11, 24.3875}, {12, 16.15}, {13, 21.05}, {14, 15.4875}, {15, 16.425}, {16, 33.05}, {17, 9.7875}, {18, 28.1}, {19, 22.975}, {20, 8.75}, {21, 41.675}, {22, 22.775}, {23, 29.8125}, {24, 12.7875}, {25, 34.3875}, {26, 28.6875}, {27, 33.7375}, {28, 18.2875}, {29, 20.475}, {30, 17.175}, {31, 11.1625}, {32, 26.3}, {33, 18.3}, {34, 25.6375}, {35, 34.5}, {36, 19.6125}, {37, 25.7625}, {38, 38.9125}, {39, 26.3375}, {40, 12.9}, {41, 22.95}, {42, 23.5625}, {43, 23.7125}, {44, 17.3875}, {45, 14.3875}, {46, 12.7}, {47, 10.4}, {48, 30.9125}, {49, 23.0125}, {50, 17.9}, {51, 12.325}, {52, 5.2875}, {53, 19.0625}, {54, 15.6625}, {55, 15.375}, {56, 9.7875}, {57, 36.8}, {58, 23.9375}, {59, 19.6125}, {60, 38.8875}, {61, 23.5}, {62, 17.3875}, {63, 25.8625}, {64, 21.5375}, {65, 8.375}, {66, 23.6375}, {67, 12.7}, {68, 32.9875}, {69, 30.55}, {70, 18.2625}, {71, 21.7375}, {72, 19.9875}, {73, 15.6875}, {74, 3.95}, {75, 23}, {76, 9.15}, {77, 2.7875}, {78, 30.05}, {79, 12.9625}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 9.5125}, {1, 0}, {2, 28.1}, {3, 32.65}, {4, 22.125}, {5, 11.725}, {6, 13.2625}, {7, 16.275}, {8, 22.675}, {9, 17.8875}, {10, 5.5875}, {11, 28.225}, {12, 20.0875}, {13, 30.5625}, {14, 25}, {15, 15.65}, {16, 32.275}, {17, 13.725}, {18, 30.4625}, {19, 22.2}, {20, 18.2625}, {21, 40.925}, {22, 32.2875}, {23, 34.9625}, {24, 9.3375}, {25, 38.225}, {26, 32.625}, {27, 36.1}, {28, 27.8}, {29, 19.7}, {30, 21.1125}, {31, 15.1}, {32, 35.8125}, {33, 17.525}, {34, 29.475}, {35, 42.475}, {36, 21.975}, {37, 24.9875}, {38, 38.1375}, {39, 28.7}, {40, 12.125}, {41, 25.3125}, {42, 28.525}, {43, 22.9375}, {44, 19.75}, {45, 18.325}, {46, 22.2125}, {47, 9.625}, {48, 30.1375}, {49, 26.625}, {50, 17.125}, {51, 14.6875}, {52, 9.225}, {53, 23}, {54, 18.025}, {55, 19.3125}, {56, 13.725}, {57, 36.025}, {58, 31.1125}, {59, 21.975}, {60, 41.25}, {61, 22.725}, {62, 21.325}, {63, 35.375}, {64, 31.05}, {65, 10.7375}, {66, 27.575}, {67, 22.2125}, {68, 33.6375}, {69, 40.0625}, {70, 27.775}, {71, 25.675}, {72, 27.1625}, {73, 14.9125}, {74, 13.4625}, {75, 25.3625}, {76, 8.375}, {77, 6.725}, {78, 34.95}, {79, 22.475}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 25.7375}, {1, 28.1}, {2, 0}, {3, 22.6375}, {4, 38.3125}, {5, 29.375}, {6, 25.575}, {7, 16.6625}, {8, 10.2625}, {9, 32.0625}, {10, 22.5125}, {11, 20.275}, {12, 27.4375}, {13, 26.775}, {14, 19.4125}, {15, 31.8375}, {16, 36.8375}, {17, 17.375}, {18, 7.9375}, {19, 38.3875}, {20, 20.575}, {21, 15.9375}, {22, 24.325}, {23, 12.4375}, {24, 26.2625}, {25, 20.8125}, {26, 16}, {27, 8}, {28, 30.1125}, {29, 35.8875}, {30, 19.275}, {31, 26.425}, {32, 20.8}, {33, 15.4125}, {34, 21.525}, {35, 30.6625}, {36, 14.025}, {37, 31.875}, {38, 18.725}, {39, 20.75}, {40, 28.3125}, {41, 2.7875}, {42, 29.5625}, {43, 35.15}, {44, 26.375}, {45, 22.0625}, {46, 16.625}, {47, 25.8125}, {48, 26.725}, {49, 6.3125}, {50, 33.3125}, {51, 21.3125}, {52, 21.875}, {53, 18.525}, {54, 10.075}, {55, 22.9625}, {56, 26.375}, {57, 33.0875}, {58, 21.625}, {59, 14.025}, {60, 13.15}, {61, 35.825}, {62, 9.775}, {63, 16.3875}, {64, 17.7}, {65, 17.3625}, {66, 3.525}, {67, 24.525}, {68, 39.5}, {69, 26.7125}, {70, 23.9875}, {71, 28.45}, {72, 23.9125}, {73, 31.1}, {74, 29.6875}, {75, 31.9875}, {76, 24.5625}, {77, 24.375}, {78, 24.55}, {79, 29.2875}, 