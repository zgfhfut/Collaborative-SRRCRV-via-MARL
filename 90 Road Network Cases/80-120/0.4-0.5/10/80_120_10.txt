node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 9, 17, 18, 20, 21, 26, 27, 31, 32, 33, 35, 36, 38, 46, 49, 50, 51, 52, 54, 55, 62, 63, 64, 65, 67, 72, 73, 74, 75, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 29), Line(0, 65), Line(0, 69), Line(1, 24), Line(1, 79), Line(2, 3), Line(2, 27), Line(2, 32), Line(2, 52), Line(3, 7), Line(3, 35), Line(3, 65), Line(4, 50), Line(4, 59), Line(4, 67), Line(5, 9), Line(5, 13), Line(5, 43), Line(6, 8), Line(6, 26), Line(6, 28), Line(7, 21), Line(7, 68), Line(7, 72), Line(7, 77), Line(8, 13), Line(8, 26), Line(9, 51), Line(9, 64), Line(9, 66), Line(10, 37), Line(10, 71), Line(11, 35), Line(11, 41), Line(11, 60), Line(11, 71), Line(12, 57), Line(12, 62), Line(13, 36), Line(13, 63), Line(13, 72), Line(14, 30), Line(14, 36), Line(14, 44), Line(14, 72), Line(14, 77), Line(15, 48), Line(15, 79), Line(16, 18), Line(16, 55), Line(16, 60), Line(17, 19), Line(17, 52), Line(17, 54), Line(18, 69), Line(19, 70), Line(19, 75), Line(20, 30), Line(20, 68), Line(21, 51), Line(21, 59), Line(21, 74), Line(22, 47), Line(22, 59), Line(22, 67), Line(22, 73), Line(23, 25), Line(23, 35), Line(23, 39), Line(23, 75), Line(24, 33), Line(25, 62), Line(27, 52), Line(28, 38), Line(28, 62), Line(28, 67), Line(28, 71), Line(29, 40), Line(31, 41), Line(31, 61), Line(31, 75), Line(32, 34), Line(32, 41), Line(33, 49), Line(33, 55), Line(34, 47), Line(34, 66), Line(34, 74), Line(36, 45), Line(36, 46), Line(37, 58), Line(37, 59), Line(38, 42), Line(38, 57), Line(38, 60), Line(38, 78), Line(39, 43), Line(40, 45), Line(41, 42), Line(44, 56), Line(44, 57), Line(46, 66), Line(47, 64), Line(47, 67), Line(47, 73), Line(48, 63), Line(49, 78), Line(52, 71), Line(53, 55), Line(53, 61), Line(54, 64), Line(54, 70), Line(55, 58), Line(56, 77), Line(58, 76), Line(59, 76), Line(60, 72), Line(63, 66), Line(67, 76), Line(74, 76),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(1, 24), Line(2, 3), Line(2, 32), Line(2, 52), Line(4, 50), Line(4, 59), Line(5, 13), Line(6, 8), Line(6, 26), Line(7, 21), Line(7, 77), Line(8, 26), Line(9, 51), Line(9, 66), Line(10, 37), Line(11, 35), Line(11, 41), Line(11, 60), Line(11, 71), Line(12, 57), Line(12, 62), Line(13, 63), Line(14, 30), Line(14, 36), Line(15, 48), Line(17, 52), Line(17, 54), Line(19, 70), Line(21, 51), Line(22, 47), Line(22, 73), Line(23, 25), Line(24, 33), Line(25, 62), Line(27, 52), Line(28, 38), Line(29, 40), Line(31, 41), Line(31, 75), Line(32, 34), Line(33, 49), Line(33, 55), Line(34, 47), Line(34, 66), Line(34, 74), Line(37, 58), Line(38, 42), Line(38, 60), Line(38, 78), Line(44, 56), Line(46, 66), Line(48, 63), Line(49, 78), Line(52, 71), Line(53, 55), Line(54, 64), Line(55, 58), Line(56, 77), Line(63, 66), Line(67, 76),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 29, 6.32);
g.add_edge(0, 65, 6.08);
g.add_edge(0, 69, 4.24);
g.add_edge(1, 24, 2);
g.add_edge(1, 79, 6.08);
g.add_edge(2, 3, 9.21);
g.add_edge(2, 27, 6.08);
g.add_edge(2, 32, 4.12);
g.add_edge(2, 52, 3.6);
g.add_edge(3, 7, 7.81);
g.add_edge(3, 35, 9.43);
g.add_edge(3, 65, 5.65);
g.add_edge(4, 50, 1.41);
g.add_edge(4, 59, 1);
g.add_edge(4, 67, 7.07);
g.add_edge(5, 9, 2);
g.add_edge(5, 13, 2.82);
g.add_edge(5, 43, 5.38);
g.add_edge(6, 8, 4.12);
g.add_edge(6, 26, 2.82);
g.add_edge(6, 28, 4.12);
g.add_edge(7, 21, 2);
g.add_edge(7, 68, 8.6);
g.add_edge(7, 72, 5.09);
g.add_edge(7, 77, 8.06);
g.add_edge(8, 13, 1);
g.add_edge(8, 26, 2.23);
g.add_edge(9, 51, 4.12);
g.add_edge(9, 64, 1.41);
g.add_edge(9, 66, 4.47);
g.add_edge(10, 37, 2.82);
g.add_edge(10, 71, 4.12);
g.add_edge(11, 35, 1);
g.add_edge(11, 41, 6.32);
g.add_edge(11, 60, 6.08);
g.add_edge(11, 71, 9.21);
g.add_edge(12, 57, 4.12);
g.add_edge(12, 62, 1);
g.add_edge(13, 36, 2.23);
g.add_edge(13, 63, 2.23);
g.add_edge(13, 72, 5.65);
g.add_edge(14, 30, 5.65);
g.add_edge(14, 36, 5.38);
g.add_edge(14, 44, 1);
g.add_edge(14, 72, 1.41);
g.add_edge(14, 77, 7.81);
g.add_edge(15, 48, 3.16);
g.add_edge(15, 79, 5.83);
g.add_edge(16, 18, 5.83);
g.add_edge(16, 55, 2.82);
g.add_edge(16, 60, 3.16);
g.add_edge(17, 19, 3.6);
g.add_edge(17, 52, 8.6);
g.add_edge(17, 54, 6.4);
g.add_edge(18, 69, 4.47);
g.add_edge(19, 70, 2.23);
g.add_edge(19, 75, 3);
g.add_edge(20, 30, 1);
g.add_edge(20, 68, 4.12);
g.add_edge(21, 51, 3.6);
g.add_edge(21, 59, 5.09);
g.add_edge(21, 74, 9.43);
g.add_edge(22, 47, 5);
g.add_edge(22, 59, 7.07);
g.add_edge(22, 67, 5.38);
g.add_edge(22, 73, 5.09);
g.add_edge(23, 25, 1);
g.add_edge(23, 35, 8.54);
g.add_edge(23, 39, 9.21);
g.add_edge(23, 75, 4);
g.add_edge(24, 33, 3.6);
g.add_edge(25, 62, 7.07);
g.add_edge(27, 52, 5.65);
g.add_edge(28, 38, 6.32);
g.add_edge(28, 62, 1);
g.add_edge(28, 67, 1.41);
g.add_edge(28, 71, 6.7);
g.add_edge(29, 40, 3.6);
g.add_edge(31, 41, 8.6);
g.add_edge(31, 61, 8.06);
g.add_edge(31, 75, 10.29);
g.add_edge(32, 34, 1.41);
g.add_edge(32, 41, 5.83);
g.add_edge(33, 49, 5.38);
g.add_edge(33, 55, 1);
g.add_edge(34, 47, 5.65);
g.add_edge(34, 66, 3);
g.add_edge(34, 74, 7.07);
g.add_edge(36, 45, 3.16);
g.add_edge(36, 46, 1);
g.add_edge(37, 58, 6.08);
g.add_edge(37, 59, 9.21);
g.add_edge(38, 42, 9.89);
g.add_edge(38, 57, 4.12);
g.add_edge(38, 60, 7);
g.add_edge(38, 78, 2.23);
g.add_edge(39, 43, 4.12);
g.add_edge(40, 45, 4.47);
g.add_edge(41, 42, 7.07);
g.add_edge(44, 56, 7.07);
g.add_edge(44, 57, 2.23);
g.add_edge(46, 66, 5.83);
g.add_edge(47, 64, 2.23);
g.add_edge(47, 67, 1.41);
g.add_edge(47, 73, 8.54);
g.add_edge(48, 63, 5.09);
g.add_edge(49, 78, 8.24);
g.add_edge(52, 71, 5.38);
g.add_edge(53, 55, 7.21);
g.add_edge(53, 61, 2);
g.add_edge(54, 64, 2.82);
g.add_edge(54, 70, 6.7);
g.add_edge(55, 58, 8.24);
g.add_edge(56, 77, 4);
g.add_edge(58, 76, 9.05);
g.add_edge(59, 76, 12.72);
g.add_edge(60, 72, 1.41);
g.add_edge(63, 66, 4.12);
g.add_edge(67, 76, 9.21);
g.add_edge(74, 76, 9);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 3.86);
g.set_importance(8, 0);
g.set_importance(9, 9.07);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 3.43);
g.set_importance(18, 7.49);
g.set_importance(19, 0);
g.set_importance(20, 4.9);
g.set_importance(21, 4.26);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 9.6);
g.set_importance(27, 8.71);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 0);
g.set_importance(31, 7.23);
g.set_importance(32, 6.24);
g.set_importance(33, 1.03);
g.set_importance(34, 0);
g.set_importance(35, 8.23);
g.set_importance(36, 2.66);
g.set_importance(37, 0);
g.set_importance(38, 8.74);
g.set_importance(39, 0);
g.set_importance(40, 0);
g.set_importance(41, 0);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 3.94);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 1.28);
g.set_importance(50, 6.5);
g.set_importance(51, 4.82);
g.set_importance(52, 6.44);
g.set_importance(53, 0);
g.set_importance(54, 4.66);
g.set_importance(55, 3.35);
g.set_importance(56, 0);
g.set_importance(57, 0);
g.set_importance(58, 0);
g.set_importance(59, 0);
g.set_importance(60, 0);
g.set_importance(61, 0);
g.set_importance(62, 4.71);
g.set_importance(63, 2.75);
g.set_importance(64, 3.36);
g.set_importance(65, 2);
g.set_importance(66, 0);
g.set_importance(67, 1.69);
g.set_importance(68, 0);
g.set_importance(69, 0);
g.set_importance(70, 0);
g.set_importance(71, 0);
g.set_importance(72, 9.75);
g.set_importance(73, 5.66);
g.set_importance(74, 4.7);
g.set_importance(75, 4.82);
g.set_importance(76, 0);
g.set_importance(77, 0);
g.set_importance(78, 3.29);
g.set_importance(79, 4.84);
/*********************set_repair*************************/
g.set_repair_time(Line(1, 24), 4.43);
g.set_repair_time(Line(2, 3), 4.84);
g.set_repair_time(Line(2, 32), 3.32);
g.set_repair_time(Line(2, 52), 1.72);
g.set_repair_time(Line(4, 50), 3.97);
g.set_repair_time(Line(4, 59), 4.45);
g.set_repair_time(Line(5, 13), 1.86);
g.set_repair_time(Line(6, 8), 3.77);
g.set_repair_time(Line(6, 26), 3.64);
g.set_repair_time(Line(7, 21), 4.58);
g.set_repair_time(Line(7, 77), 2.98);
g.set_repair_time(Line(8, 26), 2.24);
g.set_repair_time(Line(9, 51), 2.86);
g.set_repair_time(Line(9, 66), 3.49);
g.set_repair_time(Line(10, 37), 3.64);
g.set_repair_time(Line(11, 35), 1.79);
g.set_repair_time(Line(11, 41), 4.63);
g.set_repair_time(Line(11, 60), 4.34);
g.set_repair_time(Line(11, 71), 2.43);
g.set_repair_time(Line(12, 57), 2.64);
g.set_repair_time(Line(12, 62), 4.07);
g.set_repair_time(Line(13, 63), 4.02);
g.set_repair_time(Line(14, 30), 1.12);
g.set_repair_time(Line(14, 36), 2.56);
g.set_repair_time(Line(15, 48), 3.42);
g.set_repair_time(Line(17, 52), 3.34);
g.set_repair_time(Line(17, 54), 3.29);
g.set_repair_time(Line(19, 70), 4.55);
g.set_repair_time(Line(21, 51), 3.68);
g.set_repair_time(Line(22, 47), 1.87);
g.set_repair_time(Line(22, 73), 2.46);
g.set_repair_time(Line(23, 25), 3.97);
g.set_repair_time(Line(24, 33), 1);
g.set_repair_time(Line(25, 62), 4.82);
g.set_repair_time(Line(27, 52), 1.68);
g.set_repair_time(Line(28, 38), 3.68);
g.set_repair_time(Line(29, 40), 4.37);
g.set_repair_time(Line(31, 41), 1.76);
g.set_repair_time(Line(31, 75), 3.45);
g.set_repair_time(Line(32, 34), 3.21);
g.set_repair_time(Line(33, 49), 3.03);
g.set_repair_time(Line(33, 55), 3.1);
g.set_repair_time(Line(34, 47), 4.21);
g.set_repair_time(Line(34, 66), 2.36);
g.set_repair_time(Line(34, 74), 3.12);
g.set_repair_time(Line(37, 58), 2.26);
g.set_repair_time(Line(38, 42), 2.19);
g.set_repair_time(Line(38, 60), 1.09);
g.set_repair_time(Line(38, 78), 2.21);
g.set_repair_time(Line(44, 56), 4.52);
g.set_repair_time(Line(46, 66), 4.96);
g.set_repair_time(Line(48, 63), 3.19);
g.set_repair_time(Line(49, 78), 4.59);
g.set_repair_time(Line(52, 71), 3.05);
g.set_repair_time(Line(53, 55), 1.52);
g.set_repair_time(Line(54, 64), 2.1);
g.set_repair_time(Line(55, 58), 4.82);
g.set_repair_time(Line(56, 77), 4.23);
g.set_repair_time(Line(63, 66), 1.17);
g.set_repair_time(Line(67, 76), 3.44);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 29.95}, {2, 26.175}, {3, 14.6625}, {4, 34.5375}, {5, 28.25}, {6, 31.125}, {7, 24.425}, {8, 25.975}, {9, 30.75}, {10, 42.55}, {11, 27.7}, {12, 34.8375}, {13, 24.725}, {14, 25.65}, {15, 37.825}, {16, 18.175}, {17, 41.425}, {18, 10.8875}, {19, 45.875}, {20, 33.9625}, {21, 26.925}, {22, 41.55}, {23, 37.125}, {24, 27.45}, {25, 38.375}, {26, 28.7625}, {27, 33.775}, {28, 36.275}, {29, 7.9}, {30, 32.7125}, {31, 43.2875}, {32, 31.325}, {33, 22.95}, {34, 33.0875}, {35, 26.45}, {36, 21.9375}, {37, 39.6}, {38, 30.875}, {39, 40.125}, {40, 12.4}, {41, 35.6}, {42, 43.2375}, {43, 34.975}, {44, 26.9}, {45, 17.9875}, {46, 23.1875}, {47, 35.3}, {48, 33.875}, {49, 29.675}, {50, 36.3}, {51, 31.425}, {52, 30.675}, {53, 30.7125}, {54, 36.0375}, {55, 21.7}, {56, 35.7375}, {57, 29.6875}, {58, 32}, {59, 33.2875}, {60, 22.125}, {61, 33.2125}, {62, 36.0875}, {63, 27.5125}, {64, 32.5125}, {65, 7.6}, {66, 30.475}, {67, 37.0625}, {68, 35.175}, {69, 5.3}, {70, 44.4125}, {71, 37.4}, {72, 23.8875}, {73, 45.975}, {74, 38.7125}, {75, 42.125}, {76, 43.3125}, {77, 34.5}, {78, 33.6625}, {79, 37.55}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 29.95}, {1, 0}, {2, 41.0125}, {3, 33.6125}, {4, 33.9625}, {5, 28.075}, {6, 30.95}, {7, 23.85}, {8, 25.8}, {9, 30.575}, {10, 29.675}, {11, 23.325}, {12, 28.4375}, {13, 24.55}, {14, 19.25}, {15, 14.8875}, {16, 11.775}, {17, 43.8625}, {18, 19.0625}, {19, 44}, {20, 27.5625}, {21, 26.35}, {22, 39.425}, {23, 35.25}, {24, 2.5}, {25, 36.5}, {26, 28.5875}, {27, 48.6125}, {28, 30.9375}, {29, 37.85}, {30, 26.3125}, {31, 29.8375}, {32, 35.8625}, {33, 7}, {34, 34.1}, {35, 24.575}, {36, 25.975}, {37, 26.15}, {38, 24.475}, {39, 39.95}, {40, 35.5125}, {41, 31.225}, {42, 36.8375}, {43, 34.8}, {44, 20.5}, {45, 29.925}, {46, 27.225}, {47, 34.4625}, {48, 18.8375}, {49, 13.725}, {50, 35.725}, {51, 30.85}, {52, 41.55}, {53, 17.2625}, {54, 35.8625}, {55, 8.25}, {56, 29.3375}, {57, 23.2875}, {58, 18.55}, {59, 32.7125}, {60, 15.725}, {61, 19.7625}, {62, 29.6875}, {63, 25.2}, {64, 32.3375}, {65, 37.55}, {66, 30.35}, {67, 32.7}, {68, 32.7125}, {69, 24.65}, {70, 44.2375}, {71, 34.825}, {72, 17.4875}, {73, 45.1375}, {74, 38.1375}, {75, 40.25}, {76, 29.8625}, {77, 29.0125}, {78, 24.025}, {79, 7.6}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 26.175}, {1, 41.0125}, {2, 0}, {3, 11.5125}, {4, 24.575}, {5, 18.75}, {6, 22.65}, {7, 21.275}, {8, 19.85}, {9, 16.25}, {10, 16.375}, {11, 20.3375}, {12, 20}, {13, 18.6}, {14, 25.925}, {15, 26.125}, {16, 31.375}, {17, 15.25}, {18, 37.0625}, {19, 19.75}, {20, 34.2375}, {21, 23.775}, {22, 20.225}, {23, 28.5}, {24, 40.65}, {25, 27.5875}, {26, 22.6375}, {27, 7.6}, {28, 17.5}, {29, 33.2375}, {30, 32.9875}, {31, 23.1875}, {32, 5.15}, {33, 36.15}, {34, 6.9125}, {35, 21.5875}, {36, 19.2}, {37, 19.9}, {38, 25.4}, {39, 30.625}, {40, 28.7375}, {41, 12.4375}, {42, 21.275}, {43, 25.475}, {44, 27.175}, {45, 23.15}, {46, 17.95}, {47, 13.975}, {48, 22.175}, {49, 38.4875}, {50, 26.3375}, {51, 21.4}, {52, 4.5}, {53, 35.7625}, {54, 20.2875}, {55, 34.9}, {56, 36.0125}, {57, 25.15}, {58, 27.5}, {59, 25.825}, {60, 27.425}, {61, 33.2625}, {62, 18.75}, {63, 15.8125}, {64, 16.7625}, {65, 18.575}, {66, 10.6625}, {67, 15.7375}, {68, 32.025}, {69, 31.475}, {70, 22.5375}, {71, 11.225}, {72, 25.6625}, {73, 24.65}, {74, 15.75}, {75, 23.5}, {76, 27}, {77, 31.35}, {78, 28.1875}, {79, 33.4125}, 