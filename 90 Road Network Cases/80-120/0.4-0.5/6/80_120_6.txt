node_num : 80
demand_node_num : 32
edge_num : 120
damaged_edge_num : 60
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 6, 7, 13, 14, 16, 17, 18, 19, 21, 23, 24, 29, 31, 33, 37, 38, 41, 49, 50, 55, 56, 58, 60, 64, 68, 69, 73, 74, 76, 77, 78, 79,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 7), Line(0, 19), Line(0, 35), Line(1, 3), Line(1, 16), Line(1, 25), Line(1, 52), Line(2, 29), Line(2, 63), Line(3, 31), Line(3, 69), Line(3, 72), Line(4, 10), Line(4, 13), Line(4, 16), Line(4, 38), Line(5, 39), Line(5, 79), Line(6, 7), Line(6, 58), Line(6, 65), Line(8, 54), Line(8, 74), Line(9, 31), Line(9, 38), Line(9, 58), Line(10, 33), Line(10, 41), Line(10, 55), Line(11, 63), Line(11, 66), Line(12, 44), Line(12, 48), Line(13, 22), Line(13, 63), Line(14, 38), Line(14, 72), Line(14, 75), Line(15, 21), Line(15, 27), Line(16, 62), Line(17, 50), Line(17, 71), Line(18, 51), Line(18, 60), Line(19, 40), Line(19, 69), Line(19, 75), Line(20, 24), Line(20, 27), Line(20, 59), Line(20, 74), Line(21, 42), Line(21, 62), Line(22, 68), Line(22, 77), Line(23, 41), Line(23, 47), Line(23, 48), Line(23, 52), Line(23, 73), Line(24, 32), Line(24, 46), Line(25, 51), Line(25, 57), Line(26, 30), Line(26, 43), Line(26, 61), Line(26, 74), Line(27, 63), Line(28, 35), Line(28, 55), Line(28, 64), Line(29, 43), Line(29, 54), Line(29, 78), Line(30, 70), Line(30, 77), Line(31, 45), Line(31, 58), Line(31, 79), Line(32, 67), Line(33, 68), Line(34, 40), Line(34, 78), Line(35, 37), Line(35, 60), Line(35, 72), Line(36, 40), Line(36, 53), Line(37, 79), Line(38, 72), Line(39, 60), Line(41, 64), Line(42, 61), Line(44, 49), Line(44, 75), Line(45, 49), Line(45, 65), Line(46, 50), Line(46, 77), Line(47, 62), Line(47, 69), Line(47, 72), Line(50, 54), Line(53, 70), Line(55, 73), Line(56, 71), Line(56, 76), Line(57, 76), Line(59, 61), Line(59, 68), Line(59, 69), Line(61, 67), Line(62, 78), Line(65, 75), Line(66, 67), Line(67, 69), Line(71, 79), Line(72, 73),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 35), Line(1, 16), Line(2, 63), Line(3, 72), Line(4, 10), Line(4, 13), Line(4, 16), Line(4, 38), Line(5, 39), Line(5, 79), Line(9, 31), Line(9, 38), Line(10, 41), Line(11, 63), Line(12, 44), Line(13, 22), Line(13, 63), Line(14, 72), Line(14, 75), Line(15, 27), Line(16, 62), Line(17, 50), Line(18, 51), Line(18, 60), Line(19, 69), Line(20, 59), Line(21, 42), Line(22, 68), Line(23, 41), Line(24, 32), Line(26, 30), Line(26, 43), Line(26, 61), Line(26, 74), Line(27, 63), Line(29, 54), Line(30, 77), Line(31, 58), Line(31, 79), Line(35, 72), Line(37, 79), Line(38, 72), Line(41, 64), Line(42, 61), Line(44, 49), Line(44, 75), Line(45, 49), Line(46, 50), Line(46, 77), Line(47, 69), Line(47, 72), Line(50, 54), Line(53, 70), Line(56, 71), Line(57, 76), Line(59, 61), Line(59, 69), Line(65, 75), Line(71, 79), Line(72, 73),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 7, 3);
g.add_edge(0, 19, 5);
g.add_edge(0, 35, 1);
g.add_edge(1, 3, 4);
g.add_edge(1, 16, 10);
g.add_edge(1, 25, 5.38);
g.add_edge(1, 52, 2.23);
g.add_edge(2, 29, 2.82);
g.add_edge(2, 63, 5.83);
g.add_edge(3, 31, 6.32);
g.add_edge(3, 69, 7.61);
g.add_edge(3, 72, 7.28);
g.add_edge(4, 10, 4.12);
g.add_edge(4, 13, 5.38);
g.add_edge(4, 16, 8.06);
g.add_edge(4, 38, 2.82);
g.add_edge(5, 39, 8.06);
g.add_edge(5, 79, 8.06);
g.add_edge(6, 7, 7.07);
g.add_edge(6, 58, 7.81);
g.add_edge(6, 65, 8.54);
g.add_edge(8, 54, 4);
g.add_edge(8, 74, 6.4);
g.add_edge(9, 31, 7.07);
g.add_edge(9, 38, 8.54);
g.add_edge(9, 58, 7.21);
g.add_edge(10, 33, 9.21);
g.add_edge(10, 41, 3.16);
g.add_edge(10, 55, 7.81);
g.add_edge(11, 63, 5.09);
g.add_edge(11, 66, 2.23);
g.add_edge(12, 44, 3.16);
g.add_edge(12, 48, 7.81);
g.add_edge(13, 22, 8.6);
g.add_edge(13, 63, 2.23);
g.add_edge(14, 38, 5);
g.add_edge(14, 72, 4.12);
g.add_edge(14, 75, 5.65);
g.add_edge(15, 21, 9.21);
g.add_edge(15, 27, 2.82);
g.add_edge(16, 62, 4);
g.add_edge(17, 50, 6.08);
g.add_edge(17, 71, 8.24);
g.add_edge(18, 51, 9.84);
g.add_edge(18, 60, 12.04);
g.add_edge(19, 40, 4.24);
g.add_edge(19, 69, 2.23);
g.add_edge(19, 75, 6.08);
g.add_edge(20, 24, 5);
g.add_edge(20, 27, 8);
g.add_edge(20, 59, 7.21);
g.add_edge(20, 74, 8.6);
g.add_edge(21, 42, 7.07);
g.add_edge(21, 62, 9.43);
g.add_edge(22, 68, 11.31);
g.add_edge(22, 77, 1);
g.add_edge(23, 41, 3);
g.add_edge(23, 47, 3.6);
g.add_edge(23, 48, 5);
g.add_edge(23, 52, 2);
g.add_edge(23, 73, 9.43);
g.add_edge(24, 32, 2.23);
g.add_edge(24, 46, 3.6);
g.add_edge(25, 51, 4.47);
g.add_edge(25, 57, 3.6);
g.add_edge(26, 30, 2);
g.add_edge(26, 43, 3.6);
g.add_edge(26, 61, 8.48);
g.add_edge(26, 74, 8.06);
g.add_edge(27, 63, 2.23);
g.add_edge(28, 35, 6.32);
g.add_edge(28, 55, 7.07);
g.add_edge(28, 64, 2.23);
g.add_edge(29, 43, 5.38);
g.add_edge(29, 54, 5.09);
g.add_edge(29, 78, 9.84);
g.add_edge(30, 70, 5);
g.add_edge(30, 77, 9.89);
g.add_edge(31, 45, 3.16);
g.add_edge(31, 58, 1.41);
g.add_edge(31, 79, 7.07);
g.add_edge(32, 67, 6);
g.add_edge(33, 68, 7);
g.add_edge(34, 40, 6);
g.add_edge(34, 78, 1);
g.add_edge(35, 37, 7.61);
g.add_edge(35, 60, 9.89);
g.add_edge(35, 72, 7.21);
g.add_edge(36, 40, 6.4);
g.add_edge(36, 53, 7.07);
g.add_edge(37, 79, 3);
g.add_edge(38, 72, 8.24);
g.add_edge(39, 60, 8.54);
g.add_edge(41, 64, 4.47);
g.add_edge(42, 61, 4);
g.add_edge(44, 49, 7.21);
g.add_edge(44, 75, 6.4);
g.add_edge(45, 49, 5);
g.add_edge(45, 65, 4);
g.add_edge(46, 50, 6);
g.add_edge(46, 77, 9.43);
g.add_edge(47, 62, 4.47);
g.add_edge(47, 69, 5.09);
g.add_edge(47, 72, 5);
g.add_edge(50, 54, 3);
g.add_edge(53, 70, 7.07);
g.add_edge(55, 73, 2.23);
g.add_edge(56, 71, 6);
g.add_edge(56, 76, 6.4);
g.add_edge(57, 76, 2.82);
g.add_edge(59, 61, 3.6);
g.add_edge(59, 68, 5.83);
g.add_edge(59, 69, 5.09);
g.add_edge(61, 67, 7.81);
g.add_edge(62, 78, 8.94);
g.add_edge(65, 75, 4.47);
g.add_edge(66, 67, 5.09);
g.add_edge(67, 69, 4.47);
g.add_edge(71, 79, 6.08);
g.add_edge(72, 73, 2.23);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 1.9);
g.set_importance(7, 1.22);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 5.38);
g.set_importance(14, 8.55);
g.set_importance(15, 0);
g.set_importance(16, 7.23);
g.set_importance(17, 7.54);
g.set_importance(18, 5.97);
g.set_importance(19, 8.35);
g.set_importance(20, 0);
g.set_importance(21, 8.85);
g.set_importance(22, 0);
g.set_importance(23, 6.07);
g.set_importance(24, 9.27);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 6.33);
g.set_importance(30, 0);
g.set_importance(31, 3.02);
g.set_importance(32, 0);
g.set_importance(33, 9.2);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 8.19);
g.set_importance(38, 8.13);
g.set_importance(39, 0);
g.set_importance(40, 0);
g.set_importance(41, 1.43);
g.set_importance(42, 0);
g.set_importance(43, 0);
g.set_importance(44, 0);
g.set_importance(45, 0);
g.set_importance(46, 0);
g.set_importance(47, 0);
g.set_importance(48, 0);
g.set_importance(49, 7.04);
g.set_importance(50, 9.79);
g.set_importance(51, 0);
g.set_importance(52, 0);
g.set_importance(53, 0);
g.set_importance(54, 0);
g.set_importance(55, 6.78);
g.set_importance(56, 6.91);
g.set_importance(57, 0);
g.set_importance(58, 8.46);
g.set_importance(59, 0);
g.set_importance(60, 1.07);
g.set_importance(61, 0);
g.set_importance(62, 0);
g.set_importance(63, 0);
g.set_importance(64, 3.66);
g.set_importance(65, 0);
g.set_importance(66, 0);
g.set_importance(67, 0);
g.set_importance(68, 9.92);
g.set_importance(69, 5.51);
g.set_importance(70, 0);
g.set_importance(71, 0);
g.set_importance(72, 0);
g.set_importance(73, 4.4);
g.set_importance(74, 6.24);
g.set_importance(75, 0);
g.set_importance(76, 8.49);
g.set_importance(77, 7.32);
g.set_importance(78, 6.04);
g.set_importance(79, 4.72);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 35), 1.6);
g.set_repair_time(Line(1, 16), 3.04);
g.set_repair_time(Line(2, 63), 2.63);
g.set_repair_time(Line(3, 72), 4.63);
g.set_repair_time(Line(4, 10), 1.8);
g.set_repair_time(Line(4, 13), 4.53);
g.set_repair_time(Line(4, 16), 2.3);
g.set_repair_time(Line(4, 38), 1.58);
g.set_repair_time(Line(5, 39), 3.72);
g.set_repair_time(Line(5, 79), 4.03);
g.set_repair_time(Line(9, 31), 1.31);
g.set_repair_time(Line(9, 38), 2.54);
g.set_repair_time(Line(10, 41), 1.9);
g.set_repair_time(Line(11, 63), 4.01);
g.set_repair_time(Line(12, 44), 3.27);
g.set_repair_time(Line(13, 22), 4);
g.set_repair_time(Line(13, 63), 3.96);
g.set_repair_time(Line(14, 72), 4.93);
g.set_repair_time(Line(14, 75), 1.52);
g.set_repair_time(Line(15, 27), 2.43);
g.set_repair_time(Line(16, 62), 3.28);
g.set_repair_time(Line(17, 50), 4.01);
g.set_repair_time(Line(18, 51), 3.69);
g.set_repair_time(Line(18, 60), 1.04);
g.set_repair_time(Line(19, 69), 2.22);
g.set_repair_time(Line(20, 59), 1.26);
g.set_repair_time(Line(21, 42), 2.29);
g.set_repair_time(Line(22, 68), 2.48);
g.set_repair_time(Line(23, 41), 2.51);
g.set_repair_time(Line(24, 32), 3.85);
g.set_repair_time(Line(26, 30), 1.26);
g.set_repair_time(Line(26, 43), 1.42);
g.set_repair_time(Line(26, 61), 1.94);
g.set_repair_time(Line(26, 74), 4.75);
g.set_repair_time(Line(27, 63), 3.75);
g.set_repair_time(Line(29, 54), 2.03);
g.set_repair_time(Line(30, 77), 4.05);
g.set_repair_time(Line(31, 58), 4.93);
g.set_repair_time(Line(31, 79), 3.94);
g.set_repair_time(Line(35, 72), 4.76);
g.set_repair_time(Line(37, 79), 2.81);
g.set_repair_time(Line(38, 72), 2.05);
g.set_repair_time(Line(41, 64), 1.19);
g.set_repair_time(Line(42, 61), 1.52);
g.set_repair_time(Line(44, 49), 4.2);
g.set_repair_time(Line(44, 75), 1.7);
g.set_repair_time(Line(45, 49), 3.24);
g.set_repair_time(Line(46, 50), 1.14);
g.set_repair_time(Line(46, 77), 2.34);
g.set_repair_time(Line(47, 69), 1.48);
g.set_repair_time(Line(47, 72), 2.23);
g.set_repair_time(Line(50, 54), 2.38);
g.set_repair_time(Line(53, 70), 3.89);
g.set_repair_time(Line(56, 71), 1.73);
g.set_repair_time(Line(57, 76), 3.25);
g.set_repair_time(Line(59, 61), 3.83);
g.set_repair_time(Line(59, 69), 3.82);
g.set_repair_time(Line(65, 75), 1.79);
g.set_repair_time(Line(71, 79), 2.18);
g.set_repair_time(Line(72, 73), 3.8);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 23.55}, {2, 36.125}, {3, 18.55}, {4, 24.0875}, {5, 24.5875}, {6, 12.5875}, {7, 3.75}, {8, 43.1625}, {9, 31.2375}, {10, 21.475}, {11, 23.775}, {12, 25.8}, {13, 30.8125}, {14, 15.4125}, {15, 36.45}, {16, 25.9875}, {17, 32.4125}, {18, 28.6625}, {19, 6.25}, {20, 24.4125}, {21, 32.775}, {22, 36.825}, {23, 19.9}, {24, 24.9125}, {25, 30.275}, {26, 30.5}, {27, 32.925}, {28, 9.15}, {29, 32.6}, {30, 33}, {31, 23.35}, {32, 22.125}, {33, 31.4375}, {34, 19.05}, {35, 1.25}, {36, 19.55}, {37, 10.7625}, {38, 20.5625}, {39, 24.2875}, {40, 11.55}, {41, 17.525}, {42, 24.9}, {43, 35}, {44, 21.85}, {45, 24.4375}, {46, 29.4125}, {47, 15.4}, {48, 26.15}, {49, 30.6875}, {50, 36.9125}, {51, 35.8625}, {52, 22.4}, {53, 28.3875}, {54, 38.9625}, {55, 15.8375}, {56, 29.6125}, {57, 34.775}, {58, 22.35}, {59, 15.4}, {60, 13.6125}, {61, 19.9}, {62, 20.9875}, {63, 30.1375}, {64, 11.9375}, {65, 19.4375}, {66, 20.9875}, {67, 14.625}, {68, 22.6875}, {69, 9.0375}, {70, 37.225}, {71, 22.1125}, {72, 10.2625}, {73, 13.05}, {74, 35.1625}, {75, 13.85}, {76, 37.6125}, {77, 38.075}, {78, 20.3}, {79, 14.5125}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 23.55}, {1, 0}, {2, 34.9375}, {3, 5}, {4, 18.1375}, {5, 31.8125}, {6, 24.425}, {7, 27.3}, {8, 48.6375}, {9, 21.7375}, {10, 12.9875}, {11, 29.25}, {12, 21.3}, {13, 24.8625}, {14, 19.25}, {15, 33.9625}, {16, 12.5}, {17, 39.6375}, {18, 24.6125}, {19, 17.3}, {20, 29.8875}, {21, 27.1625}, {22, 35.6125}, {23, 5.2875}, {24, 30.3875}, {25, 6.725}, {26, 35.975}, {27, 30.4375}, {28, 17.4125}, {29, 38.4625}, {30, 38.475}, {31, 12.9}, {32, 27.6}, {33, 24.5}, {34, 27.8}, {35, 23.1125}, {36, 30.6}, {37, 25.4875}, {38, 21.6625}, {39, 41.8875}, {40, 22.6}, {41, 9.0375}, {42, 30.375}, {43, 40.475}, {44, 25.25}, {45, 16.85}, {46, 34.8875}, {47, 9.7875}, {48, 11.5375}, {49, 23.1}, {50, 42.3875}, {51, 12.3125}, {52, 2.7875}, {53, 39.4375}, {54, 44.825}, {55, 19.675}, {56, 22.75}, {57, 11.225}, {58, 14.6625}, {59, 20.875}, {60, 35.475}, {61, 25.375}, {62, 15.375}, {63, 27.65}, {64, 14.625}, {65, 21.85}, {66, 26.4625}, {67, 20.1}, {68, 28.1625}, {69, 14.5125}, {70, 44.725}, {71, 29.3375}, {72, 14.1}, {73, 16.8875}, {74, 40.6375}, {75, 24.9}, {76, 14.75}, {77, 36.8625}, {78, 26.55}, {79, 21.7375}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 36.125}, {1, 34.9375}, {2, 0}, {3, 37.9}, {4, 16.8}, {5, 49.2125}, {6, 48.7125}, {7, 39.875}, {8, 14.8875}, {9, 31}, {10, 21.95}, {11, 13.65}, {12, 45.5875}, {13, 10.075}, {14, 26.575}, {15, 13.6}, {16, 26.875}, {17, 21.2375}, {18, 59.55}, {19, 29.875}, {20, 20.075}, {21, 25.1125}, {22, 20.825}, {23, 29.65}, {24, 25.6375}, {25, 41.6625}, {26, 14.75}, {27, 10.075}, {28, 34.275}, {29, 3.525}, {30, 17.25}, {31, 39.8375}, {32, 28.425}, {33, 33.4625}, {34, 17.075}, {35, 37.375}, {36, 32.575}, {37, 42.8875}, {38, 20.325}, {39, 59.2875}, {40, 24.575}, {41, 25.9}, {42, 30.35}, {43, 10.25}, {44, 41.6375}, {45, 43.7875}, {46, 21.1375}, {47, 32.5875}, {48, 35.9}, {49, 50.0375}, {50, 13.6375}, {51, 47.25}, {52, 32.15}, {53, 32.3375}, {54, 9.8875}, {55, 31.7125}, {56, 39.0375}, {57, 46.1625}, {58, 40.0125}, {59, 29.0875}, {60, 49.7375}, {61, 25.35}, {62, 27}, {63, 7.2875}, {64, 31.4875}, {65, 39.225}, {66, 16.4375}, {67, 22.8}, {68, 34.9625}, {69, 28.3875}, {70, 23.5}, {71, 31.5375}, {72, 30.625}, {73, 33.4125}, {74, 22.8875}, {75, 33.6375}, {76, 47.0375}, {77, 22.075}, {78, 15.825}, {79, 39.1375}, 