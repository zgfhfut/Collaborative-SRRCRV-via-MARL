node_num : 40
demand_node_num : 24
edge_num : 60
damaged_edge_num : 42
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 22, 23, 24, 26, 27, 30, 31, 33, 34, 35, 36, 37, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 14), Line(0, 15), Line(0, 25), Line(0, 36), Line(1, 2), Line(1, 20), Line(1, 31), Line(2, 16), Line(2, 22), Line(3, 12), Line(3, 27), Line(3, 28), Line(4, 10), Line(4, 12), Line(4, 33), Line(5, 21), Line(5, 24), Line(6, 12), Line(6, 19), Line(6, 22), Line(6, 26), Line(7, 21), Line(7, 35), Line(8, 23), Line(8, 29), Line(8, 36), Line(9, 17), Line(9, 22), Line(9, 39), Line(10, 35), Line(11, 20), Line(11, 23), Line(11, 38), Line(12, 34), Line(13, 15), Line(13, 16), Line(13, 30), Line(13, 33), Line(14, 30), Line(15, 20), Line(15, 39), Line(17, 18), Line(17, 27), Line(18, 32), Line(18, 39), Line(19, 25), Line(20, 28), Line(22, 26), Line(23, 38), Line(24, 28), Line(25, 31), Line(26, 35), Line(26, 37), Line(27, 35), Line(29, 33), Line(30, 37), Line(30, 39), Line(32, 38), Line(34, 37), Line(34, 38),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 36), Line(1, 20), Line(1, 31), Line(2, 16), Line(2, 22), Line(3, 12), Line(3, 28), Line(4, 10), Line(4, 12), Line(4, 33), Line(5, 21), Line(6, 12), Line(6, 22), Line(6, 26), Line(7, 21), Line(7, 35), Line(8, 23), Line(9, 22), Line(9, 39), Line(10, 35), Line(11, 20), Line(11, 23), Line(11, 38), Line(12, 34), Line(13, 15), Line(13, 16), Line(13, 30), Line(13, 33), Line(14, 30), Line(15, 39), Line(18, 39), Line(19, 25), Line(20, 28), Line(22, 26), Line(23, 38), Line(25, 31), Line(26, 35), Line(26, 37), Line(29, 33), Line(30, 37), Line(30, 39), Line(32, 38),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 14, 5.38516);
g.add_edge(0, 15, 3.16228);
g.add_edge(0, 25, 6);
g.add_edge(0, 36, 5);
g.add_edge(1, 2, 5.38516);
g.add_edge(1, 20, 2);
g.add_edge(1, 31, 5.83095);
g.add_edge(2, 16, 1.41421);
g.add_edge(2, 22, 4.47214);
g.add_edge(3, 12, 8.06226);
g.add_edge(3, 27, 7.81025);
g.add_edge(3, 28, 6.08276);
g.add_edge(4, 10, 3.60555);
g.add_edge(4, 12, 4.12311);
g.add_edge(4, 33, 10.8167);
g.add_edge(5, 21, 7.61577);
g.add_edge(5, 24, 8.06226);
g.add_edge(6, 12, 6.40312);
g.add_edge(6, 19, 4);
g.add_edge(6, 22, 4.47214);
g.add_edge(6, 26, 4.47214);
g.add_edge(7, 21, 5.09902);
g.add_edge(7, 35, 7.61577);
g.add_edge(8, 23, 4.47214);
g.add_edge(8, 29, 9.21954);
g.add_edge(8, 36, 3.16228);
g.add_edge(9, 17, 2.82843);
g.add_edge(9, 22, 3.60555);
g.add_edge(9, 39, 5.38516);
g.add_edge(10, 35, 6.08276);
g.add_edge(11, 20, 8.60233);
g.add_edge(11, 23, 7.28011);
g.add_edge(11, 38, 9.84886);
g.add_edge(12, 34, 3.16228);
g.add_edge(13, 15, 6.08276);
g.add_edge(13, 16, 3.16228);
g.add_edge(13, 30, 9.84886);
g.add_edge(13, 33, 8.544);
g.add_edge(14, 30, 4.12311);
g.add_edge(15, 20, 7.07107);
g.add_edge(15, 39, 1);
g.add_edge(17, 18, 5.38516);
g.add_edge(17, 27, 4.47214);
g.add_edge(18, 32, 4);
g.add_edge(18, 39, 2.82843);
g.add_edge(19, 25, 9.21954);
g.add_edge(20, 28, 3.16228);
g.add_edge(22, 26, 2.82843);
g.add_edge(23, 38, 2.82843);
g.add_edge(24, 28, 5.09902);
g.add_edge(25, 31, 7.07107);
g.add_edge(26, 35, 2);
g.add_edge(26, 37, 3.60555);
g.add_edge(27, 35, 4.12311);
g.add_edge(29, 33, 10.2956);
g.add_edge(30, 37, 6);
g.add_edge(30, 39, 5.38516);
g.add_edge(32, 38, 6);
g.add_edge(34, 37, 6.32456);
g.add_edge(34, 38, 3);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 8.86);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 4.51);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 5.56);
g.set_importance(10, 9.97);
g.set_importance(11, 1.17);
g.set_importance(12, 4.29);
g.set_importance(13, 3.17);
g.set_importance(14, 4.29);
g.set_importance(15, 0);
g.set_importance(16, 6.04);
g.set_importance(17, 3.11);
g.set_importance(18, 2.38);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 9.32);
g.set_importance(23, 2.39);
g.set_importance(24, 4.19);
g.set_importance(25, 0);
g.set_importance(26, 4.59);
g.set_importance(27, 7.01);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 8.69);
g.set_importance(31, 4.72);
g.set_importance(32, 0);
g.set_importance(33, 7.93);
g.set_importance(34, 8.57);
g.set_importance(35, 3.44);
g.set_importance(36, 9.51);
g.set_importance(37, 7.2);
g.set_importance(38, 0);
g.set_importance(39, 5.78);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 36), 1.24);
g.set_repair_time(Line(1, 20), 1.43);
g.set_repair_time(Line(1, 31), 3.6);
g.set_repair_time(Line(2, 16), 3.25);
g.set_repair_time(Line(2, 22), 4.12);
g.set_repair_time(Line(3, 12), 3.3);
g.set_repair_time(Line(3, 28), 2.08);
g.set_repair_time(Line(4, 10), 1.51);
g.set_repair_time(Line(4, 12), 2.32);
g.set_repair_time(Line(4, 33), 1.35);
g.set_repair_time(Line(5, 21), 3.66);
g.set_repair_time(Line(6, 12), 2.15);
g.set_repair_time(Line(6, 22), 1.58);
g.set_repair_time(Line(6, 26), 4.23);
g.set_repair_time(Line(7, 21), 2.58);
g.set_repair_time(Line(7, 35), 3.27);
g.set_repair_time(Line(8, 23), 4.79);
g.set_repair_time(Line(9, 22), 2.63);
g.set_repair_time(Line(9, 39), 1.19);
g.set_repair_time(Line(10, 35), 4.04);
g.set_repair_time(Line(11, 20), 1.67);
g.set_repair_time(Line(11, 23), 3.43);
g.set_repair_time(Line(11, 38), 1.38);
g.set_repair_time(Line(12, 34), 2.28);
g.set_repair_time(Line(13, 15), 4.37);
g.set_repair_time(Line(13, 16), 4.45);
g.set_repair_time(Line(13, 30), 3.33);
g.set_repair_time(Line(13, 33), 4.21);
g.set_repair_time(Line(14, 30), 3.4);
g.set_repair_time(Line(15, 39), 2.71);
g.set_repair_time(Line(18, 39), 2.93);
g.set_repair_time(Line(19, 25), 4.06);
g.set_repair_time(Line(20, 28), 2.56);
g.set_repair_time(Line(22, 26), 4.08);
g.set_repair_time(Line(23, 38), 1.47);
g.set_repair_time(Line(25, 31), 4.28);
g.set_repair_time(Line(26, 35), 4.37);
g.set_repair_time(Line(26, 37), 2.18);
g.set_repair_time(Line(29, 33), 2.95);
g.set_repair_time(Line(30, 37), 1.04);
g.set_repair_time(Line(30, 39), 4.48);
g.set_repair_time(Line(32, 38), 2.11);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 15.2917}, {2, 17.2769}, {3, 24.348}, {4, 32.1853}, {5, 33.1961}, {6, 22.0314}, {7, 31.9965}, {8, 10.2028}, {9, 11.9343}, {10, 30.0802}, {11, 23.5446}, {12, 27.0314}, {13, 11.5563}, {14, 6.73146}, {15, 3.95285}, {16, 15.5091}, {17, 15.4698}, {18, 8.73838}, {19, 19.0244}, {20, 12.7917}, {21, 38.3703}, {22, 16.4412}, {23, 15.793}, {24, 23.1183}, {25, 7.5}, {26, 19.9768}, {27, 21.06}, {28, 16.7445}, {29, 21.7273}, {30, 11.8853}, {31, 16.3388}, {32, 13.7384}, {33, 22.2363}, {34, 23.0786}, {35, 22.4768}, {36, 6.25}, {37, 19.3853}, {38, 19.3286}, {39, 5.20285}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 15.2917}, {1, 0}, {2, 6.73146}, {3, 14.0563}, {4, 29.288}, {5, 22.9044}, {6, 17.9118}, {7, 27.8769}, {8, 25.4945}, {9, 16.8286}, {10, 25.9606}, {11, 13.2529}, {12, 24.1341}, {13, 12.4521}, {14, 22.0231}, {15, 11.3388}, {16, 8.49922}, {17, 20.3641}, {18, 16.1244}, {19, 22.9118}, {20, 2.5}, {21, 32.4242}, {22, 12.3216}, {23, 22.353}, {24, 12.8266}, {25, 16.1275}, {26, 15.8572}, {27, 23.511}, {28, 6.45285}, {29, 36.0016}, {30, 19.3203}, {31, 7.28869}, {32, 21.1244}, {33, 23.1321}, {34, 28.087}, {35, 18.3572}, {36, 21.5417}, {37, 20.3641}, {38, 25.564}, {39, 12.5888}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 17.2769}, {1, 6.73146}, {2, 0}, {3, 20.7878}, {4, 23.7361}, {5, 29.6359}, {6, 11.1803}, {7, 21.1454}, {8, 27.4798}, {9, 10.0971}, {10, 19.2292}, {11, 19.9844}, {12, 19.1842}, {13, 5.72061}, {14, 23.1856}, {15, 13.3241}, {16, 1.76777}, {17, 13.6326}, {18, 18.1096}, {19, 16.1803}, {20, 9.23146}, {21, 27.5192}, {22, 5.59017}, {23, 28.8239}, {24, 19.5581}, {25, 22.859}, {26, 9.1257}, {27, 16.7796}, {28, 13.1843}, {29, 29.2702}, {30, 18.0317}, {31, 14.0201}, {32, 23.1096}, {33, 16.4006}, {34, 21.5383}, {35, 11.6257}, {36, 23.5269}, {37, 13.6326}, {38, 25.2883}, {39, 14.5741}, 