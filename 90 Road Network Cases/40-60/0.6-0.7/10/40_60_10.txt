node_num : 40
demand_node_num : 24
edge_num : 60
damaged_edge_num : 42
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 4, 7, 9, 12, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 13), Line(0, 33), Line(0, 39), Line(1, 16), Line(1, 36), Line(2, 9), Line(2, 29), Line(2, 34), Line(2, 39), Line(3, 8), Line(3, 24), Line(4, 12), Line(4, 17), Line(5, 14), Line(5, 15), Line(5, 16), Line(5, 23), Line(6, 22), Line(6, 26), Line(6, 31), Line(7, 10), Line(7, 19), Line(7, 27), Line(7, 30), Line(8, 35), Line(9, 10), Line(9, 14), Line(9, 19), Line(9, 32), Line(9, 33), Line(10, 20), Line(10, 25), Line(11, 15), Line(11, 21), Line(11, 35), Line(11, 37), Line(12, 21), Line(13, 36), Line(14, 19), Line(14, 20), Line(15, 21), Line(16, 26), Line(17, 26), Line(18, 20), Line(18, 27), Line(18, 30), Line(19, 25), Line(21, 32), Line(22, 30), Line(23, 31), Line(23, 32), Line(24, 34), Line(25, 35), Line(26, 33), Line(27, 31), Line(28, 32), Line(28, 33), Line(29, 38), Line(31, 39), Line(34, 37),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 13), Line(0, 33), Line(0, 39), Line(1, 16), Line(1, 36), Line(2, 9), Line(2, 29), Line(2, 39), Line(3, 8), Line(4, 12), Line(4, 17), Line(5, 14), Line(5, 15), Line(5, 16), Line(5, 23), Line(6, 26), Line(6, 31), Line(7, 10), Line(7, 27), Line(7, 30), Line(9, 14), Line(9, 19), Line(9, 32), Line(9, 33), Line(10, 25), Line(11, 37), Line(14, 20), Line(15, 21), Line(16, 26), Line(18, 27), Line(18, 30), Line(21, 32), Line(23, 31), Line(23, 32), Line(24, 34), Line(25, 35), Line(26, 33), Line(27, 31), Line(28, 32), Line(28, 33), Line(29, 38), Line(34, 37),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 13, 6.7082);
g.add_edge(0, 33, 7.2111);
g.add_edge(0, 39, 8.06226);
g.add_edge(1, 16, 9.43398);
g.add_edge(1, 36, 3);
g.add_edge(2, 9, 6.08276);
g.add_edge(2, 29, 6.32456);
g.add_edge(2, 34, 5.09902);
g.add_edge(2, 39, 4.12311);
g.add_edge(3, 8, 1.41421);
g.add_edge(3, 24, 8.06226);
g.add_edge(4, 12, 4.47214);
g.add_edge(4, 17, 7.07107);
g.add_edge(5, 14, 2);
g.add_edge(5, 15, 9.21954);
g.add_edge(5, 16, 8.06226);
g.add_edge(5, 23, 9);
g.add_edge(6, 22, 3.60555);
g.add_edge(6, 26, 3.60555);
g.add_edge(6, 31, 4);
g.add_edge(7, 10, 2);
g.add_edge(7, 19, 3);
g.add_edge(7, 27, 5);
g.add_edge(7, 30, 4.47214);
g.add_edge(8, 35, 2);
g.add_edge(9, 10, 7.61577);
g.add_edge(9, 14, 1);
g.add_edge(9, 19, 7.28011);
g.add_edge(9, 32, 2.82843);
g.add_edge(9, 33, 7.28011);
g.add_edge(10, 20, 5.83095);
g.add_edge(10, 25, 7.28011);
g.add_edge(11, 15, 7);
g.add_edge(11, 21, 5.38516);
g.add_edge(11, 35, 8.06226);
g.add_edge(11, 37, 7.61577);
g.add_edge(12, 21, 5.83095);
g.add_edge(13, 36, 9.48683);
g.add_edge(14, 19, 8.24621);
g.add_edge(14, 20, 6.7082);
g.add_edge(15, 21, 7.07107);
g.add_edge(16, 26, 6);
g.add_edge(17, 26, 8.94427);
g.add_edge(18, 20, 2.23607);
g.add_edge(18, 27, 5.65685);
g.add_edge(18, 30, 5.38516);
g.add_edge(19, 25, 7.61577);
g.add_edge(21, 32, 3.16228);
g.add_edge(22, 30, 3.16228);
g.add_edge(23, 31, 5);
g.add_edge(23, 32, 6);
g.add_edge(24, 34, 5.83095);
g.add_edge(25, 35, 3);
g.add_edge(26, 33, 5);
g.add_edge(27, 31, 5.83095);
g.add_edge(28, 32, 1.41421);
g.add_edge(28, 33, 6.08276);
g.add_edge(29, 38, 8.544);
g.add_edge(31, 39, 5);
g.add_edge(34, 37, 2.82843);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 1.6);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 6.73);
g.set_importance(8, 0);
g.set_importance(9, 5.03);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 5.96);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 1.44);
g.set_importance(17, 2.81);
g.set_importance(18, 6.56);
g.set_importance(19, 4.56);
g.set_importance(20, 3.23);
g.set_importance(21, 9.94);
g.set_importance(22, 4.73);
g.set_importance(23, 0);
g.set_importance(24, 5.13);
g.set_importance(25, 0);
g.set_importance(26, 4.72);
g.set_importance(27, 1.82);
g.set_importance(28, 6.98);
g.set_importance(29, 1.11);
g.set_importance(30, 9.76);
g.set_importance(31, 6.24);
g.set_importance(32, 0);
g.set_importance(33, 4.56);
g.set_importance(34, 5);
g.set_importance(35, 4.31);
g.set_importance(36, 4.02);
g.set_importance(37, 8.77);
g.set_importance(38, 0);
g.set_importance(39, 4.03);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 13), 4.65);
g.set_repair_time(Line(0, 33), 2.24);
g.set_repair_time(Line(0, 39), 1.99);
g.set_repair_time(Line(1, 16), 3.65);
g.set_repair_time(Line(1, 36), 1.52);
g.set_repair_time(Line(2, 9), 2.9);
g.set_repair_time(Line(2, 29), 1.8);
g.set_repair_time(Line(2, 39), 2.69);
g.set_repair_time(Line(3, 8), 1.95);
g.set_repair_time(Line(4, 12), 3.4);
g.set_repair_time(Line(4, 17), 2.93);
g.set_repair_time(Line(5, 14), 4.74);
g.set_repair_time(Line(5, 15), 3.5);
g.set_repair_time(Line(5, 16), 1.34);
g.set_repair_time(Line(5, 23), 4.54);
g.set_repair_time(Line(6, 26), 4.47);
g.set_repair_time(Line(6, 31), 1.77);
g.set_repair_time(Line(7, 10), 1.86);
g.set_repair_time(Line(7, 27), 3.99);
g.set_repair_time(Line(7, 30), 3.14);
g.set_repair_time(Line(9, 14), 4.06);
g.set_repair_time(Line(9, 19), 3.3);
g.set_repair_time(Line(9, 32), 2.09);
g.set_repair_time(Line(9, 33), 2.73);
g.set_repair_time(Line(10, 25), 4.01);
g.set_repair_time(Line(11, 37), 2.43);
g.set_repair_time(Line(14, 20), 2.69);
g.set_repair_time(Line(15, 21), 3.66);
g.set_repair_time(Line(16, 26), 1.86);
g.set_repair_time(Line(18, 27), 4.79);
g.set_repair_time(Line(18, 30), 3.01);
g.set_repair_time(Line(21, 32), 2.87);
g.set_repair_time(Line(23, 31), 4.21);
g.set_repair_time(Line(23, 32), 3.04);
g.set_repair_time(Line(24, 34), 2.95);
g.set_repair_time(Line(25, 35), 4.4);
g.set_repair_time(Line(26, 33), 2.87);
g.set_repair_time(Line(27, 31), 4.4);
g.set_repair_time(Line(28, 32), 2.75);
g.set_repair_time(Line(28, 33), 2.31);
g.set_repair_time(Line(29, 38), 4.05);
g.set_repair_time(Line(34, 37), 3.91);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 23.9938}, {2, 15.2317}, {3, 38.972}, {4, 35.2168}, {5, 21.864}, {6, 19.7708}, {7, 29.8665}, {8, 40.7398}, {9, 18.114}, {10, 27.6337}, {11, 29.0694}, {12, 29.6266}, {13, 8.38525}, {14, 19.364}, {15, 31.1768}, {16, 22.7639}, {17, 26.4442}, {18, 30.5444}, {19, 27.2142}, {20, 27.7493}, {21, 22.3379}, {22, 24.2778}, {23, 22.5778}, {24, 28.8942}, {25, 36.7339}, {26, 15.2639}, {27, 23.6165}, {28, 16.6173}, {29, 23.1374}, {30, 28.2306}, {31, 16.3278}, {32, 18.3851}, {33, 9.01388}, {34, 21.6055}, {35, 39.1472}, {36, 20.2438}, {37, 25.141}, {38, 33.8174}, {39, 10.0778}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 23.9938}, {1, 0}, {2, 33.2238}, {3, 52.2155}, {4, 39.3117}, {5, 21.8703}, {6, 23.7994}, {7, 37.64}, {8, 50.4478}, {9, 25.6203}, {10, 35.14}, {11, 39.8401}, {12, 40.3974}, {13, 15.6085}, {14, 24.3703}, {15, 33.3947}, {16, 11.7925}, {17, 30.4728}, {18, 35.5506}, {19, 34.6781}, {20, 32.7556}, {21, 33.1087}, {22, 28.3064}, {23, 33.1203}, {24, 46.8862}, {25, 44.1978}, {26, 19.2925}, {27, 36.0881}, {28, 30.9236}, {29, 41.1294}, {30, 32.2592}, {31, 28.7994}, {32, 29.1558}, {33, 25.5425}, {34, 39.5975}, {35, 47.9478}, {36, 3.75}, {37, 43.1331}, {38, 51.8095}, {39, 34.0716}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 15.2317}, {1, 33.2238}, {2, 0}, {3, 23.7403}, {4, 27.9707}, {5, 11.3535}, {6, 16.4039}, {7, 19.6232}, {8, 25.5081}, {9, 7.60345}, {10, 17.1232}, {11, 19.429}, {12, 22.3805}, {13, 23.617}, {14, 8.85345}, {15, 22.8779}, {16, 21.4313}, {17, 32.0912}, {18, 20.0338}, {19, 16.7036}, {20, 17.2387}, {21, 15.0918}, {22, 20.9108}, {23, 17.6539}, {24, 13.6625}, {25, 26.2233}, {26, 20.9108}, {27, 18.6926}, {28, 12.9068}, {29, 7.90569}, {30, 24.8637}, {31, 11.4039}, {32, 11.139}, {33, 16.7036}, {34, 6.37377}, {35, 28.0081}, {36, 35.4755}, {37, 9.90931}, {38, 18.5857}, {39, 5.15388}, 