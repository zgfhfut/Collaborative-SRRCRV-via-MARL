node_num : 40
demand_node_num : 24
edge_num : 60
damaged_edge_num : 42
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 6, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 37, 38, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 11), Line(0, 14), Line(0, 19), Line(0, 31), Line(1, 19), Line(1, 39), Line(2, 7), Line(2, 34), Line(3, 17), Line(3, 23), Line(4, 30), Line(4, 33), Line(5, 15), Line(5, 29), Line(5, 32), Line(5, 33), Line(6, 26), Line(6, 27), Line(6, 30), Line(6, 37), Line(7, 20), Line(8, 14), Line(8, 35), Line(9, 31), Line(9, 38), Line(9, 39), Line(10, 13), Line(10, 15), Line(10, 25), Line(10, 29), Line(11, 34), Line(11, 38), Line(12, 24), Line(12, 37), Line(13, 23), Line(13, 26), Line(13, 31), Line(15, 17), Line(15, 21), Line(16, 17), Line(16, 32), Line(16, 36), Line(17, 32), Line(18, 28), Line(18, 38), Line(19, 24), Line(20, 27), Line(20, 32), Line(21, 33), Line(22, 26), Line(22, 38), Line(23, 31), Line(25, 27), Line(27, 32), Line(28, 32), Line(28, 33), Line(28, 35), Line(29, 32), Line(31, 36), Line(32, 33),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 11), Line(0, 14), Line(0, 31), Line(1, 39), Line(2, 7), Line(2, 34), Line(3, 17), Line(3, 23), Line(4, 30), Line(4, 33), Line(5, 15), Line(5, 33), Line(6, 26), Line(6, 30), Line(6, 37), Line(7, 20), Line(8, 35), Line(9, 31), Line(10, 13), Line(10, 15), Line(10, 25), Line(11, 34), Line(11, 38), Line(12, 24), Line(12, 37), Line(13, 23), Line(15, 17), Line(15, 21), Line(16, 17), Line(16, 32), Line(16, 36), Line(17, 32), Line(18, 28), Line(18, 38), Line(19, 24), Line(20, 27), Line(21, 33), Line(22, 26), Line(23, 31), Line(27, 32), Line(31, 36), Line(32, 33),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 11, 3.60555);
g.add_edge(0, 14, 6.08276);
g.add_edge(0, 19, 7.07107);
g.add_edge(0, 31, 6.32456);
g.add_edge(1, 19, 6.08276);
g.add_edge(1, 39, 2);
g.add_edge(2, 7, 2);
g.add_edge(2, 34, 7.07107);
g.add_edge(3, 17, 5.65685);
g.add_edge(3, 23, 4);
g.add_edge(4, 30, 7.28011);
g.add_edge(4, 33, 2.23607);
g.add_edge(5, 15, 7.07107);
g.add_edge(5, 29, 9.21954);
g.add_edge(5, 32, 9.89949);
g.add_edge(5, 33, 8.06226);
g.add_edge(6, 26, 10.8167);
g.add_edge(6, 27, 5);
g.add_edge(6, 30, 8);
g.add_edge(6, 37, 7);
g.add_edge(7, 20, 4.47214);
g.add_edge(8, 14, 6.08276);
g.add_edge(8, 35, 7.81025);
g.add_edge(9, 31, 7.81025);
g.add_edge(9, 38, 3);
g.add_edge(9, 39, 2);
g.add_edge(10, 13, 3);
g.add_edge(10, 15, 6);
g.add_edge(10, 25, 9.43398);
g.add_edge(10, 29, 9.21954);
g.add_edge(11, 34, 4.12311);
g.add_edge(11, 38, 2.23607);
g.add_edge(12, 24, 3.60555);
g.add_edge(12, 37, 6.40312);
g.add_edge(13, 23, 5.65685);
g.add_edge(13, 26, 5.38516);
g.add_edge(13, 31, 8.94427);
g.add_edge(15, 17, 7);
g.add_edge(15, 21, 5.09902);
g.add_edge(16, 17, 8.06226);
g.add_edge(16, 32, 7.07107);
g.add_edge(16, 36, 8.06226);
g.add_edge(17, 32, 10.6301);
g.add_edge(18, 28, 6.40312);
g.add_edge(18, 38, 4.24264);
g.add_edge(19, 24, 9.21954);
g.add_edge(20, 27, 4.12311);
g.add_edge(20, 32, 8.06226);
g.add_edge(21, 33, 6.40312);
g.add_edge(22, 26, 7.28011);
g.add_edge(22, 38, 5.65685);
g.add_edge(23, 31, 4);
g.add_edge(25, 27, 3);
g.add_edge(27, 32, 4);
g.add_edge(28, 32, 4.47214);
g.add_edge(28, 33, 4.12311);
g.add_edge(28, 35, 7.2111);
g.add_edge(29, 32, 1);
g.add_edge(31, 36, 6);
g.add_edge(32, 33, 3);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 8.76);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 1.07);
g.set_importance(7, 0);
g.set_importance(8, 6.57);
g.set_importance(9, 5.54);
g.set_importance(10, 7.66);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 1.41);
g.set_importance(15, 6.09);
g.set_importance(16, 3.89);
g.set_importance(17, 4.09);
g.set_importance(18, 6.98);
g.set_importance(19, 0);
g.set_importance(20, 6.7);
g.set_importance(21, 5.75);
g.set_importance(22, 8.65);
g.set_importance(23, 3.77);
g.set_importance(24, 1.2);
g.set_importance(25, 1.41);
g.set_importance(26, 0);
g.set_importance(27, 9.18);
g.set_importance(28, 4.46);
g.set_importance(29, 1.65);
g.set_importance(30, 3.6);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 6.69);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 6.55);
g.set_importance(38, 9.39);
g.set_importance(39, 4.14);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 11), 4.34);
g.set_repair_time(Line(0, 14), 1.8);
g.set_repair_time(Line(0, 31), 2.53);
g.set_repair_time(Line(1, 39), 4.13);
g.set_repair_time(Line(2, 7), 3.72);
g.set_repair_time(Line(2, 34), 1.09);
g.set_repair_time(Line(3, 17), 4.71);
g.set_repair_time(Line(3, 23), 3.31);
g.set_repair_time(Line(4, 30), 3.38);
g.set_repair_time(Line(4, 33), 1.11);
g.set_repair_time(Line(5, 15), 2.83);
g.set_repair_time(Line(5, 33), 4.93);
g.set_repair_time(Line(6, 26), 3.89);
g.set_repair_time(Line(6, 30), 3.77);
g.set_repair_time(Line(6, 37), 3.38);
g.set_repair_time(Line(7, 20), 1.89);
g.set_repair_time(Line(8, 35), 1.04);
g.set_repair_time(Line(9, 31), 3.6);
g.set_repair_time(Line(10, 13), 4.23);
g.set_repair_time(Line(10, 15), 3.84);
g.set_repair_time(Line(10, 25), 2.35);
g.set_repair_time(Line(11, 34), 4.94);
g.set_repair_time(Line(11, 38), 2.5);
g.set_repair_time(Line(12, 24), 2.22);
g.set_repair_time(Line(12, 37), 3.28);
g.set_repair_time(Line(13, 23), 1.42);
g.set_repair_time(Line(15, 17), 4.88);
g.set_repair_time(Line(15, 21), 2.11);
g.set_repair_time(Line(16, 17), 3.3);
g.set_repair_time(Line(16, 32), 3.84);
g.set_repair_time(Line(16, 36), 1.21);
g.set_repair_time(Line(17, 32), 4.24);
g.set_repair_time(Line(18, 28), 2.57);
g.set_repair_time(Line(18, 38), 2);
g.set_repair_time(Line(19, 24), 2.65);
g.set_repair_time(Line(20, 27), 3.69);
g.set_repair_time(Line(21, 33), 1.13);
g.set_repair_time(Line(22, 26), 5);
g.set_repair_time(Line(23, 31), 1.88);
g.set_repair_time(Line(27, 32), 3.3);
g.set_repair_time(Line(31, 36), 2.19);
g.set_repair_time(Line(32, 33), 1.06);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 16.052}, {2, 18.4997}, {3, 17.9057}, {4, 28.5582}, {5, 35.8409}, {6, 36.994}, {7, 20.9997}, {8, 15.2069}, {9, 11.052}, {10, 22.836}, {11, 4.50694}, {12, 24.8702}, {13, 19.086}, {14, 7.60345}, {15, 30.336}, {16, 25.4835}, {17, 24.9768}, {18, 12.6053}, {19, 8.83883}, {20, 26.5898}, {21, 33.767}, {22, 14.3731}, {23, 12.9057}, {24, 20.3633}, {25, 34.6285}, {26, 23.4732}, {27, 31.1994}, {28, 20.6092}, {29, 27.4494}, {30, 37.6583}, {31, 7.90569}, {32, 26.1994}, {33, 25.7631}, {34, 9.66082}, {35, 24.9697}, {36, 15.4057}, {37, 32.8741}, {38, 7.30202}, {39, 13.552}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 16.052}, {1, 0}, {2, 25.5378}, {3, 24.7628}, {4, 30.0062}, {5, 37.2889}, {6, 38.442}, {7, 28.0378}, {8, 31.2589}, {9, 5}, {10, 29.6932}, {11, 11.5451}, {12, 23.6348}, {13, 25.9432}, {14, 23.6555}, {15, 37.1932}, {16, 32.3406}, {17, 31.8339}, {18, 14.0533}, {19, 7.60345}, {20, 33.628}, {21, 35.215}, {22, 15.8211}, {23, 19.7628}, {24, 19.1279}, {25, 36.3974}, {26, 24.9212}, {27, 32.6474}, {28, 22.0572}, {29, 28.8974}, {30, 39.1063}, {31, 14.7628}, {32, 27.6474}, {33, 27.2111}, {34, 16.699}, {35, 31.0711}, {36, 22.2628}, {37, 31.6387}, {38, 8.75}, {39, 2.5}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 18.4997}, {1, 25.5378}, {2, 0}, {3, 36.4054}, {4, 24.7131}, {5, 30.5424}, {6, 19.4941}, {7, 2.5}, {8, 33.7066}, {9, 20.5378}, {10, 28.7865}, {11, 13.9927}, {12, 36.248}, {13, 32.5365}, {14, 26.1031}, {15, 36.2865}, {16, 27.0068}, {17, 31.4557}, {18, 22.0911}, {19, 27.3385}, {20, 8.09017}, {21, 29.9219}, {22, 23.8589}, {23, 31.4054}, {24, 38.8629}, {25, 16.9941}, {26, 32.959}, {27, 13.2441}, {28, 23.7582}, {29, 19.418}, {30, 29.4941}, {31, 26.4054}, {32, 18.168}, {33, 21.918}, {34, 8.83883}, {35, 32.772}, {36, 33.9054}, {37, 28.2441}, {38, 16.7878}, {39, 23.0378}, 