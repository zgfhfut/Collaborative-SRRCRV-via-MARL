node_num : 40
demand_node_num : 24
edge_num : 60
damaged_edge_num : 42
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 31, 34, 37, 38, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 13), Line(0, 22), Line(0, 37), Line(1, 6), Line(1, 30), Line(2, 14), Line(2, 17), Line(2, 38), Line(3, 8), Line(3, 29), Line(4, 32), Line(4, 33), Line(5, 6), Line(5, 10), Line(6, 21), Line(7, 11), Line(7, 32), Line(7, 36), Line(8, 26), Line(8, 38), Line(9, 15), Line(9, 17), Line(9, 34), Line(10, 19), Line(10, 20), Line(10, 30), Line(11, 19), Line(11, 25), Line(11, 31), Line(11, 35), Line(12, 18), Line(12, 31), Line(12, 37), Line(13, 21), Line(14, 22), Line(15, 36), Line(16, 24), Line(16, 35), Line(16, 36), Line(16, 38), Line(17, 26), Line(17, 39), Line(18, 28), Line(19, 27), Line(20, 25), Line(20, 26), Line(20, 37), Line(21, 38), Line(22, 24), Line(23, 25), Line(23, 33), Line(23, 34), Line(24, 28), Line(25, 39), Line(26, 31), Line(27, 29), Line(29, 30), Line(30, 36), Line(31, 35), Line(31, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(1, 30), Line(2, 17), Line(2, 38), Line(3, 8), Line(3, 29), Line(4, 32), Line(4, 33), Line(5, 6), Line(6, 21), Line(7, 11), Line(7, 36), Line(8, 26), Line(8, 38), Line(9, 15), Line(9, 17), Line(9, 34), Line(10, 19), Line(10, 20), Line(10, 30), Line(11, 35), Line(12, 18), Line(12, 31), Line(14, 22), Line(15, 36), Line(16, 24), Line(16, 35), Line(16, 36), Line(16, 38), Line(18, 28), Line(19, 27), Line(20, 25), Line(20, 26), Line(20, 37), Line(21, 38), Line(22, 24), Line(23, 33), Line(25, 39), Line(26, 31), Line(29, 30), Line(30, 36), Line(31, 35), Line(31, 39),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 13, 4.12311);
g.add_edge(0, 22, 3);
g.add_edge(0, 37, 1.41421);
g.add_edge(1, 6, 6);
g.add_edge(1, 30, 3.60555);
g.add_edge(2, 14, 3);
g.add_edge(2, 17, 4.47214);
g.add_edge(2, 38, 1);
g.add_edge(3, 8, 3.16228);
g.add_edge(3, 29, 7.28011);
g.add_edge(4, 32, 1);
g.add_edge(4, 33, 4.12311);
g.add_edge(5, 6, 8.24621);
g.add_edge(5, 10, 9);
g.add_edge(6, 21, 8.48528);
g.add_edge(7, 11, 10);
g.add_edge(7, 32, 3);
g.add_edge(7, 36, 8.24621);
g.add_edge(8, 26, 1.41421);
g.add_edge(8, 38, 4);
g.add_edge(9, 15, 5.09902);
g.add_edge(9, 17, 7.81025);
g.add_edge(9, 34, 2.23607);
g.add_edge(10, 19, 7.2111);
g.add_edge(10, 20, 9.21954);
g.add_edge(10, 30, 7.07107);
g.add_edge(11, 19, 5.83095);
g.add_edge(11, 25, 10.2956);
g.add_edge(11, 31, 9.84886);
g.add_edge(11, 35, 9.43398);
g.add_edge(12, 18, 10.8167);
g.add_edge(12, 31, 3);
g.add_edge(12, 37, 6.7082);
g.add_edge(13, 21, 7);
g.add_edge(14, 22, 4.12311);
g.add_edge(15, 36, 3.60555);
g.add_edge(16, 24, 4.24264);
g.add_edge(16, 35, 3);
g.add_edge(16, 36, 5.09902);
g.add_edge(16, 38, 1);
g.add_edge(17, 26, 3.60555);
g.add_edge(17, 39, 4.47214);
g.add_edge(18, 28, 7.07107);
g.add_edge(19, 27, 3.16228);
g.add_edge(20, 25, 6.7082);
g.add_edge(20, 26, 4.24264);
g.add_edge(20, 37, 1.41421);
g.add_edge(21, 38, 5.83095);
g.add_edge(22, 24, 6);
g.add_edge(23, 25, 2);
g.add_edge(23, 33, 5);
g.add_edge(23, 34, 1.41421);
g.add_edge(24, 28, 3.60555);
g.add_edge(25, 39, 9.05539);
g.add_edge(26, 31, 5.65685);
g.add_edge(27, 29, 3.16228);
g.add_edge(29, 30, 4.24264);
g.add_edge(30, 36, 4);
g.add_edge(31, 35, 5.65685);
g.add_edge(31, 39, 6.40312);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 3.62);
g.set_importance(5, 0);
g.set_importance(6, 5.46);
g.set_importance(7, 0);
g.set_importance(8, 9.28);
g.set_importance(9, 6);
g.set_importance(10, 8);
g.set_importance(11, 0);
g.set_importance(12, 8.26);
g.set_importance(13, 5.9);
g.set_importance(14, 0);
g.set_importance(15, 1.91);
g.set_importance(16, 1.27);
g.set_importance(17, 9.66);
g.set_importance(18, 3.17);
g.set_importance(19, 4.76);
g.set_importance(20, 1.59);
g.set_importance(21, 6.96);
g.set_importance(22, 9.99);
g.set_importance(23, 0);
g.set_importance(24, 8.5);
g.set_importance(25, 4.5);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 6.68);
g.set_importance(29, 3.24);
g.set_importance(30, 0);
g.set_importance(31, 6.41);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 2.29);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 9.58);
g.set_importance(38, 1.92);
g.set_importance(39, 6.66);
/*********************set_repair*************************/
g.set_repair_time(Line(1, 30), 3.7);
g.set_repair_time(Line(2, 17), 4.8);
g.set_repair_time(Line(2, 38), 2.77);
g.set_repair_time(Line(3, 8), 4.33);
g.set_repair_time(Line(3, 29), 3.76);
g.set_repair_time(Line(4, 32), 1.75);
g.set_repair_time(Line(4, 33), 1.88);
g.set_repair_time(Line(5, 6), 3.31);
g.set_repair_time(Line(6, 21), 2.82);
g.set_repair_time(Line(7, 11), 2.81);
g.set_repair_time(Line(7, 36), 4.42);
g.set_repair_time(Line(8, 26), 1.11);
g.set_repair_time(Line(8, 38), 3.16);
g.set_repair_time(Line(9, 15), 4.25);
g.set_repair_time(Line(9, 17), 2.23);
g.set_repair_time(Line(9, 34), 4.58);
g.set_repair_time(Line(10, 19), 3.62);
g.set_repair_time(Line(10, 20), 4.82);
g.set_repair_time(Line(10, 30), 3.6);
g.set_repair_time(Line(11, 35), 1.69);
g.set_repair_time(Line(12, 18), 4.69);
g.set_repair_time(Line(12, 31), 4.73);
g.set_repair_time(Line(14, 22), 3.4);
g.set_repair_time(Line(15, 36), 3.16);
g.set_repair_time(Line(16, 24), 3.69);
g.set_repair_time(Line(16, 35), 4.78);
g.set_repair_time(Line(16, 36), 2.89);
g.set_repair_time(Line(16, 38), 3.15);
g.set_repair_time(Line(18, 28), 1.64);
g.set_repair_time(Line(19, 27), 2.18);
g.set_repair_time(Line(20, 25), 1.83);
g.set_repair_time(Line(20, 26), 3.8);
g.set_repair_time(Line(20, 37), 4.55);
g.set_repair_time(Line(21, 38), 4.73);
g.set_repair_time(Line(22, 24), 2.7);
g.set_repair_time(Line(23, 33), 1.98);
g.set_repair_time(Line(25, 39), 2.13);
g.set_repair_time(Line(26, 31), 4.43);
g.set_repair_time(Line(29, 30), 2.69);
g.set_repair_time(Line(30, 36), 2.4);
g.set_repair_time(Line(31, 35), 3.97);
g.set_repair_time(Line(31, 39), 1.6);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 28.4057}, {2, 12.6539}, {3, 14.5594}, {4, 25.8247}, {5, 26.31}, {6, 24.5105}, {7, 30.8247}, {8, 10.6066}, {9, 18.9836}, {10, 15.06}, {11, 24.7903}, {12, 10.153}, {13, 5.15388}, {14, 8.90388}, {15, 25.3574}, {16, 15.1539}, {17, 13.3458}, {18, 23.6738}, {19, 24.0738}, {20, 3.53553}, {21, 13.9039}, {22, 3.75}, {23, 14.4208}, {24, 11.25}, {25, 11.9208}, {26, 8.83883}, {27, 27.6124}, {28, 15.7569}, {29, 23.6596}, {30, 23.8988}, {31, 13.903}, {32, 27.0747}, {33, 20.6708}, {34, 16.1886}, {35, 18.9039}, {36, 21.5277}, {37, 1.76777}, {38, 13.9039}, {39, 18.9359}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 28.4057}, {1, 0}, {2, 18.3807}, {3, 18.9104}, {4, 24.8147}, {5, 17.8078}, {6, 7.5}, {7, 19.8147}, {8, 22.1307}, {9, 20.3877}, {10, 13.3458}, {11, 25.0046}, {12, 30.4518}, {13, 26.8566}, {14, 22.1307}, {15, 14.0139}, {16, 15.8807}, {17, 23.9709}, {18, 34.5298}, {19, 17.7159}, {20, 24.8702}, {21, 18.1066}, {22, 27.2846}, {23, 24.9505}, {24, 21.184}, {25, 27.4505}, {26, 23.8985}, {27, 13.7631}, {28, 25.691}, {29, 9.81024}, {30, 4.50694}, {31, 26.7018}, {32, 23.5647}, {33, 29.9686}, {34, 23.1827}, {35, 19.6307}, {36, 9.50694}, {37, 26.638}, {38, 17.1307}, {39, 29.5611}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 12.6539}, {1, 18.3807}, {2, 0}, {3, 10.2028}, {4, 24.1815}, {5, 29.4531}, {6, 19.1453}, {7, 19.1815}, {8, 6.25}, {9, 15.353}, {10, 22.7126}, {11, 18.0425}, {12, 17.0711}, {13, 17.2887}, {14, 3.75}, {15, 13.3807}, {16, 2.5}, {17, 5.59017}, {18, 21.1491}, {19, 25.3312}, {20, 13.3211}, {21, 8.53869}, {22, 8.90388}, {23, 19.9158}, {24, 7.8033}, {25, 21.7063}, {26, 8.01777}, {27, 23.1299}, {28, 12.3102}, {29, 19.1771}, {30, 13.8738}, {31, 13.3211}, {32, 22.9315}, {33, 26.1658}, {34, 18.1481}, {35, 6.25}, {36, 8.87377}, {37, 14.4216}, {38, 1.25}, {39, 11.1803}, 