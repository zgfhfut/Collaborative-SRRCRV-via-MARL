node_num : 40
demand_node_num : 24
edge_num : 60
damaged_edge_num : 42
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 5, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 5), Line(0, 7), Line(0, 21), Line(0, 32), Line(1, 3), Line(1, 26), Line(1, 32), Line(2, 17), Line(2, 29), Line(2, 34), Line(3, 11), Line(3, 14), Line(3, 15), Line(3, 20), Line(3, 33), Line(4, 12), Line(4, 26), Line(4, 29), Line(6, 19), Line(6, 33), Line(7, 20), Line(7, 27), Line(8, 30), Line(8, 37), Line(9, 19), Line(9, 20), Line(10, 17), Line(10, 30), Line(10, 34), Line(11, 14), Line(11, 17), Line(11, 22), Line(11, 34), Line(12, 18), Line(12, 21), Line(13, 16), Line(13, 36), Line(13, 39), Line(14, 39), Line(15, 29), Line(15, 31), Line(15, 35), Line(16, 21), Line(16, 28), Line(16, 31), Line(17, 31), Line(18, 38), Line(21, 27), Line(22, 24), Line(23, 33), Line(23, 36), Line(24, 31), Line(25, 27), Line(25, 35), Line(25, 39), Line(28, 37), Line(32, 33), Line(32, 37), Line(34, 35), Line(38, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 7), Line(0, 32), Line(1, 3), Line(1, 32), Line(2, 17), Line(2, 34), Line(3, 11), Line(3, 14), Line(3, 15), Line(3, 20), Line(4, 12), Line(4, 29), Line(6, 19), Line(6, 33), Line(7, 27), Line(8, 30), Line(8, 37), Line(9, 19), Line(10, 30), Line(10, 34), Line(11, 22), Line(12, 21), Line(13, 16), Line(13, 39), Line(14, 39), Line(15, 29), Line(15, 31), Line(15, 35), Line(16, 21), Line(16, 28), Line(18, 38), Line(21, 27), Line(22, 24), Line(23, 33), Line(23, 36), Line(25, 27), Line(25, 35), Line(25, 39), Line(28, 37), Line(32, 33), Line(32, 37), Line(34, 35),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 5, 6);
g.add_edge(0, 7, 7.07107);
g.add_edge(0, 21, 8.94427);
g.add_edge(0, 32, 4.12311);
g.add_edge(1, 3, 4.47214);
g.add_edge(1, 26, 7);
g.add_edge(1, 32, 8.06226);
g.add_edge(2, 17, 6.40312);
g.add_edge(2, 29, 4.12311);
g.add_edge(2, 34, 5.65685);
g.add_edge(3, 11, 7.07107);
g.add_edge(3, 14, 6.40312);
g.add_edge(3, 15, 1.41421);
g.add_edge(3, 20, 2.82843);
g.add_edge(3, 33, 6.08276);
g.add_edge(4, 12, 1);
g.add_edge(4, 26, 2.23607);
g.add_edge(4, 29, 2.23607);
g.add_edge(6, 19, 1);
g.add_edge(6, 33, 7.28011);
g.add_edge(7, 20, 9.48683);
g.add_edge(7, 27, 6.08276);
g.add_edge(8, 30, 1);
g.add_edge(8, 37, 8);
g.add_edge(9, 19, 5.83095);
g.add_edge(9, 20, 3);
g.add_edge(10, 17, 6);
g.add_edge(10, 30, 1);
g.add_edge(10, 34, 6.08276);
g.add_edge(11, 14, 1);
g.add_edge(11, 17, 7);
g.add_edge(11, 22, 6);
g.add_edge(11, 34, 6);
g.add_edge(12, 18, 6.40312);
g.add_edge(12, 21, 5);
g.add_edge(13, 16, 2.23607);
g.add_edge(13, 36, 2);
g.add_edge(13, 39, 3.60555);
g.add_edge(14, 39, 4.12311);
g.add_edge(15, 29, 8.06226);
g.add_edge(15, 31, 5.38516);
g.add_edge(15, 35, 5.38516);
g.add_edge(16, 21, 5.09902);
g.add_edge(16, 28, 2);
g.add_edge(16, 31, 4.12311);
g.add_edge(17, 31, 8.48528);
g.add_edge(18, 38, 5.09902);
g.add_edge(21, 27, 9);
g.add_edge(22, 24, 7.81025);
g.add_edge(23, 33, 6.7082);
g.add_edge(23, 36, 1);
g.add_edge(24, 31, 7.2111);
g.add_edge(25, 27, 4.47214);
g.add_edge(25, 35, 2.82843);
g.add_edge(25, 39, 2.23607);
g.add_edge(28, 37, 5);
g.add_edge(32, 33, 4);
g.add_edge(32, 37, 7.07107);
g.add_edge(34, 35, 5.38516);
g.add_edge(38, 39, 3.16228);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 2.67);
g.set_importance(4, 0);
g.set_importance(5, 2.17);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 8.14);
g.set_importance(11, 0);
g.set_importance(12, 1.95);
g.set_importance(13, 7.04);
g.set_importance(14, 9.7);
g.set_importance(15, 9.3);
g.set_importance(16, 8.39);
g.set_importance(17, 9.2);
g.set_importance(18, 5.16);
g.set_importance(19, 0);
g.set_importance(20, 7.05);
g.set_importance(21, 4.57);
g.set_importance(22, 9.47);
g.set_importance(23, 0);
g.set_importance(24, 1.5);
g.set_importance(25, 7.77);
g.set_importance(26, 0);
g.set_importance(27, 5.64);
g.set_importance(28, 0);
g.set_importance(29, 1.21);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 2.43);
g.set_importance(34, 3.5);
g.set_importance(35, 5.12);
g.set_importance(36, 1.69);
g.set_importance(37, 8.79);
g.set_importance(38, 8.02);
g.set_importance(39, 6.58);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 7), 1.06);
g.set_repair_time(Line(0, 32), 1.41);
g.set_repair_time(Line(1, 3), 4.52);
g.set_repair_time(Line(1, 32), 3.87);
g.set_repair_time(Line(2, 17), 1.96);
g.set_repair_time(Line(2, 34), 3.52);
g.set_repair_time(Line(3, 11), 2.51);
g.set_repair_time(Line(3, 14), 2.75);
g.set_repair_time(Line(3, 15), 1.36);
g.set_repair_time(Line(3, 20), 4.42);
g.set_repair_time(Line(4, 12), 1.13);
g.set_repair_time(Line(4, 29), 4.84);
g.set_repair_time(Line(6, 19), 1.95);
g.set_repair_time(Line(6, 33), 2.12);
g.set_repair_time(Line(7, 27), 3.69);
g.set_repair_time(Line(8, 30), 2.69);
g.set_repair_time(Line(8, 37), 2.79);
g.set_repair_time(Line(9, 19), 2.17);
g.set_repair_time(Line(10, 30), 3.67);
g.set_repair_time(Line(10, 34), 4.85);
g.set_repair_time(Line(11, 22), 3.39);
g.set_repair_time(Line(12, 21), 2.25);
g.set_repair_time(Line(13, 16), 4.49);
g.set_repair_time(Line(13, 39), 3.01);
g.set_repair_time(Line(14, 39), 2.47);
g.set_repair_time(Line(15, 29), 4.74);
g.set_repair_time(Line(15, 31), 3.77);
g.set_repair_time(Line(15, 35), 3.41);
g.set_repair_time(Line(16, 21), 4.39);
g.set_repair_time(Line(16, 28), 4.07);
g.set_repair_time(Line(18, 38), 3.12);
g.set_repair_time(Line(21, 27), 2.05);
g.set_repair_time(Line(22, 24), 3.94);
g.set_repair_time(Line(23, 33), 3.82);
g.set_repair_time(Line(23, 36), 2.56);
g.set_repair_time(Line(25, 27), 1.65);
g.set_repair_time(Line(25, 35), 1.38);
g.set_repair_time(Line(25, 39), 4.55);
g.set_repair_time(Line(28, 37), 2.8);
g.set_repair_time(Line(32, 33), 4.58);
g.set_repair_time(Line(32, 37), 4.89);
g.set_repair_time(Line(34, 35), 2.97);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 15.2317}, {2, 26.6293}, {3, 17.7573}, {4, 18.6803}, {5, 7.5}, {6, 19.254}, {7, 8.83883}, {8, 23.9927}, {9, 24.4474}, {10, 26.4927}, {11, 26.5962}, {12, 17.4303}, {13, 20.3492}, {14, 25.7612}, {15, 19.5251}, {16, 17.5541}, {17, 33.3146}, {18, 25.4342}, {19, 20.504}, {20, 20.6974}, {21, 11.1803}, {22, 34.0962}, {23, 18.5391}, {24, 31.7219}, {25, 22.0325}, {26, 21.4754}, {27, 16.4423}, {28, 20.0541}, {29, 21.4754}, {30, 25.2427}, {31, 22.708}, {32, 5.15388}, {33, 10.1539}, {34, 32.2994}, {35, 25.568}, {36, 19.7891}, {37, 13.9927}, {38, 28.7804}, {39, 24.8275}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 15.2317}, {1, 0}, {2, 19.4941}, {3, 5.59017}, {4, 11.5451}, {5, 22.7317}, {6, 21.4144}, {7, 20.9842}, {8, 28.9167}, {9, 12.8757}, {10, 28.4243}, {11, 14.429}, {12, 12.7951}, {13, 22.0384}, {14, 13.5941}, {15, 7.35794}, {16, 19.2433}, {17, 23.179}, {18, 20.799}, {19, 20.1644}, {20, 9.1257}, {21, 19.0451}, {22, 21.929}, {23, 21.5789}, {24, 23.1033}, {25, 17.6249}, {26, 8.75}, {27, 23.2151}, {28, 21.7433}, {29, 14.3402}, {30, 29.6743}, {31, 14.0894}, {32, 10.0778}, {33, 13.1936}, {34, 20.8208}, {35, 14.0894}, {36, 22.8289}, {37, 18.9167}, {38, 22.7008}, {39, 18.748}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 26.6293}, {1, 19.4941}, {2, 0}, {3, 16.9995}, {4, 7.94897}, {5, 34.1293}, {6, 32.8237}, {7, 30.5317}, {8, 17.1745}, {9, 24.285}, {10, 14.6745}, {11, 14.5711}, {12, 9.19897}, {13, 24.6178}, {14, 15.8211}, {15, 15.2317}, {16, 21.8227}, {17, 8.00391}, {18, 17.2029}, {19, 31.5737}, {20, 20.535}, {21, 15.449}, {22, 22.0711}, {23, 28.3678}, {24, 27.6244}, {25, 17.3381}, {26, 10.7441}, {27, 22.9282}, {28, 24.3227}, {29, 5.15388}, {30, 15.9245}, {31, 18.6105}, {32, 29.5719}, {33, 24.6029}, {34, 7.07107}, {35, 13.8025}, {36, 27.1178}, {37, 27.1745}, {38, 23.5766}, {39, 20.1331}, 