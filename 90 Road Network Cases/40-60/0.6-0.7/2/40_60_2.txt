node_num : 40
demand_node_num : 24
edge_num : 60
damaged_edge_num : 42
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 26, 29, 32, 35, 36, 38,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 18), Line(0, 23), Line(0, 27), Line(0, 38), Line(1, 4), Line(1, 21), Line(1, 26), Line(2, 10), Line(2, 39), Line(3, 8), Line(3, 31), Line(4, 24), Line(5, 24), Line(5, 25), Line(6, 36), Line(6, 38), Line(7, 11), Line(7, 21), Line(8, 13), Line(8, 17), Line(9, 14), Line(9, 15), Line(9, 31), Line(9, 35), Line(10, 11), Line(10, 30), Line(11, 14), Line(11, 19), Line(12, 18), Line(12, 29), Line(12, 32), Line(12, 37), Line(13, 15), Line(13, 32), Line(13, 34), Line(13, 39), Line(14, 20), Line(14, 27), Line(15, 27), Line(16, 21), Line(16, 29), Line(16, 33), Line(17, 35), Line(17, 38), Line(17, 39), Line(18, 22), Line(18, 31), Line(19, 28), Line(20, 28), Line(20, 32), Line(22, 36), Line(23, 33), Line(25, 39), Line(26, 33), Line(26, 34), Line(27, 35), Line(28, 30), Line(28, 32), Line(29, 31), Line(30, 37),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 23), Line(0, 27), Line(0, 38), Line(1, 4), Line(1, 21), Line(2, 10), Line(3, 8), Line(3, 31), Line(5, 24), Line(6, 36), Line(6, 38), Line(7, 11), Line(7, 21), Line(9, 14), Line(9, 31), Line(10, 11), Line(11, 14), Line(11, 19), Line(12, 18), Line(12, 32), Line(12, 37), Line(13, 15), Line(13, 32), Line(13, 34), Line(13, 39), Line(14, 20), Line(14, 27), Line(15, 27), Line(16, 21), Line(16, 33), Line(17, 39), Line(18, 22), Line(18, 31), Line(19, 28), Line(20, 28), Line(22, 36), Line(23, 33), Line(26, 33), Line(26, 34), Line(27, 35), Line(28, 30), Line(30, 37),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 18, 2);
g.add_edge(0, 23, 2.23607);
g.add_edge(0, 27, 6.7082);
g.add_edge(0, 38, 7);
g.add_edge(1, 4, 7.81025);
g.add_edge(1, 21, 2.23607);
g.add_edge(1, 26, 3.60555);
g.add_edge(2, 10, 6.08276);
g.add_edge(2, 39, 3.60555);
g.add_edge(3, 8, 4.47214);
g.add_edge(3, 31, 3.60555);
g.add_edge(4, 24, 4.12311);
g.add_edge(5, 24, 5.83095);
g.add_edge(5, 25, 4.47214);
g.add_edge(6, 36, 2.23607);
g.add_edge(6, 38, 4.24264);
g.add_edge(7, 11, 8.06226);
g.add_edge(7, 21, 2);
g.add_edge(8, 13, 3);
g.add_edge(8, 17, 1);
g.add_edge(9, 14, 6.32456);
g.add_edge(9, 15, 6.40312);
g.add_edge(9, 31, 2.23607);
g.add_edge(9, 35, 2.23607);
g.add_edge(10, 11, 1.41421);
g.add_edge(10, 30, 9.89949);
g.add_edge(11, 14, 3.16228);
g.add_edge(11, 19, 7.61577);
g.add_edge(12, 18, 8.544);
g.add_edge(12, 29, 7.07107);
g.add_edge(12, 32, 9.05539);
g.add_edge(12, 37, 7.28011);
g.add_edge(13, 15, 4.47214);
g.add_edge(13, 32, 5.09902);
g.add_edge(13, 34, 2);
g.add_edge(13, 39, 3);
g.add_edge(14, 20, 3.16228);
g.add_edge(14, 27, 3);
g.add_edge(15, 27, 3.16228);
g.add_edge(16, 21, 1);
g.add_edge(16, 29, 5.38516);
g.add_edge(16, 33, 2);
g.add_edge(17, 35, 6.32456);
g.add_edge(17, 38, 3.16228);
g.add_edge(17, 39, 3.60555);
g.add_edge(18, 22, 3.16228);
g.add_edge(18, 31, 6.40312);
g.add_edge(19, 28, 4.12311);
g.add_edge(20, 28, 9.21954);
g.add_edge(20, 32, 5.38516);
g.add_edge(22, 36, 6.32456);
g.add_edge(23, 33, 4.12311);
g.add_edge(25, 39, 2);
g.add_edge(26, 33, 6.08276);
g.add_edge(26, 34, 5.83095);
g.add_edge(27, 35, 4.47214);
g.add_edge(28, 30, 1);
g.add_edge(28, 32, 8.24621);
g.add_edge(29, 31, 4);
g.add_edge(30, 37, 8.48528);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 1.34);
g.set_importance(4, 0);
g.set_importance(5, 9.11);
g.set_importance(6, 0);
g.set_importance(7, 6.88);
g.set_importance(8, 4.96);
g.set_importance(9, 2.76);
g.set_importance(10, 5.63);
g.set_importance(11, 2.59);
g.set_importance(12, 2.84);
g.set_importance(13, 2.51);
g.set_importance(14, 3.38);
g.set_importance(15, 6.24);
g.set_importance(16, 9.64);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 3.06);
g.set_importance(20, 0);
g.set_importance(21, 6.75);
g.set_importance(22, 1.12);
g.set_importance(23, 5.11);
g.set_importance(24, 9.06);
g.set_importance(25, 8.64);
g.set_importance(26, 9.41);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 2.9);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 1.25);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 5.94);
g.set_importance(36, 5.45);
g.set_importance(37, 0);
g.set_importance(38, 9.65);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 23), 2.83);
g.set_repair_time(Line(0, 27), 3.48);
g.set_repair_time(Line(0, 38), 2.87);
g.set_repair_time(Line(1, 4), 4.17);
g.set_repair_time(Line(1, 21), 4.18);
g.set_repair_time(Line(2, 10), 2.17);
g.set_repair_time(Line(3, 8), 4.24);
g.set_repair_time(Line(3, 31), 1.5);
g.set_repair_time(Line(5, 24), 1.89);
g.set_repair_time(Line(6, 36), 4.17);
g.set_repair_time(Line(6, 38), 3.92);
g.set_repair_time(Line(7, 11), 4.62);
g.set_repair_time(Line(7, 21), 4.77);
g.set_repair_time(Line(9, 14), 2.1);
g.set_repair_time(Line(9, 31), 4.17);
g.set_repair_time(Line(10, 11), 1.19);
g.set_repair_time(Line(11, 14), 1.01);
g.set_repair_time(Line(11, 19), 4.98);
g.set_repair_time(Line(12, 18), 4.43);
g.set_repair_time(Line(12, 32), 4.36);
g.set_repair_time(Line(12, 37), 2.36);
g.set_repair_time(Line(13, 15), 4.63);
g.set_repair_time(Line(13, 32), 2.76);
g.set_repair_time(Line(13, 34), 3.1);
g.set_repair_time(Line(13, 39), 4.1);
g.set_repair_time(Line(14, 20), 4.98);
g.set_repair_time(Line(14, 27), 3.6);
g.set_repair_time(Line(15, 27), 4.72);
g.set_repair_time(Line(16, 21), 1.91);
g.set_repair_time(Line(16, 33), 3.95);
g.set_repair_time(Line(17, 39), 4.93);
g.set_repair_time(Line(18, 22), 2.46);
g.set_repair_time(Line(18, 31), 3.24);
g.set_repair_time(Line(19, 28), 2.26);
g.set_repair_time(Line(20, 28), 4.82);
g.set_repair_time(Line(22, 36), 2.67);
g.set_repair_time(Line(23, 33), 1.91);
g.set_repair_time(Line(26, 33), 1.57);
g.set_repair_time(Line(26, 34), 4.46);
g.set_repair_time(Line(27, 35), 2.71);
g.set_repair_time(Line(28, 30), 2.29);
g.set_repair_time(Line(30, 37), 2.68);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 14.4941}, {2, 21.7167}, {3, 15.0108}, {4, 24.2569}, {5, 25.3}, {6, 14.0533}, {7, 14.199}, {8, 13.9528}, {9, 13.299}, {10, 17.8559}, {11, 16.0881}, {12, 13.18}, {13, 17.7028}, {14, 12.1353}, {15, 12.3381}, {16, 10.449}, {17, 12.7028}, {18, 2.5}, {19, 25.6078}, {20, 16.0881}, {21, 11.699}, {22, 6.45285}, {23, 2.79508}, {24, 29.4107}, {25, 19.7098}, {26, 15.5524}, {27, 8.38525}, {28, 27.6125}, {29, 15.5039}, {30, 28.8625}, {31, 10.5039}, {32, 22.8196}, {33, 7.94897}, {34, 20.2028}, {35, 13.9754}, {36, 14.3585}, {37, 22.2801}, {38, 8.75}, {39, 17.2098}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 14.4941}, {1, 0}, {2, 22.5526}, {3, 20.2835}, {4, 9.76281}, {5, 22.2054}, {6, 28.5474}, {7, 5.29508}, {8, 18.0456}, {9, 18.5716}, {10, 17.1407}, {11, 15.3729}, {12, 19.6154}, {13, 14.2956}, {14, 19.3258}, {15, 19.8858}, {16, 4.04508}, {17, 19.2956}, {18, 16.9941}, {19, 24.8926}, {20, 23.2786}, {21, 2.79508}, {22, 20.9469}, {23, 11.699}, {24, 14.9167}, {25, 20.5456}, {26, 4.50694}, {27, 22.8793}, {28, 30.0465}, {29, 10.7765}, {30, 29.515}, {31, 15.7765}, {32, 20.6694}, {33, 6.54508}, {34, 11.7956}, {35, 21.3667}, {36, 28.8526}, {37, 28.7155}, {38, 23.2441}, {39, 18.0456}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 21.7167}, {1, 22.5526}, {2, 0}, {3, 15.854}, {4, 25.0397}, {5, 12.5971}, {6, 18.27}, {7, 19.449}, {8, 10.2639}, {9, 19.7147}, {10, 7.60345}, {11, 9.37122}, {12, 25.9499}, {13, 8.25694}, {14, 13.3241}, {15, 13.8471}, {16, 23.199}, {17, 9.01388}, {18, 24.2167}, {19, 18.8909}, {20, 17.2769}, {21, 21.949}, {22, 28.1696}, {23, 24.5118}, {24, 19.8858}, {25, 7.00694}, {26, 18.0456}, {27, 17.0741}, {28, 21.2278}, {29, 25.361}, {30, 19.9778}, {31, 20.361}, {32, 14.6307}, {33, 25.6491}, {34, 10.7569}, {35, 16.9196}, {36, 21.0651}, {37, 30.5844}, {38, 12.9667}, {39, 4.50694}, 