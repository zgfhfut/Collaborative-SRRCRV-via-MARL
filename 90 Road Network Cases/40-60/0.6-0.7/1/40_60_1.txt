node_num : 40
demand_node_num : 24
edge_num : 60
damaged_edge_num : 42
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 4, 5, 9, 10, 11, 12, 15, 17, 18, 19, 21, 23, 24, 25, 26, 28, 30, 31, 32, 36, 37, 38, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 24), Line(0, 35), Line(0, 38), Line(0, 39), Line(1, 10), Line(1, 12), Line(1, 16), Line(2, 3), Line(2, 34), Line(3, 5), Line(3, 26), Line(4, 16), Line(4, 18), Line(4, 23), Line(5, 21), Line(5, 24), Line(5, 26), Line(6, 22), Line(6, 38), Line(7, 10), Line(7, 17), Line(7, 38), Line(8, 31), Line(8, 36), Line(9, 28), Line(9, 36), Line(10, 30), Line(11, 22), Line(11, 23), Line(11, 25), Line(12, 19), Line(12, 24), Line(12, 33), Line(12, 34), Line(13, 20), Line(13, 28), Line(14, 18), Line(14, 25), Line(14, 32), Line(14, 34), Line(15, 22), Line(15, 24), Line(16, 26), Line(16, 29), Line(17, 18), Line(19, 30), Line(19, 32), Line(20, 37), Line(21, 33), Line(25, 27), Line(26, 27), Line(27, 29), Line(27, 33), Line(29, 33), Line(29, 34), Line(30, 32), Line(31, 35), Line(32, 37), Line(33, 39), Line(36, 38),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 24), Line(0, 35), Line(0, 39), Line(1, 12), Line(1, 16), Line(2, 34), Line(3, 26), Line(4, 16), Line(4, 23), Line(5, 21), Line(5, 26), Line(6, 22), Line(6, 38), Line(7, 10), Line(7, 17), Line(7, 38), Line(8, 31), Line(8, 36), Line(9, 36), Line(11, 22), Line(11, 23), Line(12, 19), Line(12, 24), Line(12, 34), Line(13, 20), Line(13, 28), Line(14, 18), Line(14, 25), Line(14, 32), Line(15, 24), Line(16, 26), Line(16, 29), Line(17, 18), Line(19, 32), Line(20, 37), Line(21, 33), Line(25, 27), Line(27, 29), Line(29, 34), Line(31, 35), Line(32, 37), Line(36, 38),  };
const double demand_num_pro = 0.6;
const double damaged_edge_pro = 0.7;
/*********************add_edge*************************/
g.add_edge(0, 24, 5);
g.add_edge(0, 35, 4.24264);
g.add_edge(0, 38, 6.40312);
g.add_edge(0, 39, 1.41421);
g.add_edge(1, 10, 4.12311);
g.add_edge(1, 12, 6.08276);
g.add_edge(1, 16, 7.07107);
g.add_edge(2, 3, 7.07107);
g.add_edge(2, 34, 9.21954);
g.add_edge(3, 5, 1);
g.add_edge(3, 26, 3);
g.add_edge(4, 16, 8.06226);
g.add_edge(4, 18, 5);
g.add_edge(4, 23, 8.06226);
g.add_edge(5, 21, 5);
g.add_edge(5, 24, 7.07107);
g.add_edge(5, 26, 4);
g.add_edge(6, 22, 3.16228);
g.add_edge(6, 38, 3.60555);
g.add_edge(7, 10, 2);
g.add_edge(7, 17, 3.60555);
g.add_edge(7, 38, 3.16228);
g.add_edge(8, 31, 3);
g.add_edge(8, 36, 1);
g.add_edge(9, 28, 4.24264);
g.add_edge(9, 36, 5.83095);
g.add_edge(10, 30, 5.83095);
g.add_edge(11, 22, 5.38516);
g.add_edge(11, 23, 5);
g.add_edge(11, 25, 8.48528);
g.add_edge(12, 19, 7.81025);
g.add_edge(12, 24, 6.32456);
g.add_edge(12, 33, 2.82843);
g.add_edge(12, 34, 6.32456);
g.add_edge(13, 20, 2.82843);
g.add_edge(13, 28, 6.32456);
g.add_edge(14, 18, 5.09902);
g.add_edge(14, 25, 4.12311);
g.add_edge(14, 32, 6.32456);
g.add_edge(14, 34, 9.43398);
g.add_edge(15, 22, 2.82843);
g.add_edge(15, 24, 3);
g.add_edge(16, 26, 2.23607);
g.add_edge(16, 29, 8.06226);
g.add_edge(17, 18, 8.60233);
g.add_edge(19, 30, 2.23607);
g.add_edge(19, 32, 4.47214);
g.add_edge(20, 37, 9.89949);
g.add_edge(21, 33, 5);
g.add_edge(25, 27, 3.16228);
g.add_edge(26, 27, 7.07107);
g.add_edge(27, 29, 5.09902);
g.add_edge(27, 33, 4.47214);
g.add_edge(29, 33, 7.61577);
g.add_edge(29, 34, 1.41421);
g.add_edge(30, 32, 6.08276);
g.add_edge(31, 35, 7.81025);
g.add_edge(32, 37, 3);
g.add_edge(33, 39, 8.06226);
g.add_edge(36, 38, 4);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 5);
g.set_importance(4, 2.31);
g.set_importance(5, 1.03);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 8.02);
g.set_importance(10, 8.48);
g.set_importance(11, 5.39);
g.set_importance(12, 2.16);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 8.99);
g.set_importance(16, 0);
g.set_importance(17, 5.18);
g.set_importance(18, 2.01);
g.set_importance(19, 6.75);
g.set_importance(20, 0);
g.set_importance(21, 9.01);
g.set_importance(22, 0);
g.set_importance(23, 4.83);
g.set_importance(24, 5.19);
g.set_importance(25, 1.66);
g.set_importance(26, 4.74);
g.set_importance(27, 0);
g.set_importance(28, 4.36);
g.set_importance(29, 0);
g.set_importance(30, 1.7);
g.set_importance(31, 8.15);
g.set_importance(32, 4.68);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 2.94);
g.set_importance(37, 1.38);
g.set_importance(38, 5.22);
g.set_importance(39, 2.03);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 24), 1.1);
g.set_repair_time(Line(0, 35), 1.52);
g.set_repair_time(Line(0, 39), 4.09);
g.set_repair_time(Line(1, 12), 1.61);
g.set_repair_time(Line(1, 16), 3.7);
g.set_repair_time(Line(2, 34), 3.3);
g.set_repair_time(Line(3, 26), 4.71);
g.set_repair_time(Line(4, 16), 3.96);
g.set_repair_time(Line(4, 23), 2.75);
g.set_repair_time(Line(5, 21), 1.23);
g.set_repair_time(Line(5, 26), 4.24);
g.set_repair_time(Line(6, 22), 3.91);
g.set_repair_time(Line(6, 38), 1.88);
g.set_repair_time(Line(7, 10), 1.59);
g.set_repair_time(Line(7, 17), 4.27);
g.set_repair_time(Line(7, 38), 3.8);
g.set_repair_time(Line(8, 31), 1.55);
g.set_repair_time(Line(8, 36), 1.43);
g.set_repair_time(Line(9, 36), 3.83);
g.set_repair_time(Line(11, 22), 2.34);
g.set_repair_time(Line(11, 23), 3.68);
g.set_repair_time(Line(12, 19), 4.41);
g.set_repair_time(Line(12, 24), 4.97);
g.set_repair_time(Line(12, 34), 2.76);
g.set_repair_time(Line(13, 20), 1.67);
g.set_repair_time(Line(13, 28), 4.1);
g.set_repair_time(Line(14, 18), 3.76);
g.set_repair_time(Line(14, 25), 1.34);
g.set_repair_time(Line(14, 32), 2.74);
g.set_repair_time(Line(15, 24), 4.71);
g.set_repair_time(Line(16, 26), 2.87);
g.set_repair_time(Line(16, 29), 2.96);
g.set_repair_time(Line(17, 18), 4.65);
g.set_repair_time(Line(19, 32), 4.05);
g.set_repair_time(Line(20, 37), 2.49);
g.set_repair_time(Line(21, 33), 2.49);
g.set_repair_time(Line(25, 27), 2.08);
g.set_repair_time(Line(27, 29), 2.87);
g.set_repair_time(Line(29, 34), 3.86);
g.set_repair_time(Line(31, 35), 1.47);
g.set_repair_time(Line(32, 37), 2.38);
g.set_repair_time(Line(36, 38), 2.01);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 19.6106}, {2, 25.1777}, {3, 16.3388}, {4, 32.9617}, {5, 15.0888}, {6, 12.5108}, {7, 11.9568}, {8, 14.2539}, {9, 20.2926}, {10, 14.4568}, {11, 20.267}, {12, 14.1557}, {13, 33.5016}, {14, 26.5425}, {15, 10}, {16, 22.8839}, {17, 16.4637}, {18, 27.2166}, {19, 23.9185}, {20, 37.0371}, {21, 18.0956}, {22, 13.5355}, {23, 26.517}, {24, 6.25}, {25, 21.3886}, {26, 20.0888}, {27, 17.4358}, {28, 25.5959}, {29, 21.3653}, {30, 21.7454}, {31, 15.0661}, {32, 29.3489}, {33, 11.8456}, {34, 22.0614}, {35, 5.3033}, {36, 13.0039}, {37, 33.0989}, {38, 8.00391}, {39, 1.76777}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 19.6106}, {1, 0}, {2, 24.2228}, {3, 15.3839}, {4, 18.9167}, {5, 16.6339}, {6, 16.1137}, {7, 7.65388}, {8, 17.8567}, {9, 23.8954}, {10, 5.15388}, {11, 26.798}, {12, 7.60345}, {13, 37.1044}, {14, 25.8359}, {15, 19.2591}, {16, 8.83883}, {17, 12.1608}, {18, 22.9137}, {19, 15.2377}, {20, 36.1704}, {21, 17.389}, {22, 20.0665}, {23, 28.9945}, {24, 15.5091}, {25, 20.682}, {26, 11.6339}, {27, 16.7292}, {28, 29.1987}, {29, 17.2769}, {30, 12.4426}, {31, 21.6067}, {32, 20.046}, {33, 11.139}, {34, 15.5091}, {35, 24.9139}, {36, 16.6067}, {37, 23.796}, {38, 11.6067}, {39, 21.2168}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 25.1777}, {1, 24.2228}, {2, 0}, {3, 8.83883}, {4, 25.4617}, {5, 10.0888}, {6, 30.1661}, {7, 31.8766}, {8, 39.4316}, {9, 45.4703}, {10, 29.3766}, {11, 32.9447}, {12, 19.4301}, {13, 50.8825}, {14, 23.3169}, {15, 22.6777}, {16, 15.3839}, {17, 36.3836}, {18, 29.6907}, {19, 29.1929}, {20, 47.347}, {21, 16.3388}, {22, 26.2132}, {23, 35.5396}, {24, 18.9277}, {25, 23.6188}, {26, 12.5888}, {27, 19.666}, {28, 50.7736}, {29, 13.2922}, {30, 31.988}, {31, 40.2438}, {32, 31.2226}, {33, 22.5888}, {34, 11.5244}, {35, 30.481}, {36, 38.1816}, {37, 34.9726}, {38, 33.1816}, {39, 26.9454}, 