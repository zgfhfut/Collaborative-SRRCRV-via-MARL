node_num : 40
demand_node_num : 16
edge_num : 60
damaged_edge_num : 30
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 4, 7, 8, 11, 12, 15, 21, 22, 23, 24, 27, 29, 31, 33, 34,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 20), Line(0, 21), Line(0, 29), Line(1, 12), Line(1, 24), Line(2, 18), Line(2, 31), Line(3, 9), Line(3, 31), Line(3, 39), Line(4, 14), Line(4, 24), Line(4, 25), Line(4, 37), Line(5, 6), Line(5, 17), Line(5, 20), Line(5, 39), Line(6, 19), Line(7, 19), Line(7, 31), Line(7, 39), Line(8, 32), Line(8, 37), Line(9, 18), Line(9, 37), Line(10, 11), Line(10, 26), Line(10, 39), Line(11, 15), Line(11, 20), Line(11, 21), Line(12, 27), Line(12, 28), Line(12, 32), Line(12, 36), Line(13, 34), Line(13, 35), Line(14, 28), Line(14, 33), Line(14, 39), Line(15, 16), Line(16, 27), Line(17, 33), Line(18, 23), Line(19, 32), Line(20, 38), Line(21, 35), Line(21, 39), Line(22, 28), Line(22, 29), Line(23, 38), Line(24, 29), Line(25, 27), Line(26, 32), Line(27, 35), Line(30, 34), Line(30, 36), Line(33, 37), Line(34, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 21), Line(0, 29), Line(1, 24), Line(2, 18), Line(3, 39), Line(4, 24), Line(4, 25), Line(5, 6), Line(5, 17), Line(5, 20), Line(5, 39), Line(6, 19), Line(7, 31), Line(9, 18), Line(10, 26), Line(12, 27), Line(12, 36), Line(13, 35), Line(14, 33), Line(14, 39), Line(15, 16), Line(18, 23), Line(20, 38), Line(21, 35), Line(21, 39), Line(23, 38), Line(25, 27), Line(27, 35), Line(30, 34), Line(33, 37),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 20, 4);
g.add_edge(0, 21, 2);
g.add_edge(0, 29, 2.82);
g.add_edge(1, 12, 2.23);
g.add_edge(1, 24, 2);
g.add_edge(2, 18, 2.23);
g.add_edge(2, 31, 5.09);
g.add_edge(3, 9, 9.84);
g.add_edge(3, 31, 3);
g.add_edge(3, 39, 8.06);
g.add_edge(4, 14, 4.12);
g.add_edge(4, 24, 8.94);
g.add_edge(4, 25, 3.16);
g.add_edge(4, 37, 1);
g.add_edge(5, 6, 4.47);
g.add_edge(5, 17, 4.12);
g.add_edge(5, 20, 5);
g.add_edge(5, 39, 7.61);
g.add_edge(6, 19, 3);
g.add_edge(7, 19, 5.83);
g.add_edge(7, 31, 3);
g.add_edge(7, 39, 5.38);
g.add_edge(8, 32, 7.21);
g.add_edge(8, 37, 5.38);
g.add_edge(9, 18, 6.08);
g.add_edge(9, 37, 2);
g.add_edge(10, 11, 3);
g.add_edge(10, 26, 8);
g.add_edge(10, 39, 6.32);
g.add_edge(11, 15, 3.16);
g.add_edge(11, 20, 4.24);
g.add_edge(11, 21, 3.16);
g.add_edge(12, 27, 1.41);
g.add_edge(12, 28, 7.07);
g.add_edge(12, 32, 5.38);
g.add_edge(12, 36, 7.07);
g.add_edge(13, 34, 7.07);
g.add_edge(13, 35, 3.6);
g.add_edge(14, 28, 1.41);
g.add_edge(14, 33, 8.54);
g.add_edge(14, 39, 7.61);
g.add_edge(15, 16, 2);
g.add_edge(16, 27, 7);
g.add_edge(17, 33, 6);
g.add_edge(18, 23, 5.09);
g.add_edge(19, 32, 7.07);
g.add_edge(20, 38, 2.23);
g.add_edge(21, 35, 2);
g.add_edge(21, 39, 5);
g.add_edge(22, 28, 2.82);
g.add_edge(22, 29, 2.23);
g.add_edge(23, 38, 2.23);
g.add_edge(24, 29, 7.07);
g.add_edge(25, 27, 8.06);
g.add_edge(26, 32, 7.81);
g.add_edge(27, 35, 2.23);
g.add_edge(30, 34, 1.41);
g.add_edge(30, 36, 5.09);
g.add_edge(33, 37, 6.08);
g.add_edge(34, 39, 6);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 3.16);
g.set_importance(4, 5.96);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 4.48);
g.set_importance(8, 1.46);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 1.62);
g.set_importance(12, 9.15);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 3.03);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 2.56);
g.set_importance(22, 2.62);
g.set_importance(23, 5.45);
g.set_importance(24, 4.65);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 9.86);
g.set_importance(28, 0);
g.set_importance(29, 4.33);
g.set_importance(30, 0);
g.set_importance(31, 3.57);
g.set_importance(32, 0);
g.set_importance(33, 3.68);
g.set_importance(34, 4.44);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 21), 1.28);
g.set_repair_time(Line(0, 29), 4.16);
g.set_repair_time(Line(1, 24), 3.85);
g.set_repair_time(Line(2, 18), 4.4);
g.set_repair_time(Line(3, 39), 1.16);
g.set_repair_time(Line(4, 24), 2);
g.set_repair_time(Line(4, 25), 2.26);
g.set_repair_time(Line(5, 6), 2.06);
g.set_repair_time(Line(5, 17), 4.39);
g.set_repair_time(Line(5, 20), 4.08);
g.set_repair_time(Line(5, 39), 4.34);
g.set_repair_time(Line(6, 19), 4.96);
g.set_repair_time(Line(7, 31), 2.86);
g.set_repair_time(Line(9, 18), 3.37);
g.set_repair_time(Line(10, 26), 4.78);
g.set_repair_time(Line(12, 27), 2.06);
g.set_repair_time(Line(12, 36), 2.48);
g.set_repair_time(Line(13, 35), 3.88);
g.set_repair_time(Line(14, 33), 4.51);
g.set_repair_time(Line(14, 39), 2.96);
g.set_repair_time(Line(15, 16), 3.02);
g.set_repair_time(Line(18, 23), 1.59);
g.set_repair_time(Line(20, 38), 3.63);
g.set_repair_time(Line(21, 35), 4.45);
g.set_repair_time(Line(21, 39), 3.22);
g.set_repair_time(Line(23, 38), 1.49);
g.set_repair_time(Line(25, 27), 3.12);
g.set_repair_time(Line(27, 35), 1.14);
g.set_repair_time(Line(30, 34), 1.27);
g.set_repair_time(Line(33, 37), 2.55);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 12.3375}, {2, 19.725}, {3, 18.825}, {4, 16.75}, {5, 11.25}, {6, 16.8375}, {7, 15.475}, {8, 24.725}, {9, 20.5}, {10, 10.2}, {11, 6.45}, {12, 9.55}, {13, 9.5}, {14, 11.6}, {15, 10.4}, {16, 12.9}, {17, 16.4}, {18, 16.9375}, {19, 20.5875}, {20, 5}, {21, 2.5}, {22, 6.3125}, {23, 10.575}, {24, 12.3625}, {25, 17.8625}, {26, 20.2}, {27, 7.7875}, {28, 9.8375}, {29, 3.525}, {30, 18.0125}, {31, 19.225}, {32, 16.275}, {33, 22.275}, {34, 16.25}, {35, 5}, {36, 18.3875}, {37, 18}, {38, 7.7875}, {39, 8.75}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 12.3375}, {1, 0}, {2, 27.8125}, {3, 26.1625}, {4, 13.675}, {5, 23.5875}, {6, 22.1}, {7, 22.8125}, {8, 18.525}, {9, 17.425}, {10, 17.5375}, {11, 13.7875}, {12, 2.7875}, {13, 11.8375}, {14, 13.3875}, {15, 15.8}, {16, 13.3}, {17, 28.7375}, {18, 25.025}, {19, 18.35}, {20, 17.3375}, {21, 9.8375}, {22, 14.125}, {23, 22.9125}, {24, 2.5}, {25, 14.625}, {26, 19.275}, {27, 4.55}, {28, 11.625}, {29, 11.3375}, {30, 17.9875}, {31, 26.5625}, {32, 9.5125}, {33, 22.525}, {34, 19.75}, {35, 7.3375}, {36, 11.625}, {37, 14.925}, {38, 20.125}, {39, 16.0875}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 19.725}, {1, 27.8125}, {2, 0}, {3, 10.1125}, {4, 14.1375}, {5, 20.975}, {6, 21.15}, {7, 10.1125}, {8, 19.6125}, {9, 10.3875}, {10, 23.775}, {11, 20.025}, {12, 29.275}, {13, 29.225}, {14, 19.2875}, {15, 23.975}, {16, 26.475}, {17, 26.125}, {18, 2.7875}, {19, 17.4}, {20, 14.725}, {21, 22.225}, {22, 24.575}, {23, 9.15}, {24, 25.3125}, {25, 18.0875}, {26, 33.775}, {27, 27.5125}, {28, 21.05}, {29, 23.25}, {30, 26.1}, {31, 6.3625}, {32, 26.2375}, {33, 20.4875}, {34, 24.3375}, {35, 24.725}, {36, 32.4625}, {37, 12.8875}, {38, 11.9375}, {39, 16.8375}, 