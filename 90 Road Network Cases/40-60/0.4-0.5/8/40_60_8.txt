node_num : 40
demand_node_num : 16
edge_num : 60
damaged_edge_num : 30
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 4, 5, 7, 9, 10, 14, 17, 19, 20, 30, 31, 33, 35, 36, 37, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 0), Line(0, 31), Line(1, 7), Line(1, 10), Line(2, 29), Line(2, 36), Line(3, 13), Line(3, 35), Line(3, 37), Line(4, 5), Line(4, 22), Line(5, 8), Line(5, 22), Line(6, 8), Line(6, 23), Line(6, 26), Line(6, 39), Line(7, 18), Line(7, 34), Line(8, 20), Line(9, 19), Line(9, 29), Line(10, 12), Line(10, 16), Line(11, 12), Line(11, 14), Line(11, 36), Line(13, 20), Line(13, 38), Line(14, 22), Line(14, 25), Line(14, 32), Line(14, 35), Line(15, 16), Line(15, 24), Line(16, 32), Line(17, 26), Line(17, 38), Line(18, 33), Line(18, 36), Line(19, 25), Line(20, 33), Line(20, 34), Line(21, 23), Line(21, 26), Line(21, 27), Line(22, 27), Line(22, 39), Line(24, 28), Line(24, 36), Line(25, 31), Line(27, 30), Line(28, 30), Line(28, 39), Line(30, 36), Line(31, 32), Line(33, 38), Line(34, 37), Line(35, 36), Line(35, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 0), Line(1, 7), Line(1, 10), Line(2, 36), Line(3, 13), Line(4, 5), Line(5, 8), Line(6, 23), Line(6, 39), Line(7, 18), Line(7, 34), Line(8, 20), Line(9, 29), Line(13, 20), Line(13, 38), Line(14, 25), Line(14, 32), Line(14, 35), Line(15, 16), Line(15, 24), Line(16, 32), Line(17, 38), Line(18, 36), Line(19, 25), Line(22, 27), Line(28, 30), Line(31, 32), Line(33, 38), Line(34, 37), Line(35, 39),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 0, 0);
g.add_edge(0, 31, 5.38);
g.add_edge(1, 7, 6.4);
g.add_edge(1, 10, 4.12);
g.add_edge(2, 29, 6);
g.add_edge(2, 36, 4.47);
g.add_edge(3, 13, 9.48);
g.add_edge(3, 35, 9);
g.add_edge(3, 37, 3.6);
g.add_edge(4, 5, 2.23);
g.add_edge(4, 22, 1);
g.add_edge(5, 8, 7.28);
g.add_edge(5, 22, 3.16);
g.add_edge(6, 8, 10.81);
g.add_edge(6, 23, 5.83);
g.add_edge(6, 26, 7.07);
g.add_edge(6, 39, 4);
g.add_edge(7, 18, 8.24);
g.add_edge(7, 34, 7.21);
g.add_edge(8, 20, 3);
g.add_edge(9, 19, 5);
g.add_edge(9, 29, 2);
g.add_edge(10, 12, 1);
g.add_edge(10, 16, 5);
g.add_edge(11, 12, 2.23);
g.add_edge(11, 14, 1);
g.add_edge(11, 36, 1.41);
g.add_edge(13, 20, 7.21);
g.add_edge(13, 38, 7.81);
g.add_edge(14, 22, 5.83);
g.add_edge(14, 25, 1);
g.add_edge(14, 32, 7.28);
g.add_edge(14, 35, 8.06);
g.add_edge(15, 16, 5.83);
g.add_edge(15, 24, 8.6);
g.add_edge(16, 32, 3.6);
g.add_edge(17, 26, 6);
g.add_edge(17, 38, 8.06);
g.add_edge(18, 33, 7.07);
g.add_edge(18, 36, 8.24);
g.add_edge(19, 25, 9.21);
g.add_edge(20, 33, 2.23);
g.add_edge(20, 34, 4.12);
g.add_edge(21, 23, 1);
g.add_edge(21, 26, 6.4);
g.add_edge(21, 27, 8.48);
g.add_edge(22, 27, 9.43);
g.add_edge(22, 39, 5.83);
g.add_edge(24, 28, 5.65);
g.add_edge(24, 36, 7);
g.add_edge(25, 31, 9.48);
g.add_edge(27, 30, 8.06);
g.add_edge(28, 30, 5.09);
g.add_edge(28, 39, 7.21);
g.add_edge(30, 36, 2.23);
g.add_edge(31, 32, 1.41);
g.add_edge(33, 38, 3.16);
g.add_edge(34, 37, 6.32);
g.add_edge(35, 36, 9.05);
g.add_edge(35, 39, 1);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 2.93);
g.set_importance(5, 7.83);
g.set_importance(6, 0);
g.set_importance(7, 2.13);
g.set_importance(8, 0);
g.set_importance(9, 5.44);
g.set_importance(10, 3.93);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 6.82);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 3.33);
g.set_importance(18, 0);
g.set_importance(19, 9.65);
g.set_importance(20, 6.97);
g.set_importance(21, 0);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 2.13);
g.set_importance(31, 1.58);
g.set_importance(32, 0);
g.set_importance(33, 8.07);
g.set_importance(34, 0);
g.set_importance(35, 9.26);
g.set_importance(36, 2.23);
g.set_importance(37, 7.01);
g.set_importance(38, 0);
g.set_importance(39, 2.87);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 0), 3.63);
g.set_repair_time(Line(1, 7), 1.07);
g.set_repair_time(Line(1, 10), 1.07);
g.set_repair_time(Line(2, 36), 1.24);
g.set_repair_time(Line(3, 13), 2.92);
g.set_repair_time(Line(4, 5), 4.52);
g.set_repair_time(Line(5, 8), 3.92);
g.set_repair_time(Line(6, 23), 3.94);
g.set_repair_time(Line(6, 39), 2.36);
g.set_repair_time(Line(7, 18), 4.44);
g.set_repair_time(Line(7, 34), 1.62);
g.set_repair_time(Line(8, 20), 4.81);
g.set_repair_time(Line(9, 29), 3.46);
g.set_repair_time(Line(13, 20), 2.69);
g.set_repair_time(Line(13, 38), 4.17);
g.set_repair_time(Line(14, 25), 1.78);
g.set_repair_time(Line(14, 32), 1.55);
g.set_repair_time(Line(14, 35), 2.58);
g.set_repair_time(Line(15, 16), 1.75);
g.set_repair_time(Line(15, 24), 3.01);
g.set_repair_time(Line(16, 32), 1.34);
g.set_repair_time(Line(17, 38), 1.09);
g.set_repair_time(Line(18, 36), 3.12);
g.set_repair_time(Line(19, 25), 3.73);
g.set_repair_time(Line(22, 27), 2.55);
g.set_repair_time(Line(28, 30), 2.38);
g.set_repair_time(Line(31, 32), 1.93);
g.set_repair_time(Line(33, 38), 1.66);
g.set_repair_time(Line(34, 37), 1.76);
g.set_repair_time(Line(35, 39), 4.34);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 24.3875}, {2, 26.1875}, {3, 38.9125}, {4, 26.125}, {5, 28.825}, {6, 33.9125}, {7, 32.3875}, {8, 37.925}, {9, 36.1875}, {10, 19.2375}, {11, 18.8375}, {12, 20.4875}, {13, 50.6875}, {14, 17.5875}, {15, 20.275}, {16, 12.9875}, {17, 50.25}, {18, 30.9}, {19, 30.0875}, {20, 41.675}, {21, 42.45}, {22, 24.875}, {23, 41.2}, {24, 29.35}, {25, 18.575}, {26, 42.75}, {27, 33.4625}, {28, 29.75}, {29, 33.6875}, {30, 23.3875}, {31, 6.725}, {32, 8.4875}, {33, 39.7375}, {34, 41.4}, {35, 27.6625}, {36, 20.6}, {37, 43.4125}, {38, 43.6875}, {39, 28.9125}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 24.3875}, {1, 0}, {2, 16.5375}, {3, 29.4125}, {4, 18.975}, {5, 21.675}, {6, 26.7625}, {7, 8}, {8, 25.9125}, {9, 26.5375}, {10, 5.15}, {11, 9.1875}, {12, 6.4}, {13, 31.175}, {14, 10.4375}, {15, 18.6875}, {16, 11.4}, {17, 38.975}, {18, 18.3}, {19, 23.2}, {20, 22.1625}, {21, 34.4125}, {22, 17.725}, {23, 34.05}, {24, 19.7}, {25, 11.6875}, {26, 35.6}, {27, 23.8125}, {28, 20.1}, {29, 24.0375}, {30, 13.7375}, {31, 17.6625}, {32, 15.9}, {33, 24.95}, {34, 17.0125}, {35, 20.5125}, {36, 10.95}, {37, 24.9125}, {38, 28.9}, {39, 21.7625}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 26.1875}, {1, 16.5375}, {2, 0}, {3, 28.15}, {4, 17.1375}, {5, 19.8375}, {6, 23.15}, {7, 24.5375}, {8, 28.9375}, {9, 10}, {10, 11.3875}, {11, 7.35}, {12, 10.1375}, {13, 36.525}, {14, 8.6}, {15, 24.925}, {16, 17.6375}, {17, 38.75}, {18, 15.8875}, {19, 16.25}, {20, 27.5125}, {21, 29.05}, {22, 15.8875}, {23, 30.3}, {24, 14.3375}, {25, 9.85}, {26, 31.9875}, {27, 18.45}, {28, 14.7375}, {29, 7.5}, {30, 8.375}, {31, 19.4625}, {32, 17.7}, {33, 24.725}, {34, 32.6625}, {35, 16.9}, {36, 5.5875}, {37, 32.65}, {38, 28.675}, {39, 18.15}, 