node_num : 40
demand_node_num : 16
edge_num : 60
damaged_edge_num : 30
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 6, 9, 10, 11, 16, 17, 20, 21, 25, 28, 30, 31, 32, 34, 38,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 5), Line(0, 10), Line(0, 18), Line(0, 32), Line(1, 9), Line(1, 31), Line(2, 25), Line(2, 33), Line(2, 36), Line(3, 18), Line(3, 20), Line(4, 9), Line(4, 15), Line(4, 21), Line(5, 14), Line(5, 20), Line(5, 28), Line(5, 29), Line(6, 8), Line(6, 15), Line(6, 16), Line(6, 30), Line(7, 13), Line(7, 26), Line(7, 27), Line(7, 28), Line(8, 35), Line(8, 36), Line(9, 33), Line(9, 39), Line(10, 27), Line(11, 19), Line(11, 38), Line(12, 24), Line(12, 28), Line(13, 35), Line(14, 21), Line(14, 27), Line(15, 17), Line(15, 23), Line(15, 30), Line(16, 23), Line(16, 34), Line(16, 39), Line(17, 30), Line(18, 32), Line(18, 39), Line(19, 31), Line(20, 21), Line(20, 35), Line(21, 39), Line(22, 34), Line(23, 33), Line(24, 25), Line(26, 36), Line(28, 29), Line(29, 37), Line(29, 39), Line(33, 37), Line(37, 38),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 5), Line(0, 10), Line(0, 32), Line(1, 9), Line(2, 33), Line(3, 20), Line(4, 9), Line(4, 21), Line(5, 20), Line(6, 15), Line(7, 13), Line(7, 26), Line(7, 27), Line(8, 35), Line(8, 36), Line(9, 39), Line(10, 27), Line(14, 27), Line(15, 23), Line(16, 34), Line(17, 30), Line(18, 32), Line(18, 39), Line(20, 21), Line(20, 35), Line(21, 39), Line(22, 34), Line(24, 25), Line(28, 29), Line(29, 37),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 5, 8.54);
g.add_edge(0, 10, 6.32);
g.add_edge(0, 18, 4.24);
g.add_edge(0, 32, 5);
g.add_edge(1, 9, 5);
g.add_edge(1, 31, 9.48);
g.add_edge(2, 25, 5.09);
g.add_edge(2, 33, 5);
g.add_edge(2, 36, 1.41);
g.add_edge(3, 18, 5);
g.add_edge(3, 20, 3.6);
g.add_edge(4, 9, 6.32);
g.add_edge(4, 15, 7.07);
g.add_edge(4, 21, 9.05);
g.add_edge(5, 14, 6.7);
g.add_edge(5, 20, 10.63);
g.add_edge(5, 28, 5.83);
g.add_edge(5, 29, 7.28);
g.add_edge(6, 8, 6.32);
g.add_edge(6, 15, 3);
g.add_edge(6, 16, 4.12);
g.add_edge(6, 30, 4.12);
g.add_edge(7, 13, 5.65);
g.add_edge(7, 26, 1.41);
g.add_edge(7, 27, 8.06);
g.add_edge(7, 28, 3.16);
g.add_edge(8, 35, 9.21);
g.add_edge(8, 36, 5.09);
g.add_edge(9, 33, 2.82);
g.add_edge(9, 39, 3.16);
g.add_edge(10, 27, 2.82);
g.add_edge(11, 19, 2);
g.add_edge(11, 38, 4.12);
g.add_edge(12, 24, 4.47);
g.add_edge(12, 28, 5);
g.add_edge(13, 35, 3.16);
g.add_edge(14, 21, 4.12);
g.add_edge(14, 27, 7.61);
g.add_edge(15, 17, 7);
g.add_edge(15, 23, 3.6);
g.add_edge(15, 30, 1.41);
g.add_edge(16, 23, 6.08);
g.add_edge(16, 34, 6.4);
g.add_edge(16, 39, 2);
g.add_edge(17, 30, 8.06);
g.add_edge(18, 32, 3.6);
g.add_edge(18, 39, 2.23);
g.add_edge(19, 31, 2.23);
g.add_edge(20, 21, 1);
g.add_edge(20, 35, 2.23);
g.add_edge(21, 39, 7.21);
g.add_edge(22, 34, 6.4);
g.add_edge(23, 33, 5.38);
g.add_edge(24, 25, 2);
g.add_edge(26, 36, 8.06);
g.add_edge(28, 29, 2.23);
g.add_edge(29, 37, 2);
g.add_edge(29, 39, 4.12);
g.add_edge(33, 37, 5.38);
g.add_edge(37, 38, 4.47);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 4.06);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 3.23);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 8.39);
g.set_importance(10, 4.52);
g.set_importance(11, 9.31);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 1.26);
g.set_importance(17, 4.51);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 3.97);
g.set_importance(21, 8.74);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 9.2);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 2.77);
g.set_importance(29, 0);
g.set_importance(30, 8.46);
g.set_importance(31, 3.95);
g.set_importance(32, 2.23);
g.set_importance(33, 0);
g.set_importance(34, 6.5);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 1.72);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 5), 3.52);
g.set_repair_time(Line(0, 10), 4.61);
g.set_repair_time(Line(0, 32), 2.17);
g.set_repair_time(Line(1, 9), 3.66);
g.set_repair_time(Line(2, 33), 1.11);
g.set_repair_time(Line(3, 20), 1.96);
g.set_repair_time(Line(4, 9), 3);
g.set_repair_time(Line(4, 21), 3.37);
g.set_repair_time(Line(5, 20), 4.94);
g.set_repair_time(Line(6, 15), 1.53);
g.set_repair_time(Line(7, 13), 2.42);
g.set_repair_time(Line(7, 26), 2.11);
g.set_repair_time(Line(7, 27), 1.59);
g.set_repair_time(Line(8, 35), 2.11);
g.set_repair_time(Line(8, 36), 4.29);
g.set_repair_time(Line(9, 39), 1.12);
g.set_repair_time(Line(10, 27), 2.52);
g.set_repair_time(Line(14, 27), 4.84);
g.set_repair_time(Line(15, 23), 2.16);
g.set_repair_time(Line(16, 34), 1.58);
g.set_repair_time(Line(17, 30), 2.56);
g.set_repair_time(Line(18, 32), 3.39);
g.set_repair_time(Line(18, 39), 2.68);
g.set_repair_time(Line(20, 21), 3.44);
g.set_repair_time(Line(20, 35), 3.74);
g.set_repair_time(Line(21, 39), 1.23);
g.set_repair_time(Line(22, 34), 3.31);
g.set_repair_time(Line(24, 25), 1.05);
g.set_repair_time(Line(28, 29), 1.25);
g.set_repair_time(Line(29, 37), 1.45);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 18.2875}, {2, 21.8125}, {3, 11.55}, {4, 19.9375}, {5, 10.675}, {6, 15.7375}, {7, 19.975}, {8, 23.6375}, {9, 12.0375}, {10, 7.9}, {11, 26.475}, {12, 22.275}, {13, 22.7875}, {14, 19.05}, {15, 19.4875}, {16, 10.5875}, {17, 28.2375}, {18, 5.3}, {19, 28.975}, {20, 16.05}, {21, 17.1}, {22, 26.5875}, {23, 18.1875}, {24, 27.8625}, {25, 28.175}, {26, 21.7375}, {27, 11.425}, {28, 16.025}, {29, 13.2375}, {30, 20.8875}, {31, 30.1375}, {32, 6.25}, {33, 15.5625}, {34, 18.5875}, {35, 18.8375}, {36, 23.575}, {37, 15.7375}, {38, 21.325}, {39, 8.0875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 18.2875}, {1, 0}, {2, 16.025}, {3, 19.2375}, {4, 14.15}, {5, 24.45}, {6, 17.85}, {7, 22.0875}, {8, 24.15}, {9, 6.25}, {10, 26.1875}, {11, 17.1375}, {12, 24.3875}, {13, 27.2}, {14, 24.3625}, {15, 21}, {16, 12.7}, {17, 29.75}, {18, 12.9875}, {19, 14.6375}, {20, 20.4625}, {21, 19.2125}, {22, 28.7}, {23, 16.5}, {24, 24.8875}, {25, 22.3875}, {26, 23.85}, {27, 29.7125}, {28, 18.1375}, {29, 15.35}, {30, 22.7625}, {31, 11.85}, {32, 17.4875}, {33, 9.775}, {34, 20.7}, {35, 23.25}, {36, 17.7875}, {37, 16.5}, {38, 22.0875}, {39, 10.2}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 21.8125}, {1, 16.025}, {2, 0}, {3, 22.7625}, {4, 17.675}, {5, 24.575}, {6, 16.025}, {7, 13.6}, {8, 8.125}, {9, 9.775}, {10, 27.2}, {11, 23.7125}, {12, 14.45}, {13, 20.6625}, {14, 27.8875}, {15, 17.475}, {16, 16.225}, {17, 26.225}, {18, 16.5125}, {19, 26.2125}, {20, 22.425}, {21, 22.7375}, {22, 32.225}, {23, 12.975}, {24, 8.8625}, {25, 6.3625}, {26, 11.8375}, {27, 23.675}, {28, 17.55}, {29, 15.475}, {30, 19.2375}, {31, 27.875}, {32, 21.0125}, {33, 6.25}, {34, 24.225}, {35, 19.6375}, {36, 1.7625}, {37, 12.975}, {38, 18.5625}, {39, 13.725}, 