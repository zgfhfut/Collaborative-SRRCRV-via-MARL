node_num : 40
demand_node_num : 16
edge_num : 60
damaged_edge_num : 30
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 4, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 30, 32, 33, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 7), Line(0, 11), Line(0, 16), Line(0, 20), Line(0, 35), Line(1, 6), Line(1, 9), Line(2, 30), Line(2, 38), Line(3, 21), Line(3, 37), Line(4, 12), Line(4, 19), Line(4, 20), Line(5, 15), Line(5, 32), Line(6, 13), Line(6, 30), Line(7, 29), Line(8, 10), Line(8, 17), Line(8, 18), Line(9, 29), Line(9, 36), Line(9, 37), Line(10, 32), Line(10, 34), Line(11, 13), Line(12, 14), Line(12, 31), Line(13, 18), Line(14, 18), Line(14, 22), Line(14, 28), Line(15, 38), Line(15, 39), Line(16, 20), Line(17, 21), Line(18, 26), Line(19, 24), Line(20, 35), Line(20, 37), Line(21, 36), Line(22, 28), Line(23, 30), Line(23, 33), Line(23, 39), Line(24, 25), Line(24, 33), Line(25, 31), Line(26, 31), Line(26, 34), Line(27, 29), Line(27, 35), Line(28, 32), Line(28, 36), Line(31, 32), Line(31, 39), Line(33, 39), Line(34, 36),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 7), Line(0, 11), Line(0, 20), Line(3, 21), Line(3, 37), Line(5, 32), Line(7, 29), Line(8, 10), Line(8, 17), Line(9, 37), Line(10, 34), Line(12, 14), Line(13, 18), Line(14, 18), Line(14, 22), Line(14, 28), Line(15, 38), Line(17, 21), Line(19, 24), Line(20, 35), Line(21, 36), Line(22, 28), Line(23, 33), Line(23, 39), Line(26, 34), Line(27, 35), Line(31, 32), Line(31, 39), Line(33, 39), Line(34, 36),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 7, 3);
g.add_edge(0, 11, 6);
g.add_edge(0, 16, 4);
g.add_edge(0, 20, 4);
g.add_edge(0, 35, 4.47);
g.add_edge(1, 6, 7.61);
g.add_edge(1, 9, 1.41);
g.add_edge(2, 30, 3.16);
g.add_edge(2, 38, 5.38);
g.add_edge(3, 21, 7.28);
g.add_edge(3, 37, 4.12);
g.add_edge(4, 12, 3.16);
g.add_edge(4, 19, 8.24);
g.add_edge(4, 20, 2.23);
g.add_edge(5, 15, 1);
g.add_edge(5, 32, 2.23);
g.add_edge(6, 13, 5);
g.add_edge(6, 30, 9.43);
g.add_edge(7, 29, 3.6);
g.add_edge(8, 10, 4.12);
g.add_edge(8, 17, 1.41);
g.add_edge(8, 18, 5.65);
g.add_edge(9, 29, 9.43);
g.add_edge(9, 36, 3);
g.add_edge(9, 37, 2.82);
g.add_edge(10, 32, 9.21);
g.add_edge(10, 34, 1.41);
g.add_edge(11, 13, 5.83);
g.add_edge(12, 14, 9.43);
g.add_edge(12, 31, 10);
g.add_edge(13, 18, 5);
g.add_edge(14, 18, 1);
g.add_edge(14, 22, 4.24);
g.add_edge(14, 28, 5);
g.add_edge(15, 38, 5.09);
g.add_edge(15, 39, 7.28);
g.add_edge(16, 20, 5.65);
g.add_edge(17, 21, 5.65);
g.add_edge(18, 26, 2.82);
g.add_edge(19, 24, 7.28);
g.add_edge(20, 35, 2);
g.add_edge(20, 37, 4.12);
g.add_edge(21, 36, 4.12);
g.add_edge(22, 28, 3.6);
g.add_edge(23, 30, 9.89);
g.add_edge(23, 33, 8.6);
g.add_edge(23, 39, 8);
g.add_edge(24, 25, 10);
g.add_edge(24, 33, 7.61);
g.add_edge(25, 31, 7.28);
g.add_edge(26, 31, 6);
g.add_edge(26, 34, 4.12);
g.add_edge(27, 29, 8.06);
g.add_edge(27, 35, 2.23);
g.add_edge(28, 32, 12.72);
g.add_edge(28, 36, 6.4);
g.add_edge(31, 32, 7.07);
g.add_edge(31, 39, 9.21);
g.add_edge(33, 39, 7.61);
g.add_edge(34, 36, 4.47);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 9.07);
g.set_importance(4, 2.66);
g.set_importance(5, 0);
g.set_importance(6, 4.14);
g.set_importance(7, 0);
g.set_importance(8, 9.46);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 5.3);
g.set_importance(13, 6.98);
g.set_importance(14, 0);
g.set_importance(15, 7.3);
g.set_importance(16, 0);
g.set_importance(17, 8.07);
g.set_importance(18, 7.07);
g.set_importance(19, 9.16);
g.set_importance(20, 9.28);
g.set_importance(21, 4.77);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 4.25);
g.set_importance(31, 0);
g.set_importance(32, 9.06);
g.set_importance(33, 2.82);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 3.34);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 7), 4.83);
g.set_repair_time(Line(0, 11), 4.2);
g.set_repair_time(Line(0, 20), 4.44);
g.set_repair_time(Line(3, 21), 1.73);
g.set_repair_time(Line(3, 37), 2.95);
g.set_repair_time(Line(5, 32), 2.11);
g.set_repair_time(Line(7, 29), 1.11);
g.set_repair_time(Line(8, 10), 4.63);
g.set_repair_time(Line(8, 17), 3.15);
g.set_repair_time(Line(9, 37), 3.64);
g.set_repair_time(Line(10, 34), 3.3);
g.set_repair_time(Line(12, 14), 1.24);
g.set_repair_time(Line(13, 18), 3.29);
g.set_repair_time(Line(14, 18), 4.4);
g.set_repair_time(Line(14, 22), 3.67);
g.set_repair_time(Line(14, 28), 4.09);
g.set_repair_time(Line(15, 38), 1.68);
g.set_repair_time(Line(17, 21), 2.49);
g.set_repair_time(Line(19, 24), 3.5);
g.set_repair_time(Line(20, 35), 3.08);
g.set_repair_time(Line(21, 36), 2.76);
g.set_repair_time(Line(22, 28), 3.35);
g.set_repair_time(Line(23, 33), 1.59);
g.set_repair_time(Line(23, 39), 2.84);
g.set_repair_time(Line(26, 34), 3.95);
g.set_repair_time(Line(27, 35), 4.29);
g.set_repair_time(Line(31, 32), 2.16);
g.set_repair_time(Line(31, 39), 3.46);
g.set_repair_time(Line(33, 39), 4.01);
g.set_repair_time(Line(34, 36), 3.29);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 15.4375}, {2, 36.775}, {3, 15.3}, {4, 7.7875}, {5, 35.8625}, {6, 21.0375}, {7, 3.75}, {8, 28.1}, {9, 13.675}, {10, 24.775}, {11, 7.5}, {12, 11.7375}, {13, 14.7875}, {14, 22.2875}, {15, 37.1125}, {16, 5}, {17, 29.6375}, {18, 21.0375}, {19, 18.0875}, {20, 5}, {21, 22.575}, {22, 27.5875}, {23, 45.1875}, {24, 27.1875}, {25, 33.3375}, {26, 24.5625}, {27, 8.375}, {28, 25.425}, {29, 8.25}, {30, 32.825}, {31, 24.2375}, {32, 33.075}, {33, 36.7}, {34, 23.0125}, {35, 5.5875}, {36, 17.425}, {37, 10.15}, {38, 43.475}, {39, 35.75}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 15.4375}, {1, 0}, {2, 25.25}, {3, 10.4375}, {4, 13.225}, {5, 27.1625}, {6, 9.5125}, {7, 18.05}, {8, 18.0125}, {9, 1.7625}, {10, 12.8625}, {11, 22.9375}, {12, 17.175}, {13, 15.7625}, {14, 19.7625}, {15, 28.4125}, {16, 17.5}, {17, 17.725}, {18, 19.775}, {19, 23.525}, {20, 10.4375}, {21, 10.6625}, {22, 18.0125}, {23, 33.6625}, {24, 32.625}, {25, 32.85}, {26, 16.25}, {27, 15.725}, {28, 13.5125}, {29, 13.55}, {30, 21.3}, {31, 23.75}, {32, 24.375}, {33, 42.1375}, {34, 11.1}, {35, 12.9375}, {36, 5.5125}, {37, 5.2875}, {38, 31.975}, {39, 35.2625}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 36.775}, {1, 25.25}, {2, 0}, {3, 35.6875}, {4, 38.475}, {5, 14.3375}, {6, 15.7375}, {7, 40.525}, {8, 33.7875}, {9, 27.0125}, {10, 28.6375}, {11, 29.275}, {12, 38.4625}, {13, 21.9875}, {14, 29.4875}, {15, 13.0875}, {16, 41.775}, {17, 35.55}, {18, 28.2375}, {19, 45.675}, {20, 35.6875}, {21, 35.9125}, {22, 34.7875}, {23, 16.3125}, {24, 36.575}, {25, 35.0625}, {26, 31.7625}, {27, 40.975}, {28, 33.025}, {29, 38.8}, {30, 3.95}, {31, 25.9625}, {32, 17.125}, {33, 27.0625}, {34, 30.4}, {35, 38.1875}, {36, 30.7625}, {37, 30.5375}, {38, 6.725}, {39, 22.1875}, 