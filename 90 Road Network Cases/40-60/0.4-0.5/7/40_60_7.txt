node_num : 40
demand_node_num : 16
edge_num : 60
damaged_edge_num : 30
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 5, 9, 10, 15, 17, 21, 23, 25, 28, 29, 32, 33, 34, 36, 37,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 0), Line(0, 8), Line(0, 11), Line(1, 3), Line(1, 10), Line(1, 24), Line(2, 9), Line(2, 12), Line(2, 20), Line(3, 19), Line(3, 28), Line(3, 29), Line(4, 6), Line(4, 11), Line(4, 38), Line(4, 39), Line(5, 22), Line(5, 32), Line(6, 14), Line(6, 37), Line(7, 35), Line(7, 38), Line(8, 29), Line(8, 31), Line(8, 32), Line(9, 16), Line(9, 17), Line(10, 33), Line(10, 36), Line(10, 39), Line(11, 13), Line(12, 23), Line(12, 38), Line(13, 31), Line(14, 16), Line(14, 25), Line(15, 30), Line(15, 34), Line(17, 18), Line(17, 21), Line(17, 28), Line(18, 20), Line(18, 21), Line(18, 36), Line(19, 28), Line(19, 34), Line(20, 24), Line(21, 30), Line(22, 30), Line(22, 35), Line(23, 28), Line(24, 27), Line(24, 34), Line(25, 26), Line(26, 37), Line(27, 31), Line(33, 34), Line(33, 35), Line(33, 39), Line(34, 37),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 8), Line(0, 11), Line(2, 9), Line(2, 12), Line(2, 20), Line(4, 6), Line(4, 39), Line(6, 14), Line(8, 31), Line(8, 32), Line(9, 16), Line(9, 17), Line(10, 33), Line(10, 36), Line(11, 13), Line(12, 23), Line(13, 31), Line(15, 30), Line(18, 20), Line(19, 34), Line(20, 24), Line(21, 30), Line(22, 30), Line(22, 35), Line(23, 28), Line(24, 27), Line(24, 34), Line(26, 37), Line(27, 31), Line(33, 39),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 0, 0);
g.add_edge(0, 8, 2.23);
g.add_edge(0, 11, 5.65);
g.add_edge(1, 3, 5);
g.add_edge(1, 10, 2.23);
g.add_edge(1, 24, 5);
g.add_edge(2, 9, 6.32);
g.add_edge(2, 12, 3.6);
g.add_edge(2, 20, 4.47);
g.add_edge(3, 19, 2);
g.add_edge(3, 28, 4.47);
g.add_edge(3, 29, 2.23);
g.add_edge(4, 6, 4.47);
g.add_edge(4, 11, 8.94);
g.add_edge(4, 38, 9.43);
g.add_edge(4, 39, 2.23);
g.add_edge(5, 22, 8.54);
g.add_edge(5, 32, 8.54);
g.add_edge(6, 14, 3.6);
g.add_edge(6, 37, 4.12);
g.add_edge(7, 35, 12.04);
g.add_edge(7, 38, 8);
g.add_edge(8, 29, 1.41);
g.add_edge(8, 31, 1);
g.add_edge(8, 32, 5);
g.add_edge(9, 16, 8.54);
g.add_edge(9, 17, 8.48);
g.add_edge(10, 33, 10.29);
g.add_edge(10, 36, 6.4);
g.add_edge(10, 39, 8.06);
g.add_edge(11, 13, 8.54);
g.add_edge(12, 23, 9.89);
g.add_edge(12, 38, 9.05);
g.add_edge(13, 31, 6.08);
g.add_edge(14, 16, 2);
g.add_edge(14, 25, 6.4);
g.add_edge(15, 30, 5);
g.add_edge(15, 34, 8.06);
g.add_edge(17, 18, 2);
g.add_edge(17, 21, 2);
g.add_edge(17, 28, 4);
g.add_edge(18, 20, 8.48);
g.add_edge(18, 21, 4);
g.add_edge(18, 36, 5);
g.add_edge(19, 28, 2.82);
g.add_edge(19, 34, 4.47);
g.add_edge(20, 24, 5.09);
g.add_edge(21, 30, 1.41);
g.add_edge(22, 30, 3.16);
g.add_edge(22, 35, 11.31);
g.add_edge(23, 28, 1);
g.add_edge(24, 27, 3.16);
g.add_edge(24, 34, 1.41);
g.add_edge(25, 26, 3.6);
g.add_edge(26, 37, 4);
g.add_edge(27, 31, 4.24);
g.add_edge(33, 34, 5.83);
g.add_edge(33, 35, 5.09);
g.add_edge(33, 39, 5.38);
g.add_edge(34, 37, 5);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 6.21);
g.set_importance(4, 0);
g.set_importance(5, 4.8);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 8.72);
g.set_importance(10, 1.81);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 0);
g.set_importance(15, 3.53);
g.set_importance(16, 0);
g.set_importance(17, 2.86);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 8.16);
g.set_importance(22, 0);
g.set_importance(23, 9.96);
g.set_importance(24, 0);
g.set_importance(25, 1.48);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 3.63);
g.set_importance(29, 8.86);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 6.78);
g.set_importance(33, 9.64);
g.set_importance(34, 5.76);
g.set_importance(35, 0);
g.set_importance(36, 6.19);
g.set_importance(37, 2.96);
g.set_importance(38, 0);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 8), 3.89);
g.set_repair_time(Line(0, 11), 3.78);
g.set_repair_time(Line(2, 9), 2.61);
g.set_repair_time(Line(2, 12), 1.13);
g.set_repair_time(Line(2, 20), 1.46);
g.set_repair_time(Line(4, 6), 2.31);
g.set_repair_time(Line(4, 39), 1.55);
g.set_repair_time(Line(6, 14), 4.46);
g.set_repair_time(Line(8, 31), 4.48);
g.set_repair_time(Line(8, 32), 3.96);
g.set_repair_time(Line(9, 16), 1.73);
g.set_repair_time(Line(9, 17), 1.78);
g.set_repair_time(Line(10, 33), 3.42);
g.set_repair_time(Line(10, 36), 2.83);
g.set_repair_time(Line(11, 13), 1.49);
g.set_repair_time(Line(12, 23), 2.44);
g.set_repair_time(Line(13, 31), 1.49);
g.set_repair_time(Line(15, 30), 1.31);
g.set_repair_time(Line(18, 20), 4.77);
g.set_repair_time(Line(19, 34), 4.4);
g.set_repair_time(Line(20, 24), 1.26);
g.set_repair_time(Line(21, 30), 2.88);
g.set_repair_time(Line(22, 30), 2.31);
g.set_repair_time(Line(22, 35), 4.77);
g.set_repair_time(Line(23, 28), 2.09);
g.set_repair_time(Line(24, 27), 3.88);
g.set_repair_time(Line(24, 34), 4.39);
g.set_repair_time(Line(26, 37), 2.37);
g.set_repair_time(Line(27, 31), 1.79);
g.set_repair_time(Line(33, 39), 4.51);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 13.5875}, {2, 25.2375}, {3, 7.3375}, {4, 18.2375}, {5, 19.7125}, {6, 23.825}, {7, 40.025}, {8, 2.7875}, {9, 28.525}, {10, 16.375}, {11, 7.0625}, {12, 26.5375}, {13, 11.6375}, {14, 28.325}, {15, 25.125}, {16, 30.825}, {17, 17.925}, {18, 20.425}, {19, 9.8375}, {20, 19.65}, {21, 20.425}, {22, 26.1375}, {23, 14.175}, {24, 13.2875}, {25, 30.8}, {26, 26.3}, {27, 9.3375}, {28, 12.925}, {29, 4.55}, {30, 22.1875}, {31, 4.0375}, {32, 9.0375}, {33, 22.3375}, {34, 15.05}, {35, 28.7}, {36, 24.375}, {37, 21.3}, {38, 30.025}, {39, 21.025}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 13.5875}, {1, 0}, {2, 18.2}, {3, 6.25}, {4, 15.65}, {5, 27.725}, {6, 19.4125}, {7, 36.7125}, {8, 10.8}, {9, 26.1}, {10, 2.7875}, {11, 20.65}, {12, 22.7}, {13, 19.65}, {14, 23.9125}, {15, 18.0875}, {16, 26.4125}, {17, 16.8375}, {18, 17.0375}, {19, 8.75}, {20, 12.6125}, {21, 19.3375}, {22, 25.05}, {23, 13.0875}, {24, 6.25}, {25, 23.7625}, {26, 19.2625}, {27, 10.2}, {28, 11.8375}, {29, 9.0375}, {30, 21.1}, {31, 12.05}, {32, 17.05}, {33, 15.3}, {34, 8.0125}, {35, 21.6625}, {36, 10.7875}, {37, 14.2625}, {38, 27.4375}, {39, 12.8625}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 25.2375}, {1, 18.2}, {2, 0}, {3, 21.8}, {4, 27.6}, {5, 37.3875}, {6, 25.1125}, {7, 25.8125}, {8, 22.45}, {9, 7.9}, {10, 20.9875}, {11, 32.3}, {12, 4.5}, {13, 28.8}, {14, 21.075}, {15, 23.7875}, {16, 18.575}, {17, 18.5}, {18, 16.1875}, {19, 19.3}, {20, 5.5875}, {21, 21}, {22, 26.7125}, {23, 16.8625}, {24, 11.95}, {25, 29.075}, {26, 24.9625}, {27, 15.9}, {28, 18.1125}, {29, 24.2125}, {30, 22.7625}, {31, 21.2}, {32, 28.7}, {33, 21}, {34, 13.7125}, {35, 27.3625}, {36, 22.4375}, {37, 19.9625}, {38, 15.8125}, {39, 27.725}, 