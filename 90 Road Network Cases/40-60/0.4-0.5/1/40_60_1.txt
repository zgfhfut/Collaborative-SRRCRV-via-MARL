node_num : 40
demand_node_num : 16
edge_num : 60
damaged_edge_num : 30
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 11, 12, 13, 17, 22, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 3), Line(0, 5), Line(0, 16), Line(0, 28), Line(1, 23), Line(1, 27), Line(1, 32), Line(2, 6), Line(2, 24), Line(2, 38), Line(3, 4), Line(3, 16), Line(3, 19), Line(3, 31), Line(4, 26), Line(4, 33), Line(4, 37), Line(5, 17), Line(6, 26), Line(6, 30), Line(7, 9), Line(7, 24), Line(7, 25), Line(7, 34), Line(8, 15), Line(8, 27), Line(8, 34), Line(9, 23), Line(10, 21), Line(10, 25), Line(10, 28), Line(11, 16), Line(11, 26), Line(11, 39), Line(12, 27), Line(12, 31), Line(12, 33), Line(13, 22), Line(13, 39), Line(14, 35), Line(14, 37), Line(15, 29), Line(16, 33), Line(17, 18), Line(17, 32), Line(18, 22), Line(18, 36), Line(19, 22), Line(19, 35), Line(20, 25), Line(20, 36), Line(21, 26), Line(21, 28), Line(24, 25), Line(29, 32), Line(29, 38), Line(30, 34), Line(30, 38), Line(31, 35), Line(38, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 5), Line(1, 27), Line(1, 32), Line(2, 24), Line(2, 38), Line(4, 33), Line(4, 37), Line(6, 26), Line(7, 24), Line(7, 34), Line(8, 15), Line(8, 27), Line(10, 21), Line(10, 25), Line(10, 28), Line(11, 26), Line(12, 31), Line(13, 22), Line(13, 39), Line(14, 35), Line(15, 29), Line(19, 22), Line(19, 35), Line(20, 36), Line(21, 28), Line(24, 25), Line(29, 38), Line(30, 34), Line(31, 35), Line(38, 39),  };
const double demand_num_pro = 0.4;
const double damaged_edge_pro = 0.5;
/*********************add_edge*************************/
g.add_edge(0, 3, 4.12);
g.add_edge(0, 5, 5.38);
g.add_edge(0, 16, 1);
g.add_edge(0, 28, 1.41);
g.add_edge(1, 23, 5);
g.add_edge(1, 27, 2.82);
g.add_edge(1, 32, 1);
g.add_edge(2, 6, 6.32);
g.add_edge(2, 24, 8);
g.add_edge(2, 38, 6.08);
g.add_edge(3, 4, 4.47);
g.add_edge(3, 16, 4.47);
g.add_edge(3, 19, 4.47);
g.add_edge(3, 31, 3.16);
g.add_edge(4, 26, 5.65);
g.add_edge(4, 33, 5.38);
g.add_edge(4, 37, 6.7);
g.add_edge(5, 17, 3.6);
g.add_edge(6, 26, 5.83);
g.add_edge(6, 30, 2);
g.add_edge(7, 9, 9.89);
g.add_edge(7, 24, 8.54);
g.add_edge(7, 25, 7.07);
g.add_edge(7, 34, 6.32);
g.add_edge(8, 15, 8.06);
g.add_edge(8, 27, 7.07);
g.add_edge(8, 34, 2);
g.add_edge(9, 23, 3.6);
g.add_edge(10, 21, 6.4);
g.add_edge(10, 25, 5.09);
g.add_edge(10, 28, 8.94);
g.add_edge(11, 16, 6.08);
g.add_edge(11, 26, 2.23);
g.add_edge(11, 39, 5.65);
g.add_edge(12, 27, 5.09);
g.add_edge(12, 31, 1);
g.add_edge(12, 33, 5.65);
g.add_edge(13, 22, 2.23);
g.add_edge(13, 39, 4.47);
g.add_edge(14, 35, 6.4);
g.add_edge(14, 37, 1.41);
g.add_edge(15, 29, 3.16);
g.add_edge(16, 33, 6.7);
g.add_edge(17, 18, 8.6);
g.add_edge(17, 32, 6.08);
g.add_edge(18, 22, 3);
g.add_edge(18, 36, 2.23);
g.add_edge(19, 22, 3.16);
g.add_edge(19, 35, 4);
g.add_edge(20, 25, 7);
g.add_edge(20, 36, 3.16);
g.add_edge(21, 26, 2);
g.add_edge(21, 28, 3);
g.add_edge(24, 25, 9.84);
g.add_edge(29, 32, 1.41);
g.add_edge(29, 38, 3.6);
g.add_edge(30, 34, 8.06);
g.add_edge(30, 38, 5);
g.add_edge(31, 35, 1.41);
g.add_edge(38, 39, 3.16);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 1.13);
g.set_importance(12, 8.82);
g.set_importance(13, 2.52);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 1.92);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 0);
g.set_importance(21, 0);
g.set_importance(22, 6.95);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 6.37);
g.set_importance(26, 0);
g.set_importance(27, 6.1);
g.set_importance(28, 0);
g.set_importance(29, 1.7);
g.set_importance(30, 9.84);
g.set_importance(31, 0);
g.set_importance(32, 8.56);
g.set_importance(33, 7.56);
g.set_importance(34, 5.52);
g.set_importance(35, 4.54);
g.set_importance(36, 9.78);
g.set_importance(37, 9.43);
g.set_importance(38, 9.67);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 5), 2.2);
g.set_repair_time(Line(1, 27), 3.28);
g.set_repair_time(Line(1, 32), 1.79);
g.set_repair_time(Line(2, 24), 1.66);
g.set_repair_time(Line(2, 38), 2.76);
g.set_repair_time(Line(4, 33), 4.31);
g.set_repair_time(Line(4, 37), 4.61);
g.set_repair_time(Line(6, 26), 2.73);
g.set_repair_time(Line(7, 24), 1.03);
g.set_repair_time(Line(7, 34), 2.22);
g.set_repair_time(Line(8, 15), 4.52);
g.set_repair_time(Line(8, 27), 4.36);
g.set_repair_time(Line(10, 21), 1.34);
g.set_repair_time(Line(10, 25), 1.55);
g.set_repair_time(Line(10, 28), 2.07);
g.set_repair_time(Line(11, 26), 1.89);
g.set_repair_time(Line(12, 31), 2.67);
g.set_repair_time(Line(13, 22), 4.91);
g.set_repair_time(Line(13, 39), 1.45);
g.set_repair_time(Line(14, 35), 3.81);
g.set_repair_time(Line(15, 29), 3.84);
g.set_repair_time(Line(19, 22), 1.18);
g.set_repair_time(Line(19, 35), 2.74);
g.set_repair_time(Line(20, 36), 3.18);
g.set_repair_time(Line(21, 28), 4.16);
g.set_repair_time(Line(24, 25), 1.14);
g.set_repair_time(Line(29, 38), 4.78);
g.set_repair_time(Line(30, 34), 1.06);
g.set_repair_time(Line(31, 35), 3.49);
g.set_repair_time(Line(38, 39), 2.06);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 20.075}, {2, 23.2}, {3, 5.15}, {4, 10.7375}, {5, 6.725}, {6, 15.3}, {7, 28.1375}, {8, 25.55}, {9, 30.825}, {10, 12.9375}, {11, 8.85}, {12, 10.35}, {13, 17.475}, {14, 18.8625}, {15, 24.5375}, {16, 1.25}, {17, 11.225}, {18, 18.4375}, {19, 10.7375}, {20, 25.175}, {21, 5.5125}, {22, 14.6875}, {23, 26.325}, {24, 31.6}, {25, 19.3}, {26, 8.0125}, {27, 16.7125}, {28, 1.7625}, {29, 20.5875}, {30, 17.8}, {31, 9.1}, {32, 18.825}, {33, 9.625}, {34, 27.875}, {35, 10.8625}, {36, 21.225}, {37, 19.1125}, {38, 19.8625}, {39, 15.9125}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 20.075}, {1, 0}, {2, 15.1125}, {3, 15.0875}, {4, 20.675}, {5, 13.35}, {6, 16.2625}, {7, 22.7625}, {8, 12.3625}, {9, 10.75}, {10, 31.8125}, {11, 18.525}, {12, 9.8875}, {13, 17.05}, {14, 20.9}, {15, 6.9625}, {16, 20.675}, {17, 8.85}, {18, 19.6}, {19, 17.9}, {20, 26.3375}, {21, 23.8125}, {22, 19.8375}, {23, 6.25}, {24, 25.1125}, {25, 31.6}, {26, 21.3125}, {27, 3.525}, {28, 21.8375}, {29, 3.0125}, {30, 13.7625}, {31, 11.1375}, {32, 1.25}, {33, 16.95}, {34, 14.8625}, {35, 12.9}, {36, 22.3875}, {37, 22.6625}, {38, 7.5125}, {39, 11.4625}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 23.2}, {1, 15.1125}, {2, 0}, {3, 27.8375}, {4, 22.25}, {5, 25.9625}, {6, 7.9}, {7, 20.675}, {8, 22.975}, {9, 25.8625}, {10, 25.6875}, {11, 17.975}, {12, 25}, {13, 17.1375}, {14, 32.3875}, {15, 16.05}, {16, 24.45}, {17, 21.4625}, {18, 23.675}, {19, 23.875}, {20, 30.4125}, {21, 17.6875}, {22, 19.925}, {23, 21.3625}, {24, 10}, {25, 22.3}, {26, 15.1875}, {27, 18.6375}, {28, 21.4375}, {29, 12.1}, {30, 10.4}, {31, 26.25}, {32, 13.8625}, {33, 28.975}, {34, 20.475}, {35, 28.0125}, {36, 26.4625}, {37, 30.625}, {38, 7.6}, {39, 11.55}, 