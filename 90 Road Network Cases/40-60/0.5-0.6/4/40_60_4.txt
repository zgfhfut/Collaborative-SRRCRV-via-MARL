node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 4, 5, 8, 9, 11, 13, 16, 17, 19, 21, 22, 25, 26, 28, 29, 31, 32, 36, 37,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 12), Line(0, 25), Line(0, 34), Line(0, 38), Line(0, 39), Line(1, 3), Line(1, 16), Line(1, 17), Line(1, 30), Line(2, 22), Line(2, 33), Line(3, 4), Line(3, 20), Line(3, 26), Line(4, 6), Line(4, 24), Line(5, 10), Line(5, 24), Line(6, 35), Line(7, 13), Line(7, 23), Line(8, 13), Line(8, 39), Line(9, 20), Line(9, 21), Line(10, 28), Line(11, 28), Line(11, 36), Line(12, 14), Line(13, 19), Line(13, 24), Line(14, 30), Line(14, 38), Line(15, 23), Line(15, 29), Line(15, 34), Line(16, 24), Line(16, 26), Line(16, 27), Line(16, 36), Line(17, 21), Line(17, 25), Line(18, 20), Line(18, 38), Line(19, 23), Line(19, 32), Line(20, 23), Line(20, 33), Line(21, 37), Line(22, 27), Line(25, 30), Line(25, 37), Line(26, 39), Line(27, 39), Line(28, 38), Line(29, 39), Line(30, 37), Line(31, 33), Line(31, 35), Line(32, 37),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 12), Line(0, 25), Line(0, 34), Line(1, 3), Line(1, 16), Line(1, 30), Line(2, 33), Line(3, 4), Line(4, 6), Line(5, 10), Line(6, 35), Line(8, 13), Line(8, 39), Line(9, 21), Line(10, 28), Line(13, 19), Line(14, 38), Line(15, 23), Line(15, 29), Line(15, 34), Line(16, 26), Line(16, 36), Line(17, 21), Line(17, 25), Line(18, 20), Line(18, 38), Line(20, 33), Line(21, 37), Line(22, 27), Line(25, 37), Line(26, 39), Line(28, 38), Line(30, 37), Line(31, 33), Line(31, 35), Line(32, 37),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 12, 8.6);
g.add_edge(0, 25, 4.47);
g.add_edge(0, 34, 7.07);
g.add_edge(0, 38, 7.21);
g.add_edge(0, 39, 8.24);
g.add_edge(1, 3, 5.83);
g.add_edge(1, 16, 6.08);
g.add_edge(1, 17, 8.6);
g.add_edge(1, 30, 5.38);
g.add_edge(2, 22, 4.24);
g.add_edge(2, 33, 4.47);
g.add_edge(3, 4, 5.09);
g.add_edge(3, 20, 4.47);
g.add_edge(3, 26, 8.06);
g.add_edge(4, 6, 9.43);
g.add_edge(4, 24, 6);
g.add_edge(5, 10, 1.41);
g.add_edge(5, 24, 4.47);
g.add_edge(6, 35, 6.32);
g.add_edge(7, 13, 2);
g.add_edge(7, 23, 7.61);
g.add_edge(8, 13, 9);
g.add_edge(8, 39, 6.08);
g.add_edge(9, 20, 8.6);
g.add_edge(9, 21, 6.32);
g.add_edge(10, 28, 2.82);
g.add_edge(11, 28, 8.06);
g.add_edge(11, 36, 5.83);
g.add_edge(12, 14, 3.16);
g.add_edge(13, 19, 2);
g.add_edge(13, 24, 2.23);
g.add_edge(14, 30, 7.07);
g.add_edge(14, 38, 4.47);
g.add_edge(15, 23, 5.09);
g.add_edge(15, 29, 1.41);
g.add_edge(15, 34, 5.09);
g.add_edge(16, 24, 10.63);
g.add_edge(16, 26, 5.09);
g.add_edge(16, 27, 4.47);
g.add_edge(16, 36, 4.24);
g.add_edge(17, 21, 5.09);
g.add_edge(17, 25, 3.6);
g.add_edge(18, 20, 7.21);
g.add_edge(18, 38, 5);
g.add_edge(19, 23, 7.07);
g.add_edge(19, 32, 8);
g.add_edge(20, 23, 3);
g.add_edge(20, 33, 7.61);
g.add_edge(21, 37, 3.16);
g.add_edge(22, 27, 5);
g.add_edge(25, 30, 1.41);
g.add_edge(25, 37, 2.23);
g.add_edge(26, 39, 4.47);
g.add_edge(27, 39, 3.16);
g.add_edge(28, 38, 6.7);
g.add_edge(29, 39, 7.07);
g.add_edge(30, 37, 1);
g.add_edge(31, 33, 9.21);
g.add_edge(31, 35, 7.61);
g.add_edge(32, 37, 4.12);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 8.27);
g.set_importance(4, 2.54);
g.set_importance(5, 6.99);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 8.93);
g.set_importance(9, 4.16);
g.set_importance(10, 0);
g.set_importance(11, 3.93);
g.set_importance(12, 0);
g.set_importance(13, 5.36);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 2.43);
g.set_importance(17, 5.3);
g.set_importance(18, 0);
g.set_importance(19, 9.45);
g.set_importance(20, 0);
g.set_importance(21, 8.41);
g.set_importance(22, 2.86);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 9.39);
g.set_importance(26, 8.32);
g.set_importance(27, 0);
g.set_importance(28, 3.21);
g.set_importance(29, 4.62);
g.set_importance(30, 0);
g.set_importance(31, 5.18);
g.set_importance(32, 5.61);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 4.68);
g.set_importance(37, 1.76);
g.set_importance(38, 0);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 12), 4.34);
g.set_repair_time(Line(0, 25), 3.69);
g.set_repair_time(Line(0, 34), 3.54);
g.set_repair_time(Line(1, 3), 1.12);
g.set_repair_time(Line(1, 16), 2.37);
g.set_repair_time(Line(1, 30), 2.06);
g.set_repair_time(Line(2, 33), 4.86);
g.set_repair_time(Line(3, 4), 3.35);
g.set_repair_time(Line(4, 6), 2.22);
g.set_repair_time(Line(5, 10), 3.1);
g.set_repair_time(Line(6, 35), 3.86);
g.set_repair_time(Line(8, 13), 4.83);
g.set_repair_time(Line(8, 39), 2.76);
g.set_repair_time(Line(9, 21), 4.09);
g.set_repair_time(Line(10, 28), 4.16);
g.set_repair_time(Line(13, 19), 2.82);
g.set_repair_time(Line(14, 38), 2.47);
g.set_repair_time(Line(15, 23), 2.02);
g.set_repair_time(Line(15, 29), 4.26);
g.set_repair_time(Line(15, 34), 3.32);
g.set_repair_time(Line(16, 26), 2.47);
g.set_repair_time(Line(16, 36), 1.64);
g.set_repair_time(Line(17, 21), 3.47);
g.set_repair_time(Line(17, 25), 2.08);
g.set_repair_time(Line(18, 20), 1.63);
g.set_repair_time(Line(18, 38), 1.81);
g.set_repair_time(Line(20, 33), 1.92);
g.set_repair_time(Line(21, 37), 4.96);
g.set_repair_time(Line(22, 27), 2.26);
g.set_repair_time(Line(25, 37), 1.03);
g.set_repair_time(Line(26, 39), 4.19);
g.set_repair_time(Line(28, 38), 2.02);
g.set_repair_time(Line(30, 37), 4.31);
g.set_repair_time(Line(31, 33), 3.98);
g.set_repair_time(Line(31, 35), 2.41);
g.set_repair_time(Line(32, 37), 3.75);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 14.075}, {2, 25.8}, {3, 21.3625}, {4, 27.725}, {5, 22.675}, {6, 39.5125}, {7, 28.525}, {8, 17.9}, {9, 20.225}, {10, 20.9125}, {11, 27.4625}, {12, 10.75}, {13, 26.025}, {14, 14.6}, {15, 15.2}, {16, 19.8375}, {17, 10.0875}, {18, 15.2625}, {19, 23.525}, {20, 24.275}, {21, 12.325}, {22, 20.5}, {23, 21.5625}, {24, 28.2625}, {25, 5.5875}, {26, 15.8875}, {27, 14.25}, {28, 17.3875}, {29, 16.9625}, {30, 7.35}, {31, 42.9}, {32, 13.525}, {33, 31.3875}, {34, 8.8375}, {35, 47.4125}, {36, 25.1375}, {37, 8.375}, {38, 9.0125}, {39, 10.3}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 14.075}, {1, 0}, {2, 24.7375}, {3, 7.2875}, {4, 13.65}, {5, 26.475}, {6, 25.4375}, {7, 26.1375}, {8, 24.7375}, {9, 19.825}, {10, 28.2375}, {11, 20.1875}, {12, 19.5125}, {13, 23.675}, {14, 15.5625}, {15, 22.9875}, {16, 7.6}, {17, 10.75}, {18, 21.8875}, {19, 23.125}, {20, 12.875}, {21, 11.925}, {22, 19.4375}, {23, 16.625}, {24, 20.8875}, {25, 8.4875}, {26, 13.9625}, {27, 13.1875}, {28, 29.525}, {29, 24.75}, {30, 6.725}, {31, 33.9}, {32, 13.125}, {33, 22.3875}, {34, 22.9125}, {35, 33.3375}, {36, 12.9}, {37, 7.975}, {38, 21.15}, {39, 17.1375}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 25.8}, {1, 24.7375}, {2, 0}, {3, 20.6875}, {4, 27.05}, {5, 36.0125}, {6, 34.5125}, {7, 28.3625}, {8, 23.1}, {9, 25.85}, {10, 37.775}, {11, 29.725}, {12, 36.55}, {13, 30.1875}, {14, 35.95}, {15, 25.2125}, {16, 17.1375}, {17, 35.4875}, {18, 24.1125}, {19, 27.6875}, {20, 15.1}, {21, 33.75}, {22, 5.3}, {23, 18.85}, {24, 30.425}, {25, 31.3875}, {26, 21.0875}, {27, 11.55}, {28, 38.7375}, {29, 24.3375}, {30, 31.4625}, {31, 17.1}, {32, 37.6875}, {33, 5.5875}, {34, 31.575}, {35, 26.6125}, {36, 22.4375}, {37, 32.7125}, {38, 30.3625}, {39, 15.5}, 