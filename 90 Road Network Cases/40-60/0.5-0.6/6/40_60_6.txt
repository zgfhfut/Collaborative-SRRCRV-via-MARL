node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 5, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 21, 23, 26, 30, 31, 32, 36, 37,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 14), Line(0, 22), Line(0, 26), Line(0, 29), Line(0, 37), Line(1, 18), Line(1, 26), Line(2, 8), Line(2, 9), Line(3, 5), Line(3, 9), Line(3, 11), Line(3, 15), Line(4, 14), Line(4, 24), Line(4, 32), Line(5, 17), Line(6, 16), Line(6, 37), Line(7, 22), Line(7, 25), Line(7, 28), Line(8, 25), Line(8, 31), Line(9, 13), Line(9, 36), Line(10, 15), Line(10, 33), Line(11, 12), Line(11, 30), Line(12, 26), Line(12, 39), Line(13, 18), Line(13, 20), Line(13, 35), Line(14, 24), Line(14, 39), Line(15, 31), Line(15, 38), Line(16, 18), Line(17, 19), Line(17, 27), Line(17, 33), Line(18, 28), Line(18, 33), Line(18, 34), Line(19, 26), Line(19, 27), Line(20, 21), Line(21, 31), Line(23, 24), Line(23, 28), Line(23, 34), Line(25, 29), Line(26, 38), Line(27, 34), Line(30, 36), Line(31, 32), Line(32, 36), Line(35, 38),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 14), Line(0, 22), Line(0, 29), Line(0, 37), Line(2, 9), Line(3, 9), Line(3, 15), Line(4, 14), Line(4, 24), Line(4, 32), Line(6, 16), Line(6, 37), Line(8, 25), Line(8, 31), Line(10, 15), Line(11, 12), Line(12, 39), Line(13, 20), Line(13, 35), Line(14, 24), Line(14, 39), Line(15, 31), Line(15, 38), Line(17, 19), Line(18, 28), Line(18, 33), Line(19, 26), Line(21, 31), Line(23, 24), Line(23, 28), Line(23, 34), Line(25, 29), Line(27, 34), Line(30, 36), Line(31, 32), Line(35, 38),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 14, 6);
g.add_edge(0, 22, 9.84);
g.add_edge(0, 26, 5.38);
g.add_edge(0, 29, 5);
g.add_edge(0, 37, 4.24);
g.add_edge(1, 18, 2.23);
g.add_edge(1, 26, 2);
g.add_edge(2, 8, 4.47);
g.add_edge(2, 9, 9.48);
g.add_edge(3, 5, 4.12);
g.add_edge(3, 9, 4.47);
g.add_edge(3, 11, 8.06);
g.add_edge(3, 15, 5.09);
g.add_edge(4, 14, 3);
g.add_edge(4, 24, 5.09);
g.add_edge(4, 32, 5.38);
g.add_edge(5, 17, 2.23);
g.add_edge(6, 16, 4);
g.add_edge(6, 37, 1.41);
g.add_edge(7, 22, 10);
g.add_edge(7, 25, 6.08);
g.add_edge(7, 28, 8.06);
g.add_edge(8, 25, 5.38);
g.add_edge(8, 31, 4);
g.add_edge(9, 13, 6.08);
g.add_edge(9, 36, 3.16);
g.add_edge(10, 15, 4.12);
g.add_edge(10, 33, 5.83);
g.add_edge(11, 12, 5.09);
g.add_edge(11, 30, 6.08);
g.add_edge(12, 26, 2.23);
g.add_edge(12, 39, 4.12);
g.add_edge(13, 18, 2);
g.add_edge(13, 20, 5.83);
g.add_edge(13, 35, 4.47);
g.add_edge(14, 24, 2.23);
g.add_edge(14, 39, 2.23);
g.add_edge(15, 31, 5.65);
g.add_edge(15, 38, 3.16);
g.add_edge(16, 18, 4.47);
g.add_edge(17, 19, 7.07);
g.add_edge(17, 27, 5);
g.add_edge(17, 33, 8.06);
g.add_edge(18, 28, 4);
g.add_edge(18, 33, 3.16);
g.add_edge(18, 34, 5);
g.add_edge(19, 26, 7.21);
g.add_edge(19, 27, 2.23);
g.add_edge(20, 21, 8.24);
g.add_edge(21, 31, 8.06);
g.add_edge(23, 24, 4.12);
g.add_edge(23, 28, 3.16);
g.add_edge(23, 34, 6.08);
g.add_edge(25, 29, 5);
g.add_edge(26, 38, 8.24);
g.add_edge(27, 34, 7.81);
g.add_edge(30, 36, 5.83);
g.add_edge(31, 32, 4.12);
g.add_edge(32, 36, 6.4);
g.add_edge(35, 38, 9);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 2.43);
g.set_importance(4, 0);
g.set_importance(5, 5.88);
g.set_importance(6, 7.64);
g.set_importance(7, 1.69);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 9.28);
g.set_importance(11, 5.12);
g.set_importance(12, 0);
g.set_importance(13, 2.82);
g.set_importance(14, 9.68);
g.set_importance(15, 0);
g.set_importance(16, 6.7);
g.set_importance(17, 6.94);
g.set_importance(18, 4.64);
g.set_importance(19, 0);
g.set_importance(20, 8.4);
g.set_importance(21, 7.61);
g.set_importance(22, 0);
g.set_importance(23, 5.75);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 4.23);
g.set_importance(27, 0);
g.set_importance(28, 0);
g.set_importance(29, 0);
g.set_importance(30, 3.35);
g.set_importance(31, 7.31);
g.set_importance(32, 2.09);
g.set_importance(33, 0);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 1.88);
g.set_importance(37, 8.31);
g.set_importance(38, 0);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 14), 2.64);
g.set_repair_time(Line(0, 22), 3.49);
g.set_repair_time(Line(0, 29), 3.05);
g.set_repair_time(Line(0, 37), 1.24);
g.set_repair_time(Line(2, 9), 1.27);
g.set_repair_time(Line(3, 9), 3.46);
g.set_repair_time(Line(3, 15), 3.28);
g.set_repair_time(Line(4, 14), 1.15);
g.set_repair_time(Line(4, 24), 3.75);
g.set_repair_time(Line(4, 32), 3.22);
g.set_repair_time(Line(6, 16), 2.76);
g.set_repair_time(Line(6, 37), 4.93);
g.set_repair_time(Line(8, 25), 1.66);
g.set_repair_time(Line(8, 31), 1.23);
g.set_repair_time(Line(10, 15), 2.42);
g.set_repair_time(Line(11, 12), 2.77);
g.set_repair_time(Line(12, 39), 4.61);
g.set_repair_time(Line(13, 20), 3.54);
g.set_repair_time(Line(13, 35), 4.67);
g.set_repair_time(Line(14, 24), 1.32);
g.set_repair_time(Line(14, 39), 1.91);
g.set_repair_time(Line(15, 31), 3.64);
g.set_repair_time(Line(15, 38), 4.53);
g.set_repair_time(Line(17, 19), 1.83);
g.set_repair_time(Line(18, 28), 2.46);
g.set_repair_time(Line(18, 33), 2.09);
g.set_repair_time(Line(19, 26), 2.4);
g.set_repair_time(Line(21, 31), 3.91);
g.set_repair_time(Line(23, 24), 4.73);
g.set_repair_time(Line(23, 28), 2.36);
g.set_repair_time(Line(23, 34), 2.54);
g.set_repair_time(Line(25, 29), 1.12);
g.set_repair_time(Line(27, 34), 1.8);
g.set_repair_time(Line(30, 36), 2.78);
g.set_repair_time(Line(31, 32), 4.5);
g.set_repair_time(Line(35, 38), 4.73);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 9.225}, {2, 24.8125}, {3, 25.95}, {4, 11.25}, {5, 27.3625}, {6, 7.0625}, {7, 20.1}, {8, 19.225}, {9, 22.1125}, {10, 23.25}, {11, 15.875}, {12, 9.5125}, {13, 14.5125}, {14, 7.5}, {15, 20.975}, {16, 12.0625}, {17, 24.575}, {18, 12.0125}, {19, 15.7375}, {20, 21.8}, {21, 32.1}, {22, 12.3}, {23, 15.4375}, {24, 10.2875}, {25, 12.5}, {26, 6.725}, {27, 18.525}, {28, 17.0125}, {29, 6.25}, {30, 23.475}, {31, 23.125}, {32, 17.975}, {33, 15.9625}, {34, 18.2625}, {35, 20.1}, {36, 25.975}, {37, 5.3}, {38, 17.025}, {39, 10.2875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 9.225}, {1, 0}, {2, 24.7375}, {3, 18.475}, {4, 16.975}, {5, 19.6}, {6, 13.375}, {7, 17.8625}, {8, 28.45}, {9, 12.8875}, {10, 14.025}, {11, 11.65}, {12, 5.2875}, {13, 5.2875}, {14, 13.225}, {15, 16.75}, {16, 8.375}, {17, 16.8125}, {18, 2.7875}, {19, 11.5125}, {20, 12.575}, {21, 22.875}, {22, 21.525}, {23, 11.7375}, {24, 16.0125}, {25, 21.725}, {26, 2.5}, {27, 14.3}, {28, 7.7875}, {29, 15.475}, {30, 19.25}, {31, 23.8125}, {32, 23.7}, {33, 6.7375}, {34, 9.0375}, {35, 10.875}, {36, 16.8375}, {37, 14.525}, {38, 12.8}, {39, 10.4375}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 24.8125}, {1, 24.7375}, {2, 0}, {3, 17.4375}, {4, 22.4625}, {5, 22.5875}, {6, 31.875}, {7, 19.9125}, {8, 5.5875}, {9, 11.85}, {10, 22.8}, {11, 27.5125}, {12, 30.025}, {13, 19.45}, {14, 26.2125}, {15, 17.65}, {16, 27.5375}, {17, 25.375}, {18, 21.95}, {19, 34.2125}, {20, 26.7375}, {21, 20.6625}, {22, 32.4125}, {23, 30.9}, {24, 28.825}, {25, 12.3125}, {26, 27.2375}, {27, 31.625}, {28, 26.95}, {29, 18.5625}, {30, 23.0875}, {31, 10.5875}, {32, 15.7375}, {33, 25.9}, {34, 28.2}, {35, 25.0375}, {36, 15.8}, {37, 30.1125}, {38, 21.6}, {39, 29}, 