node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 6, 8, 12, 13, 14, 15, 16, 19, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 2), Line(0, 8), Line(0, 10), Line(0, 27), Line(1, 6), Line(1, 17), Line(2, 15), Line(3, 19), Line(3, 29), Line(4, 11), Line(4, 15), Line(4, 26), Line(5, 6), Line(5, 7), Line(5, 14), Line(5, 20), Line(6, 38), Line(7, 21), Line(8, 32), Line(8, 33), Line(9, 18), Line(9, 20), Line(9, 22), Line(10, 24), Line(10, 26), Line(10, 38), Line(11, 35), Line(12, 17), Line(12, 23), Line(12, 37), Line(13, 22), Line(13, 34), Line(13, 38), Line(14, 20), Line(15, 22), Line(15, 28), Line(15, 30), Line(15, 38), Line(16, 28), Line(16, 39), Line(17, 34), Line(18, 22), Line(18, 31), Line(18, 32), Line(19, 23), Line(19, 29), Line(21, 25), Line(22, 28), Line(23, 26), Line(23, 39), Line(24, 33), Line(24, 35), Line(25, 31), Line(26, 30), Line(26, 37), Line(27, 37), Line(29, 36), Line(31, 36), Line(36, 37), Line(36, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 2), Line(0, 8), Line(0, 10), Line(0, 27), Line(1, 6), Line(1, 17), Line(3, 19), Line(3, 29), Line(4, 15), Line(5, 6), Line(5, 7), Line(5, 14), Line(7, 21), Line(8, 32), Line(9, 18), Line(9, 22), Line(11, 35), Line(12, 17), Line(12, 37), Line(13, 22), Line(13, 34), Line(14, 20), Line(15, 22), Line(15, 30), Line(16, 28), Line(16, 39), Line(17, 34), Line(18, 31), Line(19, 29), Line(21, 25), Line(23, 26), Line(23, 39), Line(25, 31), Line(27, 37), Line(29, 36), Line(31, 36),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 2, 7.28);
g.add_edge(0, 8, 9.05);
g.add_edge(0, 10, 6);
g.add_edge(0, 27, 3.16);
g.add_edge(1, 6, 9.43);
g.add_edge(1, 17, 6);
g.add_edge(2, 15, 5.83);
g.add_edge(3, 19, 6.32);
g.add_edge(3, 29, 3.16);
g.add_edge(4, 11, 9.21);
g.add_edge(4, 15, 8.06);
g.add_edge(4, 26, 7.07);
g.add_edge(5, 6, 4.12);
g.add_edge(5, 7, 3);
g.add_edge(5, 14, 6.08);
g.add_edge(5, 20, 3.16);
g.add_edge(6, 38, 7.07);
g.add_edge(7, 21, 3);
g.add_edge(8, 32, 9);
g.add_edge(8, 33, 6);
g.add_edge(9, 18, 1);
g.add_edge(9, 20, 8.54);
g.add_edge(9, 22, 7.61);
g.add_edge(10, 24, 9.43);
g.add_edge(10, 26, 4);
g.add_edge(10, 38, 8.6);
g.add_edge(11, 35, 3.16);
g.add_edge(12, 17, 6.32);
g.add_edge(12, 23, 4.47);
g.add_edge(12, 37, 4.24);
g.add_edge(13, 22, 8.06);
g.add_edge(13, 34, 2.23);
g.add_edge(13, 38, 2.23);
g.add_edge(14, 20, 3);
g.add_edge(15, 22, 4.12);
g.add_edge(15, 28, 8.6);
g.add_edge(15, 30, 4);
g.add_edge(15, 38, 6.4);
g.add_edge(16, 28, 5.38);
g.add_edge(16, 39, 4.12);
g.add_edge(17, 34, 9.21);
g.add_edge(18, 22, 7.28);
g.add_edge(18, 31, 5.38);
g.add_edge(18, 32, 8);
g.add_edge(19, 23, 5.38);
g.add_edge(19, 29, 3.16);
g.add_edge(21, 25, 1);
g.add_edge(22, 28, 8.06);
g.add_edge(23, 26, 4.12);
g.add_edge(23, 39, 5.09);
g.add_edge(24, 33, 8.06);
g.add_edge(24, 35, 4.47);
g.add_edge(25, 31, 5.09);
g.add_edge(26, 30, 5.38);
g.add_edge(26, 37, 3);
g.add_edge(27, 37, 5.38);
g.add_edge(29, 36, 6.4);
g.add_edge(31, 36, 2.23);
g.add_edge(36, 37, 7.61);
g.add_edge(36, 39, 5.83);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 4.81);
g.set_importance(6, 7.25);
g.set_importance(7, 0);
g.set_importance(8, 5.64);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 4.02);
g.set_importance(13, 1.79);
g.set_importance(14, 2.61);
g.set_importance(15, 2.48);
g.set_importance(16, 7.78);
g.set_importance(17, 0);
g.set_importance(18, 0);
g.set_importance(19, 1.88);
g.set_importance(20, 0);
g.set_importance(21, 6.42);
g.set_importance(22, 0);
g.set_importance(23, 3.05);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 6.28);
g.set_importance(27, 6.67);
g.set_importance(28, 0);
g.set_importance(29, 4.59);
g.set_importance(30, 7.91);
g.set_importance(31, 0);
g.set_importance(32, 3.45);
g.set_importance(33, 9.72);
g.set_importance(34, 0);
g.set_importance(35, 1.69);
g.set_importance(36, 0);
g.set_importance(37, 5.85);
g.set_importance(38, 0);
g.set_importance(39, 3.77);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 2), 1.59);
g.set_repair_time(Line(0, 8), 1.69);
g.set_repair_time(Line(0, 10), 4.38);
g.set_repair_time(Line(0, 27), 2.79);
g.set_repair_time(Line(1, 6), 2.91);
g.set_repair_time(Line(1, 17), 1.33);
g.set_repair_time(Line(3, 19), 2.6);
g.set_repair_time(Line(3, 29), 1.73);
g.set_repair_time(Line(4, 15), 2.75);
g.set_repair_time(Line(5, 6), 4.36);
g.set_repair_time(Line(5, 7), 1.16);
g.set_repair_time(Line(5, 14), 4.75);
g.set_repair_time(Line(7, 21), 3.38);
g.set_repair_time(Line(8, 32), 2.67);
g.set_repair_time(Line(9, 18), 4.35);
g.set_repair_time(Line(9, 22), 3.45);
g.set_repair_time(Line(11, 35), 1.68);
g.set_repair_time(Line(12, 17), 4.01);
g.set_repair_time(Line(12, 37), 3.71);
g.set_repair_time(Line(13, 22), 2.48);
g.set_repair_time(Line(13, 34), 2.35);
g.set_repair_time(Line(14, 20), 2.58);
g.set_repair_time(Line(15, 22), 2.61);
g.set_repair_time(Line(15, 30), 1.65);
g.set_repair_time(Line(16, 28), 1.11);
g.set_repair_time(Line(16, 39), 4.15);
g.set_repair_time(Line(17, 34), 3.87);
g.set_repair_time(Line(18, 31), 1.34);
g.set_repair_time(Line(19, 29), 1.95);
g.set_repair_time(Line(21, 25), 1.38);
g.set_repair_time(Line(23, 26), 4.98);
g.set_repair_time(Line(23, 39), 4.18);
g.set_repair_time(Line(25, 31), 4.92);
g.set_repair_time(Line(27, 37), 2.52);
g.set_repair_time(Line(29, 36), 4.33);
g.set_repair_time(Line(31, 36), 3.41);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 31.375}, {2, 9.1}, {3, 32.1375}, {4, 21.3375}, {5, 32.2375}, {6, 27.0875}, {7, 34.3375}, {8, 11.3125}, {9, 30.95}, {10, 7.5}, {11, 28.825}, {12, 15.975}, {13, 21.0375}, {14, 39.8375}, {15, 16.3875}, {16, 29.1625}, {17, 23.875}, {18, 29.7}, {19, 24.375}, {20, 36.1875}, {21, 30.5875}, {22, 21.5375}, {23, 17.65}, {24, 19.2875}, {25, 29.3375}, {26, 12.5}, {27, 3.95}, {28, 27.1375}, {29, 28.1875}, {30, 19.225}, {31, 22.975}, {32, 22.5625}, {33, 18.8125}, {34, 23.825}, {35, 24.875}, {36, 20.1875}, {37, 10.675}, {38, 18.25}, {39, 24.0125}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 31.375}, {1, 0}, {2, 35.9125}, {3, 35.6125}, {4, 33.2875}, {5, 16.9375}, {6, 11.7875}, {7, 20.6875}, {8, 42.6875}, {9, 31.5625}, {10, 29.45}, {11, 44.8}, {12, 15.4}, {13, 21.8}, {14, 24.5375}, {15, 28.625}, {16, 32.5}, {17, 7.5}, {18, 32.8125}, {19, 27.7125}, {20, 20.8875}, {21, 24.4375}, {22, 31.875}, {23, 20.9875}, {24, 41.2375}, {25, 25.6875}, {26, 24.45}, {27, 27.425}, {28, 39.225}, {29, 31.6625}, {30, 31.175}, {31, 32.05}, {32, 42.8125}, {33, 50.1875}, {34, 19.0125}, {35, 46.825}, {36, 30.2125}, {37, 20.7}, {38, 20.625}, {39, 27.35}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 9.1}, {1, 35.9125}, {2, 0}, {3, 38.7875}, {4, 17.3625}, {5, 29.275}, {6, 24.125}, {7, 33.025}, {8, 20.4125}, {9, 21.95}, {10, 16.6}, {11, 28.875}, {12, 25.075}, {13, 18.075}, {14, 36.375}, {15, 7.2875}, {16, 24.7625}, {17, 32.375}, {18, 21.5375}, {19, 30.8875}, {20, 32.625}, {21, 35.875}, {22, 12.4375}, {23, 24.1625}, {24, 28.3875}, {25, 34.625}, {26, 19.0125}, {27, 13.05}, {28, 18.0375}, {29, 34.8375}, {30, 12.2875}, {31, 28.2625}, {32, 31.5375}, {33, 27.9125}, {34, 20.8625}, {35, 32.825}, {36, 29.2875}, {37, 19.775}, {38, 15.2875}, {39, 29.9125}, 