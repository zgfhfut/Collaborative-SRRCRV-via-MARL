node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 10, 14, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 6), Line(0, 25), Line(0, 27), Line(0, 37), Line(0, 39), Line(1, 10), Line(1, 16), Line(1, 18), Line(1, 19), Line(1, 39), Line(2, 8), Line(2, 31), Line(2, 37), Line(3, 23), Line(3, 25), Line(3, 38), Line(4, 15), Line(4, 23), Line(4, 32), Line(5, 17), Line(5, 22), Line(5, 27), Line(6, 7), Line(6, 32), Line(6, 36), Line(7, 23), Line(7, 36), Line(8, 30), Line(9, 14), Line(9, 35), Line(10, 11), Line(10, 19), Line(11, 26), Line(11, 29), Line(12, 22), Line(12, 31), Line(13, 24), Line(13, 35), Line(13, 37), Line(14, 28), Line(15, 24), Line(16, 21), Line(16, 28), Line(16, 39), Line(17, 21), Line(18, 30), Line(20, 27), Line(20, 38), Line(21, 34), Line(23, 26), Line(24, 34), Line(25, 34), Line(26, 29), Line(26, 31), Line(26, 36), Line(27, 32), Line(30, 36), Line(30, 37), Line(33, 35), Line(35, 37),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 6), Line(0, 25), Line(0, 27), Line(0, 39), Line(1, 10), Line(1, 39), Line(2, 8), Line(3, 38), Line(4, 15), Line(4, 32), Line(6, 7), Line(6, 36), Line(7, 23), Line(7, 36), Line(8, 30), Line(9, 35), Line(10, 11), Line(10, 19), Line(11, 26), Line(12, 22), Line(12, 31), Line(13, 24), Line(13, 35), Line(13, 37), Line(15, 24), Line(16, 21), Line(18, 30), Line(20, 27), Line(20, 38), Line(21, 34), Line(26, 29), Line(26, 31), Line(26, 36), Line(30, 36), Line(30, 37), Line(33, 35),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 6, 3);
g.add_edge(0, 25, 7.07);
g.add_edge(0, 27, 2);
g.add_edge(0, 37, 5.38);
g.add_edge(0, 39, 5.38);
g.add_edge(1, 10, 2);
g.add_edge(1, 16, 6.4);
g.add_edge(1, 18, 8.48);
g.add_edge(1, 19, 7.81);
g.add_edge(1, 39, 2.23);
g.add_edge(2, 8, 6.7);
g.add_edge(2, 31, 8.54);
g.add_edge(2, 37, 1.41);
g.add_edge(3, 23, 2.23);
g.add_edge(3, 25, 10.29);
g.add_edge(3, 38, 4.12);
g.add_edge(4, 15, 10);
g.add_edge(4, 23, 6.7);
g.add_edge(4, 32, 8.24);
g.add_edge(5, 17, 3);
g.add_edge(5, 22, 3.16);
g.add_edge(5, 27, 7.07);
g.add_edge(6, 7, 5);
g.add_edge(6, 32, 6.7);
g.add_edge(6, 36, 5);
g.add_edge(7, 23, 6.08);
g.add_edge(7, 36, 3.16);
g.add_edge(8, 30, 5);
g.add_edge(9, 14, 4.12);
g.add_edge(9, 35, 8.54);
g.add_edge(10, 11, 7.07);
g.add_edge(10, 19, 6.7);
g.add_edge(11, 26, 7.21);
g.add_edge(11, 29, 7.61);
g.add_edge(12, 22, 7.81);
g.add_edge(12, 31, 6.08);
g.add_edge(13, 24, 3.6);
g.add_edge(13, 35, 5.09);
g.add_edge(13, 37, 5);
g.add_edge(14, 28, 6.7);
g.add_edge(15, 24, 9.21);
g.add_edge(16, 21, 1);
g.add_edge(16, 28, 8.48);
g.add_edge(16, 39, 7.21);
g.add_edge(17, 21, 4.12);
g.add_edge(18, 30, 1);
g.add_edge(20, 27, 3);
g.add_edge(20, 38, 4);
g.add_edge(21, 34, 8.06);
g.add_edge(23, 26, 5);
g.add_edge(24, 34, 2);
g.add_edge(25, 34, 7.28);
g.add_edge(26, 29, 1.41);
g.add_edge(26, 31, 4.24);
g.add_edge(26, 36, 2);
g.add_edge(27, 32, 5.83);
g.add_edge(30, 36, 3.6);
g.add_edge(30, 37, 2);
g.add_edge(33, 35, 7.81);
g.add_edge(35, 37, 3.6);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 0);
g.set_importance(9, 0);
g.set_importance(10, 2.51);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 0);
g.set_importance(14, 3.07);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 9.79);
g.set_importance(19, 9.2);
g.set_importance(20, 4.93);
g.set_importance(21, 0);
g.set_importance(22, 7.82);
g.set_importance(23, 3.6);
g.set_importance(24, 0);
g.set_importance(25, 9.22);
g.set_importance(26, 7.53);
g.set_importance(27, 9.39);
g.set_importance(28, 2.06);
g.set_importance(29, 0);
g.set_importance(30, 7.52);
g.set_importance(31, 6.55);
g.set_importance(32, 0);
g.set_importance(33, 3.25);
g.set_importance(34, 2.48);
g.set_importance(35, 2);
g.set_importance(36, 6.32);
g.set_importance(37, 3.17);
g.set_importance(38, 4.69);
g.set_importance(39, 4.8);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 6), 3.38);
g.set_repair_time(Line(0, 25), 2.92);
g.set_repair_time(Line(0, 27), 4.15);
g.set_repair_time(Line(0, 39), 4.82);
g.set_repair_time(Line(1, 10), 2.81);
g.set_repair_time(Line(1, 39), 1.03);
g.set_repair_time(Line(2, 8), 3.51);
g.set_repair_time(Line(3, 38), 4.1);
g.set_repair_time(Line(4, 15), 1.92);
g.set_repair_time(Line(4, 32), 4.48);
g.set_repair_time(Line(6, 7), 2.34);
g.set_repair_time(Line(6, 36), 4.93);
g.set_repair_time(Line(7, 23), 1.05);
g.set_repair_time(Line(7, 36), 1.42);
g.set_repair_time(Line(8, 30), 2.2);
g.set_repair_time(Line(9, 35), 3.44);
g.set_repair_time(Line(10, 11), 3.06);
g.set_repair_time(Line(10, 19), 2.02);
g.set_repair_time(Line(11, 26), 3.01);
g.set_repair_time(Line(12, 22), 2.42);
g.set_repair_time(Line(12, 31), 2.05);
g.set_repair_time(Line(13, 24), 1.22);
g.set_repair_time(Line(13, 35), 3.68);
g.set_repair_time(Line(13, 37), 1.82);
g.set_repair_time(Line(15, 24), 2.47);
g.set_repair_time(Line(16, 21), 1.76);
g.set_repair_time(Line(18, 30), 2.8);
g.set_repair_time(Line(20, 27), 1.4);
g.set_repair_time(Line(20, 38), 3.31);
g.set_repair_time(Line(21, 34), 2.92);
g.set_repair_time(Line(26, 29), 1.73);
g.set_repair_time(Line(26, 31), 4.76);
g.set_repair_time(Line(26, 36), 4.31);
g.set_repair_time(Line(30, 36), 3.75);
g.set_repair_time(Line(30, 37), 1.71);
g.set_repair_time(Line(33, 35), 2.89);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 9.5125}, {2, 8.4875}, {3, 16.4}, {4, 20.0875}, {5, 11.3375}, {6, 3.75}, {7, 10}, {8, 15.475}, {9, 21.9}, {10, 12.0125}, {11, 20.85}, {12, 25.05}, {13, 12.975}, {14, 27.05}, {15, 28.9875}, {16, 15.7375}, {17, 15.0875}, {18, 10.475}, {19, 19.275}, {20, 6.25}, {21, 16.9875}, {22, 15.2875}, {23, 17.6}, {24, 17.475}, {25, 8.8375}, {26, 12.5}, {27, 2.5}, {28, 26.3375}, {29, 14.2625}, {30, 9.225}, {31, 17.8}, {32, 9.7875}, {33, 20.9875}, {34, 17.9375}, {35, 11.225}, {36, 10}, {37, 6.725}, {38, 11.25}, {39, 6.725}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 9.5125}, {1, 0}, {2, 16.1125}, {3, 25.9125}, {4, 29.6}, {5, 18.15}, {6, 13.2625}, {7, 19.5125}, {8, 18.1}, {9, 29.525}, {10, 2.5}, {11, 11.3375}, {12, 31.75}, {13, 20.6}, {14, 26.975}, {15, 33.3375}, {16, 8}, {17, 14.4}, {18, 10.6}, {19, 9.7625}, {20, 15.7625}, {21, 9.25}, {22, 22.1}, {23, 25.1}, {24, 21.825}, {25, 18.35}, {26, 18.85}, {27, 12.0125}, {28, 18.6}, {29, 20.6125}, {30, 11.85}, {31, 24.15}, {32, 19.3}, {33, 28.6125}, {34, 19.325}, {35, 18.85}, {36, 16.35}, {37, 14.35}, {38, 20.7625}, {39, 2.7875}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 8.4875}, {1, 16.1125}, {2, 0}, {3, 20.3}, {4, 25.8875}, {5, 19.825}, {6, 12.2375}, {7, 12.7125}, {8, 8.375}, {9, 16.9375}, {10, 18.6125}, {11, 20.275}, {12, 18.275}, {13, 8.0125}, {14, 22.0875}, {15, 24.025}, {16, 24.1125}, {17, 23.575}, {18, 5.5125}, {19, 25.875}, {20, 14.7375}, {21, 25.0875}, {22, 23.775}, {23, 17.5125}, {24, 12.5125}, {25, 17.325}, {26, 11.2625}, {27, 10.9875}, {28, 30.4625}, {29, 13.025}, {30, 4.2625}, {31, 10.675}, {32, 18.275}, {33, 16.025}, {34, 15.0125}, {35, 6.2625}, {36, 8.7625}, {37, 1.7625}, {38, 19.7375}, {39, 15.2125}, 