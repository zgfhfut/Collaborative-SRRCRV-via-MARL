node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 5, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 33, 37,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 2), Line(0, 19), Line(0, 26), Line(0, 37), Line(1, 6), Line(1, 32), Line(1, 34), Line(2, 39), Line(3, 12), Line(3, 15), Line(4, 13), Line(4, 21), Line(4, 24), Line(4, 38), Line(5, 10), Line(5, 14), Line(5, 25), Line(6, 16), Line(7, 8), Line(7, 18), Line(7, 22), Line(7, 27), Line(7, 32), Line(8, 13), Line(8, 34), Line(8, 36), Line(9, 10), Line(9, 26), Line(9, 33), Line(11, 17), Line(12, 25), Line(13, 22), Line(13, 39), Line(14, 28), Line(14, 30), Line(15, 18), Line(16, 31), Line(16, 38), Line(17, 25), Line(17, 26), Line(17, 32), Line(17, 36), Line(18, 21), Line(19, 22), Line(20, 29), Line(20, 38), Line(21, 24), Line(21, 25), Line(21, 33), Line(23, 28), Line(23, 32), Line(26, 35), Line(26, 39), Line(27, 36), Line(28, 35), Line(29, 31), Line(30, 33), Line(31, 34), Line(33, 37), Line(36, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 2), Line(0, 26), Line(1, 6), Line(1, 32), Line(1, 34), Line(2, 39), Line(3, 12), Line(4, 21), Line(5, 14), Line(5, 25), Line(6, 16), Line(7, 8), Line(7, 18), Line(7, 22), Line(7, 27), Line(8, 34), Line(8, 36), Line(9, 10), Line(9, 33), Line(11, 17), Line(12, 25), Line(13, 22), Line(16, 31), Line(17, 25), Line(17, 26), Line(17, 32), Line(17, 36), Line(18, 21), Line(19, 22), Line(20, 38), Line(23, 28), Line(23, 32), Line(26, 39), Line(29, 31), Line(30, 33), Line(33, 37),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 2, 3.6);
g.add_edge(0, 19, 6.32);
g.add_edge(0, 26, 8.54);
g.add_edge(0, 37, 7);
g.add_edge(1, 6, 1.41);
g.add_edge(1, 32, 4.47);
g.add_edge(1, 34, 4.12);
g.add_edge(2, 39, 1.41);
g.add_edge(3, 12, 7.07);
g.add_edge(3, 15, 7.81);
g.add_edge(4, 13, 3.6);
g.add_edge(4, 21, 4);
g.add_edge(4, 24, 1.41);
g.add_edge(4, 38, 6);
g.add_edge(5, 10, 2.23);
g.add_edge(5, 14, 8.94);
g.add_edge(5, 25, 10.63);
g.add_edge(6, 16, 4.24);
g.add_edge(7, 8, 2.82);
g.add_edge(7, 18, 4);
g.add_edge(7, 22, 8.94);
g.add_edge(7, 27, 11.4);
g.add_edge(7, 32, 8.24);
g.add_edge(8, 13, 5.65);
g.add_edge(8, 34, 3.6);
g.add_edge(8, 36, 3);
g.add_edge(9, 10, 4.47);
g.add_edge(9, 26, 2);
g.add_edge(9, 33, 2.23);
g.add_edge(11, 17, 4.12);
g.add_edge(12, 25, 7.28);
g.add_edge(13, 22, 2.82);
g.add_edge(13, 39, 6.08);
g.add_edge(14, 28, 5);
g.add_edge(14, 30, 5.38);
g.add_edge(15, 18, 9.43);
g.add_edge(16, 31, 8);
g.add_edge(16, 38, 7.81);
g.add_edge(17, 25, 2.23);
g.add_edge(17, 26, 2.23);
g.add_edge(17, 32, 8.24);
g.add_edge(17, 36, 5.38);
g.add_edge(18, 21, 4.12);
g.add_edge(19, 22, 5.83);
g.add_edge(20, 29, 4.47);
g.add_edge(20, 38, 3);
g.add_edge(21, 24, 5.09);
g.add_edge(21, 25, 2.82);
g.add_edge(21, 33, 1);
g.add_edge(23, 28, 6.4);
g.add_edge(23, 32, 7.07);
g.add_edge(26, 35, 6.08);
g.add_edge(26, 39, 7.21);
g.add_edge(27, 36, 6.4);
g.add_edge(28, 35, 2.23);
g.add_edge(29, 31, 5.09);
g.add_edge(30, 33, 2.23);
g.add_edge(31, 34, 3);
g.add_edge(33, 37, 1);
g.add_edge(36, 39, 2);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 6.8);
g.set_importance(6, 0);
g.set_importance(7, 0);
g.set_importance(8, 6.53);
g.set_importance(9, 0);
g.set_importance(10, 5.57);
g.set_importance(11, 0);
g.set_importance(12, 0);
g.set_importance(13, 1.95);
g.set_importance(14, 7.08);
g.set_importance(15, 4.02);
g.set_importance(16, 3.59);
g.set_importance(17, 2.68);
g.set_importance(18, 2.18);
g.set_importance(19, 6.17);
g.set_importance(20, 0);
g.set_importance(21, 7.12);
g.set_importance(22, 0);
g.set_importance(23, 3.91);
g.set_importance(24, 2.36);
g.set_importance(25, 9.32);
g.set_importance(26, 5.97);
g.set_importance(27, 0);
g.set_importance(28, 3.28);
g.set_importance(29, 5.03);
g.set_importance(30, 0);
g.set_importance(31, 6.39);
g.set_importance(32, 0);
g.set_importance(33, 6.93);
g.set_importance(34, 0);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 2.98);
g.set_importance(38, 0);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 2), 1.32);
g.set_repair_time(Line(0, 26), 3.99);
g.set_repair_time(Line(1, 6), 4.18);
g.set_repair_time(Line(1, 32), 2.18);
g.set_repair_time(Line(1, 34), 3.66);
g.set_repair_time(Line(2, 39), 2.66);
g.set_repair_time(Line(3, 12), 3.92);
g.set_repair_time(Line(4, 21), 3.85);
g.set_repair_time(Line(5, 14), 1.66);
g.set_repair_time(Line(5, 25), 1.33);
g.set_repair_time(Line(6, 16), 1.36);
g.set_repair_time(Line(7, 8), 2.54);
g.set_repair_time(Line(7, 18), 1.26);
g.set_repair_time(Line(7, 22), 1.88);
g.set_repair_time(Line(7, 27), 3.05);
g.set_repair_time(Line(8, 34), 1.58);
g.set_repair_time(Line(8, 36), 3.36);
g.set_repair_time(Line(9, 10), 1.59);
g.set_repair_time(Line(9, 33), 1.64);
g.set_repair_time(Line(11, 17), 2.91);
g.set_repair_time(Line(12, 25), 2.84);
g.set_repair_time(Line(13, 22), 2.73);
g.set_repair_time(Line(16, 31), 3.36);
g.set_repair_time(Line(17, 25), 4.57);
g.set_repair_time(Line(17, 26), 1.33);
g.set_repair_time(Line(17, 32), 1.66);
g.set_repair_time(Line(17, 36), 4.48);
g.set_repair_time(Line(18, 21), 1.69);
g.set_repair_time(Line(19, 22), 1.17);
g.set_repair_time(Line(20, 38), 1.45);
g.set_repair_time(Line(23, 28), 3.73);
g.set_repair_time(Line(23, 32), 2.2);
g.set_repair_time(Line(26, 39), 3.81);
g.set_repair_time(Line(29, 31), 4.75);
g.set_repair_time(Line(30, 33), 1.77);
g.set_repair_time(Line(33, 37), 4.26);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 22.1625}, {2, 4.5}, {3, 32.7125}, {4, 16.25}, {5, 21.1625}, {6, 23.925}, {7, 16.0375}, {8, 12.5125}, {9, 12.7875}, {10, 18.375}, {11, 18.6125}, {12, 23.875}, {13, 13.8625}, {14, 19.5125}, {15, 28.1875}, {16, 29.225}, {17, 13.4625}, {18, 16.4}, {19, 7.9}, {20, 27.5}, {21, 11.25}, {22, 15.1875}, {23, 29.0625}, {24, 17.6125}, {25, 14.775}, {26, 10.675}, {27, 16.7625}, {28, 21.0625}, {29, 27.125}, {30, 12.7875}, {31, 20.7625}, {32, 23.7625}, {33, 10}, {34, 17.0125}, {35, 18.275}, {36, 8.7625}, {37, 8.75}, {38, 23.75}, {39, 6.2625}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 22.1625}, {1, 0}, {2, 17.6625}, {3, 36.6125}, {4, 21.2125}, {5, 29.55}, {6, 1.7625}, {7, 13.175}, {8, 9.65}, {9, 21.175}, {10, 26.7625}, {11, 21.0375}, {12, 27.775}, {13, 16.7125}, {14, 28.675}, {15, 29.9625}, {16, 7.0625}, {17, 15.8875}, {18, 18.175}, {19, 27.525}, {20, 20.575}, {21, 22.2}, {22, 20.2375}, {23, 14.425}, {24, 22.975}, {25, 18.675}, {26, 18.675}, {27, 21.4}, {28, 22.425}, {29, 15.2625}, {30, 26.2375}, {31, 8.9}, {32, 5.5875}, {33, 23.45}, {34, 5.15}, {35, 25.2125}, {36, 13.4}, {37, 24.7}, {38, 16.825}, {39, 15.9}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 4.5}, {1, 17.6625}, {2, 0}, {3, 31.7125}, {4, 13.8625}, {5, 21.65}, {6, 19.425}, {7, 11.5375}, {8, 8.0125}, {9, 13.275}, {10, 18.8625}, {11, 16.1375}, {12, 22.875}, {13, 9.3625}, {14, 24.0125}, {15, 28.325}, {16, 24.725}, {17, 10.9875}, {18, 16.5375}, {19, 12.4}, {20, 25.1125}, {21, 15.75}, {22, 12.8875}, {23, 29.1625}, {24, 15.625}, {25, 13.775}, {26, 10.775}, {27, 12.2625}, {28, 21.1625}, {29, 22.625}, {30, 17.2875}, {31, 16.2625}, {32, 21.2875}, {33, 14.5}, {34, 12.5125}, {35, 18.375}, {36, 4.2625}, {37, 13.25}, {38, 21.3625}, {39, 1.7625}, 