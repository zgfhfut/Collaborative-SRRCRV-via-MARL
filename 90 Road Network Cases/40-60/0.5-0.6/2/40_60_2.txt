node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 3, 4, 6, 7, 8, 12, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 34, 37, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 14), Line(0, 16), Line(0, 27), Line(0, 28), Line(0, 33), Line(1, 15), Line(1, 28), Line(2, 35), Line(2, 37), Line(3, 15), Line(3, 31), Line(4, 7), Line(4, 18), Line(5, 6), Line(5, 23), Line(6, 10), Line(6, 25), Line(7, 23), Line(8, 16), Line(8, 33), Line(8, 38), Line(9, 20), Line(9, 25), Line(9, 39), Line(10, 24), Line(10, 25), Line(11, 16), Line(11, 32), Line(11, 39), Line(12, 18), Line(12, 19), Line(12, 37), Line(13, 20), Line(13, 39), Line(14, 31), Line(15, 26), Line(17, 30), Line(17, 34), Line(18, 20), Line(18, 27), Line(18, 38), Line(19, 29), Line(20, 23), Line(21, 23), Line(21, 24), Line(21, 30), Line(21, 39), Line(22, 25), Line(22, 29), Line(22, 36), Line(23, 28), Line(24, 27), Line(25, 26), Line(26, 28), Line(27, 34), Line(29, 36), Line(29, 38), Line(32, 35), Line(32, 38), Line(33, 35),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 16), Line(0, 27), Line(0, 28), Line(1, 28), Line(2, 37), Line(3, 31), Line(4, 18), Line(5, 6), Line(5, 23), Line(6, 10), Line(6, 25), Line(7, 23), Line(8, 16), Line(8, 33), Line(9, 25), Line(10, 24), Line(11, 16), Line(11, 32), Line(11, 39), Line(12, 18), Line(12, 37), Line(13, 20), Line(13, 39), Line(14, 31), Line(17, 30), Line(18, 20), Line(18, 38), Line(21, 23), Line(21, 24), Line(21, 30), Line(23, 28), Line(26, 28), Line(29, 36), Line(29, 38), Line(32, 35), Line(32, 38),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 14, 7.81);
g.add_edge(0, 16, 8.54);
g.add_edge(0, 27, 4.12);
g.add_edge(0, 28, 8.54);
g.add_edge(0, 33, 8.6);
g.add_edge(1, 15, 7.28);
g.add_edge(1, 28, 2);
g.add_edge(2, 35, 1);
g.add_edge(2, 37, 4.12);
g.add_edge(3, 15, 1);
g.add_edge(3, 31, 2.23);
g.add_edge(4, 7, 5);
g.add_edge(4, 18, 1.41);
g.add_edge(5, 6, 2);
g.add_edge(5, 23, 10);
g.add_edge(6, 10, 5.65);
g.add_edge(6, 25, 3.16);
g.add_edge(7, 23, 4.24);
g.add_edge(8, 16, 9.48);
g.add_edge(8, 33, 9.21);
g.add_edge(8, 38, 3);
g.add_edge(9, 20, 4.47);
g.add_edge(9, 25, 3.6);
g.add_edge(9, 39, 1);
g.add_edge(10, 24, 5);
g.add_edge(10, 25, 3.16);
g.add_edge(11, 16, 5);
g.add_edge(11, 32, 5);
g.add_edge(11, 39, 2.23);
g.add_edge(12, 18, 7.07);
g.add_edge(12, 19, 3.6);
g.add_edge(12, 37, 9.21);
g.add_edge(13, 20, 9.05);
g.add_edge(13, 39, 5.38);
g.add_edge(14, 31, 6.4);
g.add_edge(15, 26, 4.24);
g.add_edge(17, 30, 1.41);
g.add_edge(17, 34, 4.12);
g.add_edge(18, 20, 7.21);
g.add_edge(18, 27, 5.38);
g.add_edge(18, 38, 6);
g.add_edge(19, 29, 10.29);
g.add_edge(20, 23, 5);
g.add_edge(21, 23, 9.89);
g.add_edge(21, 24, 3.6);
g.add_edge(21, 30, 4.24);
g.add_edge(21, 39, 5.83);
g.add_edge(22, 25, 7.28);
g.add_edge(22, 29, 9);
g.add_edge(22, 36, 10.81);
g.add_edge(23, 28, 5.09);
g.add_edge(24, 27, 1);
g.add_edge(25, 26, 2.23);
g.add_edge(26, 28, 5);
g.add_edge(27, 34, 5);
g.add_edge(29, 36, 9.48);
g.add_edge(29, 38, 8.54);
g.add_edge(32, 35, 7.21);
g.add_edge(32, 38, 7.81);
g.add_edge(33, 35, 6.4);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 1.99);
g.set_importance(4, 3.56);
g.set_importance(5, 0);
g.set_importance(6, 6.76);
g.set_importance(7, 5.55);
g.set_importance(8, 5.55);
g.set_importance(9, 0);
g.set_importance(10, 0);
g.set_importance(11, 0);
g.set_importance(12, 6.56);
g.set_importance(13, 0);
g.set_importance(14, 2.13);
g.set_importance(15, 0);
g.set_importance(16, 3.1);
g.set_importance(17, 3.35);
g.set_importance(18, 0);
g.set_importance(19, 0);
g.set_importance(20, 7.11);
g.set_importance(21, 8.61);
g.set_importance(22, 3.55);
g.set_importance(23, 7.14);
g.set_importance(24, 8.87);
g.set_importance(25, 5.5);
g.set_importance(26, 8.27);
g.set_importance(27, 0);
g.set_importance(28, 8.37);
g.set_importance(29, 0);
g.set_importance(30, 0);
g.set_importance(31, 0);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 7.79);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 3.92);
g.set_importance(38, 0);
g.set_importance(39, 5.07);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 16), 3.69);
g.set_repair_time(Line(0, 27), 1.51);
g.set_repair_time(Line(0, 28), 2.2);
g.set_repair_time(Line(1, 28), 1.96);
g.set_repair_time(Line(2, 37), 1.79);
g.set_repair_time(Line(3, 31), 4.81);
g.set_repair_time(Line(4, 18), 1.52);
g.set_repair_time(Line(5, 6), 2.05);
g.set_repair_time(Line(5, 23), 3.1);
g.set_repair_time(Line(6, 10), 2.23);
g.set_repair_time(Line(6, 25), 4.77);
g.set_repair_time(Line(7, 23), 1.94);
g.set_repair_time(Line(8, 16), 3.95);
g.set_repair_time(Line(8, 33), 2.58);
g.set_repair_time(Line(9, 25), 2.67);
g.set_repair_time(Line(10, 24), 2.04);
g.set_repair_time(Line(11, 16), 1.7);
g.set_repair_time(Line(11, 32), 2.66);
g.set_repair_time(Line(11, 39), 1.51);
g.set_repair_time(Line(12, 18), 4.32);
g.set_repair_time(Line(12, 37), 4.74);
g.set_repair_time(Line(13, 20), 3.18);
g.set_repair_time(Line(13, 39), 4.33);
g.set_repair_time(Line(14, 31), 4.87);
g.set_repair_time(Line(17, 30), 1.32);
g.set_repair_time(Line(18, 20), 3.77);
g.set_repair_time(Line(18, 38), 3.6);
g.set_repair_time(Line(21, 23), 2.93);
g.set_repair_time(Line(21, 24), 1.91);
g.set_repair_time(Line(21, 30), 3.9);
g.set_repair_time(Line(23, 28), 3);
g.set_repair_time(Line(26, 28), 4.23);
g.set_repair_time(Line(29, 36), 3.27);
g.set_repair_time(Line(29, 38), 1);
g.set_repair_time(Line(32, 35), 1.43);
g.set_repair_time(Line(32, 38), 2.3);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 13.175}, {2, 20}, {3, 20.55}, {4, 13.6375}, {5, 22.2125}, {6, 19.7125}, {7, 19.8875}, {8, 22.2625}, {9, 19.4375}, {10, 12.65}, {11, 16.925}, {12, 20.7125}, {13, 24.9125}, {14, 9.7625}, {15, 21.8}, {16, 10.675}, {17, 16.55}, {18, 11.875}, {19, 25.2125}, {20, 20.8875}, {21, 10.9}, {22, 25.7}, {23, 17.0375}, {24, 6.4}, {25, 16.6}, {26, 16.925}, {27, 5.15}, {28, 10.675}, {29, 30.05}, {30, 16.2}, {31, 17.7625}, {32, 23.175}, {33, 10.75}, {34, 11.4}, {35, 18.75}, {36, 39.2125}, {37, 25.15}, {38, 19.375}, {39, 18.1875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 13.175}, {1, 0}, {2, 33.175}, {3, 10.35}, {4, 20.4125}, {5, 17.9875}, {6, 15.4875}, {7, 14.1625}, {8, 33.425}, {9, 16.0375}, {10, 15.4875}, {11, 20.075}, {12, 31.0125}, {13, 24.0125}, {14, 21.1375}, {15, 9.1}, {16, 23.85}, {17, 28.2875}, {18, 22.175}, {19, 35.5125}, {20, 15.1125}, {21, 21.225}, {22, 20.6375}, {23, 8.8625}, {24, 19.575}, {25, 11.5375}, {26, 8.75}, {27, 18.325}, {28, 2.5}, {29, 31.8875}, {30, 26.525}, {31, 13.1375}, {32, 26.325}, {33, 23.925}, {34, 24.575}, {35, 31.925}, {36, 34.15}, {37, 38.325}, {38, 29.675}, {39, 17.2875}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 20}, {1, 33.175}, {2, 0}, {3, 34.3875}, {4, 27.2625}, {5, 31.5}, {6, 29}, {7, 33.5125}, {8, 20.7625}, {9, 20.55}, {10, 29}, {11, 16.5125}, {12, 16.6625}, {13, 26.025}, {14, 29.7625}, {15, 33.1375}, {16, 22.7625}, {17, 33.65}, {18, 25.5}, {19, 21.1625}, {20, 26.1375}, {21, 26.5875}, {22, 34.15}, {23, 32.3875}, {24, 26.4}, {25, 25.05}, {26, 27.8375}, {27, 25.15}, {28, 30.675}, {29, 30.7}, {30, 31.8875}, {31, 37.175}, {32, 10.2625}, {33, 9.25}, {34, 31.4}, {35, 1.25}, {36, 42.55}, {37, 5.15}, {38, 20.025}, {39, 19.3}, 