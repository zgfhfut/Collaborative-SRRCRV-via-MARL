node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 7, 9, 10, 12, 13, 14, 16, 17, 19, 21, 26, 27, 29, 30, 31, 34, 36, 37, 38, 39,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 2), Line(0, 14), Line(0, 16), Line(0, 19), Line(0, 21), Line(0, 34), Line(1, 11), Line(1, 13), Line(2, 13), Line(2, 15), Line(3, 5), Line(3, 7), Line(3, 28), Line(4, 10), Line(4, 17), Line(4, 38), Line(4, 39), Line(5, 12), Line(6, 14), Line(6, 18), Line(7, 11), Line(7, 34), Line(8, 21), Line(8, 31), Line(9, 31), Line(9, 32), Line(9, 36), Line(10, 33), Line(11, 13), Line(11, 16), Line(12, 22), Line(12, 24), Line(13, 26), Line(15, 19), Line(15, 27), Line(16, 28), Line(16, 35), Line(17, 22), Line(17, 34), Line(18, 20), Line(18, 24), Line(19, 21), Line(19, 27), Line(20, 32), Line(22, 30), Line(23, 25), Line(23, 31), Line(23, 33), Line(23, 35), Line(24, 26), Line(24, 31), Line(24, 37), Line(24, 38), Line(25, 29), Line(26, 38), Line(28, 37), Line(29, 34), Line(30, 33), Line(36, 37), Line(38, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 2), Line(0, 14), Line(0, 16), Line(0, 19), Line(1, 11), Line(1, 13), Line(2, 15), Line(3, 5), Line(3, 28), Line(4, 10), Line(4, 38), Line(5, 12), Line(6, 14), Line(6, 18), Line(7, 34), Line(10, 33), Line(11, 13), Line(11, 16), Line(13, 26), Line(16, 28), Line(16, 35), Line(17, 34), Line(18, 20), Line(19, 21), Line(19, 27), Line(22, 30), Line(23, 25), Line(23, 31), Line(23, 35), Line(24, 26), Line(24, 31), Line(26, 38), Line(28, 37), Line(29, 34), Line(30, 33), Line(36, 37),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 2, 3.16);
g.add_edge(0, 14, 3);
g.add_edge(0, 16, 9.43);
g.add_edge(0, 19, 8.06);
g.add_edge(0, 21, 2.23);
g.add_edge(0, 34, 6);
g.add_edge(1, 11, 5.83);
g.add_edge(1, 13, 3.6);
g.add_edge(2, 13, 9.05);
g.add_edge(2, 15, 4.47);
g.add_edge(3, 5, 5);
g.add_edge(3, 7, 8.06);
g.add_edge(3, 28, 4.47);
g.add_edge(4, 10, 3.6);
g.add_edge(4, 17, 7.07);
g.add_edge(4, 38, 4.24);
g.add_edge(4, 39, 3.6);
g.add_edge(5, 12, 3.6);
g.add_edge(6, 14, 3.6);
g.add_edge(6, 18, 6.7);
g.add_edge(7, 11, 1);
g.add_edge(7, 34, 8.24);
g.add_edge(8, 21, 2);
g.add_edge(8, 31, 1);
g.add_edge(9, 31, 2.82);
g.add_edge(9, 32, 3.16);
g.add_edge(9, 36, 4.12);
g.add_edge(10, 33, 4.12);
g.add_edge(11, 13, 3);
g.add_edge(11, 16, 4.24);
g.add_edge(12, 22, 4.12);
g.add_edge(12, 24, 5.38);
g.add_edge(13, 26, 9.05);
g.add_edge(15, 19, 5);
g.add_edge(15, 27, 6.4);
g.add_edge(16, 28, 5.09);
g.add_edge(16, 35, 8.54);
g.add_edge(17, 22, 5.38);
g.add_edge(17, 34, 9.21);
g.add_edge(18, 20, 9.21);
g.add_edge(18, 24, 4.12);
g.add_edge(19, 21, 7.61);
g.add_edge(19, 27, 8);
g.add_edge(20, 32, 7.07);
g.add_edge(22, 30, 4.47);
g.add_edge(23, 25, 7.28);
g.add_edge(23, 31, 7.21);
g.add_edge(23, 33, 5);
g.add_edge(23, 35, 10.29);
g.add_edge(24, 26, 4);
g.add_edge(24, 31, 2);
g.add_edge(24, 37, 4);
g.add_edge(24, 38, 1);
g.add_edge(25, 29, 1.41);
g.add_edge(26, 38, 5);
g.add_edge(28, 37, 3.6);
g.add_edge(29, 34, 7.28);
g.add_edge(30, 33, 3.6);
g.add_edge(36, 37, 6.08);
g.add_edge(38, 39, 6.08);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 0);
g.set_importance(5, 0);
g.set_importance(6, 0);
g.set_importance(7, 1.12);
g.set_importance(8, 0);
g.set_importance(9, 4.97);
g.set_importance(10, 1.65);
g.set_importance(11, 0);
g.set_importance(12, 7.11);
g.set_importance(13, 7.64);
g.set_importance(14, 3.54);
g.set_importance(15, 0);
g.set_importance(16, 6.18);
g.set_importance(17, 6.63);
g.set_importance(18, 0);
g.set_importance(19, 3.55);
g.set_importance(20, 0);
g.set_importance(21, 6.25);
g.set_importance(22, 0);
g.set_importance(23, 0);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 6.8);
g.set_importance(27, 4.04);
g.set_importance(28, 0);
g.set_importance(29, 4.55);
g.set_importance(30, 7.25);
g.set_importance(31, 8.69);
g.set_importance(32, 0);
g.set_importance(33, 0);
g.set_importance(34, 8.64);
g.set_importance(35, 0);
g.set_importance(36, 4.57);
g.set_importance(37, 6.29);
g.set_importance(38, 5.1);
g.set_importance(39, 1.11);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 2), 4.92);
g.set_repair_time(Line(0, 14), 4.76);
g.set_repair_time(Line(0, 16), 3.04);
g.set_repair_time(Line(0, 19), 1.93);
g.set_repair_time(Line(1, 11), 3.39);
g.set_repair_time(Line(1, 13), 4.17);
g.set_repair_time(Line(2, 15), 3.51);
g.set_repair_time(Line(3, 5), 2.41);
g.set_repair_time(Line(3, 28), 4.08);
g.set_repair_time(Line(4, 10), 2.25);
g.set_repair_time(Line(4, 38), 4.35);
g.set_repair_time(Line(5, 12), 4.16);
g.set_repair_time(Line(6, 14), 2.43);
g.set_repair_time(Line(6, 18), 1.65);
g.set_repair_time(Line(7, 34), 4.51);
g.set_repair_time(Line(10, 33), 1.95);
g.set_repair_time(Line(11, 13), 1.45);
g.set_repair_time(Line(11, 16), 2.07);
g.set_repair_time(Line(13, 26), 4.96);
g.set_repair_time(Line(16, 28), 2.47);
g.set_repair_time(Line(16, 35), 4.28);
g.set_repair_time(Line(17, 34), 3.83);
g.set_repair_time(Line(18, 20), 3.89);
g.set_repair_time(Line(19, 21), 3.67);
g.set_repair_time(Line(19, 27), 1.98);
g.set_repair_time(Line(22, 30), 2.46);
g.set_repair_time(Line(23, 25), 2.19);
g.set_repair_time(Line(23, 31), 2.34);
g.set_repair_time(Line(23, 35), 2.19);
g.set_repair_time(Line(24, 26), 3.18);
g.set_repair_time(Line(24, 31), 1.42);
g.set_repair_time(Line(26, 38), 2.27);
g.set_repair_time(Line(28, 37), 2.36);
g.set_repair_time(Line(29, 34), 1.29);
g.set_repair_time(Line(30, 33), 4.88);
g.set_repair_time(Line(36, 37), 2.6);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 19.7625}, {2, 3.95}, {3, 23.7375}, {4, 15.5875}, {5, 20.2625}, {6, 8.25}, {7, 17.8}, {8, 5.2875}, {9, 10.0625}, {10, 20.0875}, {11, 17.0875}, {12, 15.7625}, {13, 15.2625}, {14, 3.75}, {15, 9.5375}, {16, 11.7875}, {17, 19.0125}, {18, 14.1875}, {19, 10.075}, {20, 22.85}, {21, 2.7875}, {22, 20.9125}, {23, 15.55}, {24, 9.0375}, {25, 18.3625}, {26, 14.0375}, {27, 17.5375}, {28, 18.15}, {29, 16.6}, {30, 26.3}, {31, 6.5375}, {32, 14.0125}, {33, 21.8}, {34, 7.5}, {35, 22.4625}, {36, 15.2125}, {37, 14.0375}, {38, 10.2875}, {39, 17.8875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 19.7625}, {1, 0}, {2, 15.8125}, {3, 18.6125}, {4, 27.3625}, {5, 24.8625}, {6, 28.0125}, {7, 8.5375}, {8, 24.5625}, {9, 26.8375}, {10, 31.8625}, {11, 7.2875}, {12, 27.5375}, {13, 4.5}, {14, 23.5125}, {15, 21.4}, {16, 12.5875}, {17, 30.35}, {18, 25.9625}, {19, 27.65}, {20, 37.475}, {21, 22.55}, {22, 32.6875}, {23, 32.325}, {24, 20.8125}, {25, 29.7}, {26, 15.8125}, {27, 29.4}, {28, 18.95}, {29, 27.9375}, {30, 38.275}, {31, 23.3125}, {32, 30.7875}, {33, 37.0125}, {34, 18.8375}, {35, 23.2625}, {36, 31.05}, {37, 23.45}, {38, 22.0625}, {39, 29.6625}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 3.95}, {1, 15.8125}, {2, 0}, {3, 26.3875}, {4, 19.5375}, {5, 24.2125}, {6, 12.2}, {7, 16.3125}, {8, 9.2375}, {9, 14.0125}, {10, 24.0375}, {11, 15.0625}, {12, 19.7125}, {13, 11.3125}, {14, 7.7}, {15, 5.5875}, {16, 15.7375}, {17, 22.9625}, {18, 18.1375}, {19, 11.8375}, {20, 26.8}, {21, 6.7375}, {22, 24.8625}, {23, 19.5}, {24, 12.9875}, {25, 22.3125}, {26, 17.9875}, {27, 13.5875}, {28, 22.1}, {29, 20.55}, {30, 30.25}, {31, 10.4875}, {32, 17.9625}, {33, 25.75}, {34, 11.45}, {35, 26.4125}, {36, 19.1625}, {37, 17.9875}, {38, 14.2375}, {39, 21.8375}, 