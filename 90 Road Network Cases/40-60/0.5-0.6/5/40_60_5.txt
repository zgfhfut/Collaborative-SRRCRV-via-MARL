node_num : 40
demand_node_num : 20
edge_num : 60
damaged_edge_num : 36
/***********************node**************************/
const set<int> node_store = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,  };
/*********************demand_node*********************/
const set<int> demand_node_store = { 4, 5, 6, 7, 8, 10, 11, 13, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 34,  };
/***********************edge**************************/
const set<Line> edge_store = { Line(0, 11), Line(0, 19), Line(0, 31), Line(0, 34), Line(0, 39), Line(1, 8), Line(1, 23), Line(2, 16), Line(2, 33), Line(3, 12), Line(3, 34), Line(3, 38), Line(4, 10), Line(4, 14), Line(5, 7), Line(5, 20), Line(5, 23), Line(6, 21), Line(6, 34), Line(7, 8), Line(7, 18), Line(7, 21), Line(7, 36), Line(8, 24), Line(8, 30), Line(8, 33), Line(9, 29), Line(9, 37), Line(10, 11), Line(10, 17), Line(10, 29), Line(10, 33), Line(11, 25), Line(11, 36), Line(12, 32), Line(13, 28), Line(13, 37), Line(14, 16), Line(14, 17), Line(14, 18), Line(15, 25), Line(15, 33), Line(16, 22), Line(17, 30), Line(17, 32), Line(18, 26), Line(18, 35), Line(18, 39), Line(19, 22), Line(19, 24), Line(20, 27), Line(22, 28), Line(24, 27), Line(24, 36), Line(25, 35), Line(26, 31), Line(26, 35), Line(29, 32), Line(30, 38), Line(32, 39),  };
/********************damaged_node*********************/
const set<Line> damaged_edge_store = { Line(0, 11), Line(0, 19), Line(0, 34), Line(0, 39), Line(1, 23), Line(2, 16), Line(2, 33), Line(3, 12), Line(3, 38), Line(4, 10), Line(5, 7), Line(5, 23), Line(7, 8), Line(7, 21), Line(7, 36), Line(8, 24), Line(8, 30), Line(8, 33), Line(9, 29), Line(10, 17), Line(10, 29), Line(12, 32), Line(13, 28), Line(13, 37), Line(14, 16), Line(14, 17), Line(15, 25), Line(15, 33), Line(18, 35), Line(19, 24), Line(20, 27), Line(24, 36), Line(25, 35), Line(26, 31), Line(29, 32), Line(32, 39),  };
const double demand_num_pro = 0.5;
const double damaged_edge_pro = 0.6;
/*********************add_edge*************************/
g.add_edge(0, 11, 4);
g.add_edge(0, 19, 1);
g.add_edge(0, 31, 7.07);
g.add_edge(0, 34, 2.23);
g.add_edge(0, 39, 2.23);
g.add_edge(1, 8, 7.07);
g.add_edge(1, 23, 1);
g.add_edge(2, 16, 4);
g.add_edge(2, 33, 1.41);
g.add_edge(3, 12, 9.05);
g.add_edge(3, 34, 4.47);
g.add_edge(3, 38, 9.48);
g.add_edge(4, 10, 8.06);
g.add_edge(4, 14, 1.41);
g.add_edge(5, 7, 7.07);
g.add_edge(5, 20, 7.21);
g.add_edge(5, 23, 5.38);
g.add_edge(6, 21, 9.05);
g.add_edge(6, 34, 5);
g.add_edge(7, 8, 8.94);
g.add_edge(7, 18, 1);
g.add_edge(7, 21, 8.06);
g.add_edge(7, 36, 10);
g.add_edge(8, 24, 5);
g.add_edge(8, 30, 3.6);
g.add_edge(8, 33, 2.82);
g.add_edge(9, 29, 8.94);
g.add_edge(9, 37, 5);
g.add_edge(10, 11, 11.31);
g.add_edge(10, 17, 7.61);
g.add_edge(10, 29, 5);
g.add_edge(10, 33, 9.21);
g.add_edge(11, 25, 9.89);
g.add_edge(11, 36, 8.06);
g.add_edge(12, 32, 9.21);
g.add_edge(13, 28, 8.24);
g.add_edge(13, 37, 5);
g.add_edge(14, 16, 5.83);
g.add_edge(14, 17, 1);
g.add_edge(14, 18, 2.23);
g.add_edge(15, 25, 8.94);
g.add_edge(15, 33, 2.23);
g.add_edge(16, 22, 4.12);
g.add_edge(17, 30, 5.83);
g.add_edge(17, 32, 2.82);
g.add_edge(18, 26, 8.24);
g.add_edge(18, 35, 8.24);
g.add_edge(18, 39, 8.54);
g.add_edge(19, 22, 5);
g.add_edge(19, 24, 4.12);
g.add_edge(20, 27, 6.4);
g.add_edge(22, 28, 6.4);
g.add_edge(24, 27, 2.82);
g.add_edge(24, 36, 8.06);
g.add_edge(25, 35, 2);
g.add_edge(26, 31, 8.24);
g.add_edge(26, 35, 8.48);
g.add_edge(29, 32, 6.4);
g.add_edge(30, 38, 5.38);
g.add_edge(32, 39, 5);
/*********************set_importance*************************/
g.set_importance(0, 0);
g.set_importance(1, 0);
g.set_importance(2, 0);
g.set_importance(3, 0);
g.set_importance(4, 3.66);
g.set_importance(5, 7.05);
g.set_importance(6, 1.71);
g.set_importance(7, 4.67);
g.set_importance(8, 3.83);
g.set_importance(9, 0);
g.set_importance(10, 5.47);
g.set_importance(11, 7.95);
g.set_importance(12, 0);
g.set_importance(13, 5.09);
g.set_importance(14, 0);
g.set_importance(15, 0);
g.set_importance(16, 0);
g.set_importance(17, 0);
g.set_importance(18, 6.36);
g.set_importance(19, 8.95);
g.set_importance(20, 8.83);
g.set_importance(21, 7.3);
g.set_importance(22, 1.79);
g.set_importance(23, 7.91);
g.set_importance(24, 0);
g.set_importance(25, 0);
g.set_importance(26, 0);
g.set_importance(27, 0);
g.set_importance(28, 4.94);
g.set_importance(29, 6.96);
g.set_importance(30, 8.43);
g.set_importance(31, 8.32);
g.set_importance(32, 8.67);
g.set_importance(33, 0);
g.set_importance(34, 9.31);
g.set_importance(35, 0);
g.set_importance(36, 0);
g.set_importance(37, 0);
g.set_importance(38, 0);
g.set_importance(39, 0);
/*********************set_repair*************************/
g.set_repair_time(Line(0, 11), 3.87);
g.set_repair_time(Line(0, 19), 4.33);
g.set_repair_time(Line(0, 34), 5);
g.set_repair_time(Line(0, 39), 2.77);
g.set_repair_time(Line(1, 23), 2.12);
g.set_repair_time(Line(2, 16), 2.57);
g.set_repair_time(Line(2, 33), 1.57);
g.set_repair_time(Line(3, 12), 4.13);
g.set_repair_time(Line(3, 38), 4.99);
g.set_repair_time(Line(4, 10), 3.7);
g.set_repair_time(Line(5, 7), 4.19);
g.set_repair_time(Line(5, 23), 3.29);
g.set_repair_time(Line(7, 8), 3.29);
g.set_repair_time(Line(7, 21), 3.8);
g.set_repair_time(Line(7, 36), 2.77);
g.set_repair_time(Line(8, 24), 2.29);
g.set_repair_time(Line(8, 30), 4.91);
g.set_repair_time(Line(8, 33), 4.54);
g.set_repair_time(Line(9, 29), 1.69);
g.set_repair_time(Line(10, 17), 1.99);
g.set_repair_time(Line(10, 29), 3.76);
g.set_repair_time(Line(12, 32), 3.59);
g.set_repair_time(Line(13, 28), 1.67);
g.set_repair_time(Line(13, 37), 2.6);
g.set_repair_time(Line(14, 16), 4.45);
g.set_repair_time(Line(14, 17), 2.32);
g.set_repair_time(Line(15, 25), 4.84);
g.set_repair_time(Line(15, 33), 4.6);
g.set_repair_time(Line(18, 35), 4.06);
g.set_repair_time(Line(19, 24), 1.7);
g.set_repair_time(Line(20, 27), 4.89);
g.set_repair_time(Line(24, 36), 3.84);
g.set_repair_time(Line(25, 35), 2.4);
g.set_repair_time(Line(26, 31), 3.81);
g.set_repair_time(Line(29, 32), 3.55);
g.set_repair_time(Line(32, 39), 1.16);
const double max_allowed_pro0 = 1.25
const map<int, double> max_allowed_dis_store0 = { {0, 0}, {1, 21.4875}, {2, 17.65}, {3, 8.375}, {4, 15.575}, {5, 23.55}, {6, 9.0375}, {7, 14.7125}, {8, 12.65}, {9, 28.2125}, {10, 19.1375}, {11, 5}, {12, 19.6875}, {13, 25.8}, {14, 13.8125}, {15, 18.9625}, {16, 12.65}, {17, 12.5625}, {18, 13.4625}, {19, 1.25}, {20, 17.925}, {21, 20.35}, {22, 7.5}, {23, 22.7375}, {24, 6.4}, {25, 17.3625}, {26, 19.1375}, {27, 9.925}, {28, 15.5}, {29, 17.0375}, {30, 17.15}, {31, 8.8375}, {32, 9.0375}, {33, 16.175}, {34, 2.7875}, {35, 19.8625}, {36, 15.075}, {37, 32.05}, {38, 20.225}, {39, 2.7875}, const double max_allowed_pro1 = 1.25
const map<int, double> max_allowed_dis_store1 = { {0, 21.4875}, {1, 0}, {2, 14.125}, {3, 29.8625}, {4, 22.6125}, {5, 7.975}, {6, 30.525}, {7, 16.8125}, {8, 8.8375}, {9, 41.3}, {10, 23.875}, {11, 26.4875}, {12, 35.6625}, {13, 42.575}, {14, 20.85}, {15, 15.15}, {16, 19.125}, {17, 20.625}, {18, 18.0625}, {19, 20.2375}, {20, 16.9875}, {21, 26.8875}, {22, 24.275}, {23, 1.25}, {24, 15.0875}, {25, 26.325}, {26, 28.3625}, {27, 18.6125}, {28, 32.275}, {29, 30.125}, {30, 13.3375}, {31, 30.325}, {32, 24.15}, {33, 12.3625}, {34, 24.275}, {35, 28.3625}, {36, 25.1625}, {37, 47.55}, {38, 20.0625}, {39, 24.275}, const double max_allowed_pro2 = 1.25
const map<int, double> max_allowed_dis_store2 = { {0, 17.65}, {1, 14.125}, {2, 0}, {3, 26.025}, {4, 14.05}, {5, 22.1}, {6, 26.6875}, {7, 16.325}, {8, 5.2875}, {9, 30.7}, {10, 13.275}, {11, 22.65}, {12, 28.575}, {13, 28.45}, {14, 12.2875}, {15, 4.55}, {16, 5}, {17, 13.5375}, {18, 15.075}, {19, 16.4}, {20, 23.0625}, {21, 26.4}, {22, 10.15}, {23, 15.375}, {24, 11.5375}, {25, 15.725}, {26, 25.375}, {27, 15.0625}, {28, 18.15}, {29, 19.525}, {30, 9.7875}, {31, 26.4875}, {32, 17.0625}, {33, 1.7625}, {34, 20.4375}, {35, 18.225}, {36, 21.6125}, {37, 34.7}, {38, 16.5125}, {39, 20.4375}, 